USE staff99_bookstore;

SET FOREIGN_KEY_CHECKS = 0;
TRUNCATE TABLE addresses;
TRUNCATE TABLE authors;
TRUNCATE TABLE auths;
TRUNCATE TABLE book_author;
TRUNCATE TABLE book_category;
TRUNCATE TABLE book_images;
TRUNCATE TABLE book_tag;
TRUNCATE TABLE books;
TRUNCATE TABLE carts;
TRUNCATE TABLE categories;
TRUNCATE TABLE consumers;
TRUNCATE TABLE files;
TRUNCATE TABLE grades;
TRUNCATE TABLE likes;
TRUNCATE TABLE order_book;
TRUNCATE TABLE orders;
TRUNCATE TABLE payments;
TRUNCATE TABLE point_histories;
TRUNCATE TABLE review_images;
TRUNCATE TABLE reviews;
TRUNCATE TABLE tags;
TRUNCATE TABLE users;
TRUNCATE TABLE wrapper_images;
TRUNCATE TABLE wrappers;

ALTER TABLE addresses
    AUTO_INCREMENT = 1;
ALTER TABLE authors
    AUTO_INCREMENT = 1;
ALTER TABLE auths
    AUTO_INCREMENT = 1;
ALTER TABLE book_author
    AUTO_INCREMENT = 1;
ALTER TABLE book_category
    AUTO_INCREMENT = 1;
ALTER TABLE book_images
    AUTO_INCREMENT = 1;
ALTER TABLE book_tag
    AUTO_INCREMENT = 1;
ALTER TABLE books
    AUTO_INCREMENT = 1;
ALTER TABLE carts
    AUTO_INCREMENT = 1;
ALTER TABLE categories
    AUTO_INCREMENT = 1;
ALTER TABLE consumers
    AUTO_INCREMENT = 1;
ALTER TABLE files
    AUTO_INCREMENT = 1;
ALTER TABLE grades
    AUTO_INCREMENT = 1;
ALTER TABLE likes
    AUTO_INCREMENT = 1;
ALTER TABLE order_book
    AUTO_INCREMENT = 1;
ALTER TABLE orders
    AUTO_INCREMENT = 1;
ALTER TABLE payments
    AUTO_INCREMENT = 1;
ALTER TABLE point_histories
    AUTO_INCREMENT = 1;
ALTER TABLE review_images
    AUTO_INCREMENT = 1;
ALTER TABLE reviews
    AUTO_INCREMENT = 1;
ALTER TABLE tags
    AUTO_INCREMENT = 1;
ALTER TABLE users
    AUTO_INCREMENT = 1;
ALTER TABLE wrapper_images
    AUTO_INCREMENT = 1;
ALTER TABLE wrappers
    AUTO_INCREMENT = 1;

SET FOREIGN_KEY_CHECKS = 1;

-- auth
INSERT INTO auths(auth_name)
VALUES ("USER");
INSERT INTO auths(auth_name)
VALUES ("ADMIN");

-- grade
INSERT INTO grades(grade_name, grade_start_cost, grade_end_cost, grade_ratio)
VALUES ("BASIC", 0, 100000, 1);
INSERT INTO grades(grade_name, grade_start_cost, grade_end_cost, grade_ratio)
VALUES ("ROYAL", 100000, 200000, 2);
INSERT INTO grades(grade_name, grade_start_cost, grade_end_cost, grade_ratio)
VALUES ("GOLD", 200000, 300000, 3);
INSERT INTO grades(grade_name, grade_start_cost, grade_end_cost, grade_ratio)
VALUES ("PLATINUM", 300000, 0, 5);

-- user1
INSERT INTO consumers(consumer_name, consumer_email, consumer_phone, consumer_password)
VALUES ("user1", "user1@naver.com", "01012345678", "1234");
INSERT INTO users(user_id, user_birthdate, grade_id, user_login_at, user_is_inactive, created_at, auth_id, user_point)
VALUES (1, "2022-01-01", 1, "2022-01-01", 0, "2022-01-01", 1, 100000);

UPDATE consumers
SET consumer_password = "$2a$12$rKbLkepB7hmeAnZKlk45gOUb7LHwpw6.7NMrCHMkuB.q1jHegXrki"
WHERE consumer_id = 1;

INSERT INTO addresses(address_general, address_detail, address_alias, address_code, is_default_address, user_id)
VALUES ("대전광역시 유성구 대학로 99", "정보화본부 교육관(N2-1)", "학교", 34134, TRUE, 1);
INSERT INTO addresses(address_general, address_detail, address_alias, address_code, is_default_address, user_id)
VALUES ("서울특별시 종로구 청와대로 1", "영빈관", "집", 03048, FALSE, 1);

-- user2
INSERT INTO consumers(consumer_name, consumer_email, consumer_phone, consumer_password)
VALUES ("user2", "user2@naver.com", "01012345678", "1234");
INSERT INTO users(user_id, user_birthdate, grade_id, user_login_at, user_is_inactive, created_at, auth_id, user_point)
VALUES (2, "2022-01-01", 4, "2022-01-01", 0, "2022-01-01", 1, 500000);

UPDATE consumers
SET consumer_password = "$2a$12$rKbLkepB7hmeAnZKlk45gOUb7LHwpw6.7NMrCHMkuB.q1jHegXrki"
WHERE consumer_id = 2;

INSERT INTO addresses(address_general, address_detail, address_alias, address_code, is_default_address, user_id)
VALUES ("서울특별시 종로구 사직로 161", "경복궁 근정전", "집", 03045, TRUE, 2);
INSERT INTO addresses(address_general, address_detail, address_alias, address_code, is_default_address, user_id)
VALUES ("경기도 성남시 분당구대왕판교로 645번길", "16 (삼평동 629)", "회사", 13487, FALSE, 2);

-- admin
INSERT INTO consumers(consumer_name, consumer_email, consumer_phone, consumer_password)
VALUES ("admin", "admin@naver.com", "01012345678", "1234");
INSERT INTO users(user_id, user_birthdate, grade_id, user_login_at, user_is_inactive, created_at, auth_id, user_point)
VALUES (3, "2022-01-01", 1, "2022-01-01", 0, "2022-01-01", 2, 10000);

UPDATE consumers
SET consumer_password = "$2a$12$rKbLkepB7hmeAnZKlk45gOUb7LHwpw6.7NMrCHMkuB.q1jHegXrki"
WHERE consumer_id = 3;

-- point
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (100000, "WELCOME", '2024-05-07 09:59:05', 1);
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (10, "PURCHASE", '2024-05-08 13:00:05', 1);
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (-10, "REFUND", '2024-05-08 15:19:05', 1);

INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (100000, "WELCOME", '2024-05-06 08:59:05', 2);
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (5, "REVIEW", '2024-05-07 09:59:05', 2);
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (10, "PURCHASE", '2024-05-08 10:06:05', 2);
INSERT INTO point_histories(point_history_value, point_history_type, created_at, user_id) VALUES (-5, "CANCEL", '2024-05-08 11:30:05', 2);

-- 컴퓨터 공학 bestseller 1~50
INSERT INTO `books`
(`book_isbn13`, `book_isbn10`, `book_title`, `book_contents`, `book_description`, `book_publisher`, `book_date`,
 `book_price`, `book_sale_price`, `book_is_packed`, `book_thumbnail_url`, `book_stock`)
VALUES ('9791167960917', 'K152832225',
        '비전공자도 이해할 수 있는 AI 지식 (챗GPT 수록 개정판) - 챗GPT부터 유튜브 추천, 파파고 번역과 내비게이션까지 일상을 움직이는 인공지능 이해하기', '목차
추천사
개정판을 펴내며
들어가며
1 인공지능: 위대한 인공지능, 깨어나다
인간을 이긴 최초의 체스 기계
진정한 인공지능이 등장하다
규칙 기반, 인공지능을 구현하다
머신러닝, 스스로 규칙을 찾아내다
인공지능의 핵심기술, 딥러닝의 등장
데이터, 인공지능의 원유
시스템, GPU가 인공지능을 완성하다
오픈소스, 모두가 참여하는 혁신
일상을 움직이는 AI
2 알파고: 인간을 능가하는 기계의 등장
딥 블루는 어떻게 체스 챔피언이 되었을까?
인공지능, 바둑을 넘보다
도박의 확률을 이용하는 몬테카를로 방법
정책망, 어디에 돌을 내려놓을까?
가치망, 형세를 판단하다
알파고가 수를 두는 방법
신의 한 수
인간은 필요 없다
3 자율주행: 테슬라가 꿈꾸는 기계
자율주행의 시작, 다르파 그랜드 챌린지
자율주행차 스탠리가 우승한 비결은?
자율주행의 공식, 베이즈 정리
센서 전쟁: 레이더, 라이다 그리고 카메라
카메라, 동물의 눈으로 도로를 바라보다
주행 데이터와 모방학습
완전 자율주행은 가능할까?
자율주행의 딜레마, 누구를 희생해야 할까?
자율주행차가 바꿀 미래
4 검색엔진: 구글이 세상을 검색하는 법
검색엔진의 등장
엄청난 돈을 벌어들이다
엄청난 문서를 수집하다
검색엔진은 어떻게 검색할까?
랭킹, 수십 조 가치의 줄 세우기 기술
최신 문서를 찾아서
품질 좋은 문서를 찾아서
페이지 랭크, 구글의 시대를 열다
쿼리에 딱 맞는 문서 찾는 법
검색 결과의 개선을 어떻게 확인할까?
검색엔진 최적화와의 싸움
점점 더 똑똑하게, 구글 MUM
5 스마트 스피커: 시리는 쓸모 있는 비서가 될 수 있을까
인공지능 비서의 탄생
애플 시리, 음성인식 비서의 시대를 열다
아마존 알렉사, 스마트 스피커의 시대를 열다
스마트 스피커는 어떻게 말을 알아들을까?
음성인식, 목소리를 알아듣다
자연어 이해, 의도를 이해하다
다이얼로그 매니저, 명령을 실행하다
딥러닝, 인간보다 더 자연스러운
6 기계번역: 외국어를 몰라도 파파고만 있다면
하루키 번역을 앞선 구글 번역
기계번역의 시작
규칙 기반, 모든 규칙을 정의하다
예시 기반과 통계 기반, 가능성을 보이다
신경망 기반, 자연스러운 번역의 시작
문장을 통째로 압축하기
번역 규칙을 스스로 학습하다
인간을 뛰어넘은 기계번역
7 챗봇: 챗GPT, 1분 안에 보고서 작성해줘
챗봇 이루다는 왜 2주 만에 서비스를 멈췄을까?
컴파일러, 컴퓨터가 인간의 언어를 이해하다
좌표, 기하학을 숫자로 바꾸다
워드투벡, 언어를 숫자로 바꾸다
코사인 거리로 비슷한 단어를 찾다
기계와 자유롭게 대화할 수 있을까?
GPT, 인간을 능가하는 언어 생성 모델
챗GPT와 GPT-4, 챗봇 끝판왕의 등장
기계가 언어를 이해할 수 있을까?
튜링 테스트와 중국어 방
인공지능이 진정한 이해를 묻다
8 내비게이션: 티맵은 어떻게 가장 빠른 길을 알까
내비게이션, 당신의 스마트한 운전 비서
오컴의 면도날 원칙
예측을 좌우하는 데이터
의사결정나무, 단순한 모델의 힘
랜덤 포레스트, 대중의 지혜를 발휘하다
그레이디언트 부스팅, 정답과 거리를 줄여나가다
데이크스트라 알고리즘, 최단 거리 탐색의 비밀
모든 내비게이션이 채택한 A* 알고리즘
내비게이션, 경로 안내 그 이상의 것
9 추천 알고리즘: 알 수 없는 유튜브 알고리즘이 여기로 이끌다
추천 서비스의 역사, 넷플릭스부터 유튜브까지
맥주와 기저귀는 함께 팔린다
10대 소녀의 임신을 예측한 알고리즘
추천 시스템의 시작
협업 필터링, 비슷한 고객을 추천하다
행렬 인수분해, 잠재요인을 찾아내다
딥러닝을 도입한 유튜브 추천 알고리즘
마치며
용어집
미주
펼쳐보기
접어보기',
        '2022년 과학 분야 베스트셀러, 《비전공자도 이해할 수 있는 AI 지식》이 2023년의 가장 거대한 화두, 챗GPT를 다룬 개정판을 출간했다. 챗GPT에 관한 AI 지식을 집중적으로 다룬 내용을 덧붙이고 챗GPT가 어떤 과정을 바탕으로 개발되었는지 그 배경과 원리를 친절하게 전한다.',
        '반니', '2023-04-10', 19800, 17820, 1, 'https://image.aladin.co.kr/product/31451/66/cover/k152832225_1.jpg', 10),
       ('9791169212199', 'K732939411', '개발자 기술 면접 노트 - 18년 차 카카오 면접관의 빅테크 기업 취업/이직 가이드', '목차
[ PART 1 │ 취업과 이직을 위한 서류 준비 ]
CHAPTER 01 취업을 위한 기본 준비물
CHAPTER 02 지원하려는 회사와 목표 정하기
2.1 회사 기본 정보 알아보기
___IT 취업 정보만 알차게 얻기
___스타트업을 목표로 한다면
2.2 나와 핏이 맞는 회사 찾기
2.3 회사별 채용 절차 알아보기
2.4 성장하는 회사 찾아보기
___알아서 정보가 들어오게 만들자
___투자 유치 정보로 급성장 기업을 알아보자
2.5 가장 적절한 이직 시즌
___수시 채용보다는 대규모 공채를 노리자
___계단식 이직을 고려하자
___좀 더 유리한 지원 시기
2.6 경력직을 뽑을 때 중요하게 보는 것
2.7 신입을 뽑을 때 중요하게 보는 것
2.8 신중하게 고민해야 할 채용 공고
CHAPTER 03 취업과 이직을 위한 첫걸음, 이력서와 자기소개서
3.1 이력서 관리와 서류 전형을 위한 준비
___꼭 챙겨야 할 항목
___취업에 도움이 되는 분야별 스킬셋
3.2 지원서에서 나를 돋보이게 만드는 방법
___한눈에 보이는 경력 사항
___능력을 드러내는 숙련도와 학업 표기
___치열하게 준비한 증거, 입상 경력과 교육 사항
___심플하면서도 매력적인 자기소개서
___내부 추천의 기회를 얻는 방법
3.3 [사례 연구 1] 탈락을 부르는 이력서와 지원 사례
CHAPTER 04 시선을 사로잡는 커리어, 경력기술서
4.1 포트폴리오는 왜, 어떻게 적어야 할까
___작성하기 전 기본 유의 사항
___트러블 슈팅 경험을 중심으로
4.2 포트폴리오는 어떤 내용으로 채워야 할까
___깃 잔디 관리
___깃으로 이력서와 포트폴리오 꾸미기
4.3 스터디와 개인 프로젝트
___스터디를 해야 하는 이유
___구체적인 스터디 진행 방법
___소프트웨어 관련 입상 경험 만들기
4.4 결정적인 한 수, 개발자의 킥
___오픈소스 참여하기
___기술 세미나 연사로 참여하기
4.5 [사례 연구 2] 핸디캡을 극복한 합격 사례
[ PART 2 │ 실전에서 마주하는 기술 면접과 코딩 테스트 ]
CHAPTER 05 프로그래머의 역량
CHAPTER 06 코딩 테스트 준비 전략
6.1 기본적인 테스트 준비
___쉬운 문제부터 다양한 형태의 문제로
___계산과 로직, 자료구조를 고려한 훈련
___실행 속도 고려와 더 나은 코드 고민하기
___테스트 검증하기
6.2 기본적으로 알아야 할 알고리즘
___코딩 테스트 유형
___코딩 테스트를 위한 주요 알고리즘
6.3 통과를 위한 키 포인트
___시간 배분
___공부 방법
___회고와 리뷰 그리고 마무리
CHAPTER 07 기술 면접 대비하기
7.1 기술 면접 준비 시작
___채용 공고 뜯어보기
___면접의 시작과 끝
7.2 기술 영역별 공부해야 할 것들
7.3 기본적인 웹 환경의 아키텍처 설명하기
7.4 커리어를 위한 로드맵과 공부해야 할 분야
___백엔드 기술 로드맵
___데브옵스 기술 로드맵
___프런트엔드 기술 로드맵
___그 외의 로드맵에 대해서
7.5 애플리케이션 성능 관리와 대용량 데이터 처리
___성능 테스트를 통해 알 수 있는 것
___장애 처리
___DB 개선
___대용량 테이블의 처리 기법
___비동기 메시지 처리
___부하 분산을 위한 방법
___스케일 아웃과 스케일 업
7.6 API 설계에서 고려해야 할 것들
7.7 배포 시스템 구축 시 고려해야 할 것들
___CI/CD
___배포 프로세스에 필요한 것
___배포 시스템을 만들기 위한 기능 정의
7.8 기술 면접 마무리
7.9 [사례 연구 3] 기술 면접 탈락 사례
CHAPTER 08 기술 면접 이후 만나게 될 난관
8.1 2차 면접은 인성 면접일까? 기술 면접일까?
8.2 정답이 없는 질문과 최선의 답변
8.3 기업 문화 들여다보기
8.4 나는 이 회사와 어울리는 사람일까
___리더십과 그라운드 룰
___나의 역량은 무엇일까
8.5 소프트웨어 품질과 유지보수
___실수를 방지하기 위한 제도적인 장치
___코드의 가독성과 테스트
___코드 리뷰를 더 잘하기 위한 방법
___일정과 품질의 트레이드 오프
___기술 부채 해소하기
8.6 회고와 성장
8.7 처우 협상이 제일 어려웠어요
8.8 Wrap up
8.9 샘플 이력서
펼쳐보기
접어보기',
        '합격하는 포트폴리오는 무엇이 다를까? 기술 면접에서는 어떤 답변이 최선일까? 이 책은 저자가 SI 업체에서 빅테크 기업으로 이직한 경험과 쿠팡과 카카오 면접관으로 임하며 쌓은 인사이트를 바탕으로 IT 기업 취업과 이직 전략을 상세하게 다룬다. 지원자가 알고 있으면 도움이 될 지식과 정보를 면접관의 관점에서 카테고리별로 정리하였다.',
        '한빛미디어', '2024-03-25', 22000, 19800, 1, 'https://image.aladin.co.kr/product/33647/8/cover/k732939411_1.jpg',
        10),
       ('9791190238977', 'K822935456', 'AI 2024 - 트렌드 & 활용백과', '
목차
추천사
머리말_2024년, AI 대전환을 미리 준비하는 최고급 코스
1장 생성형 AI가 열어갈 세상
영화 『인턴』, 그리고 챗GPT
충격의 일주일
생성형 AI를 똑똑하게 활용하려면
챗(Chat), 사람을 불러모은다는 것! | 생성형은 검색이 아니다 | 챗GPT가 문장을 만드는 방법, 트랜스포머 | 생성형 AI는 통계학적 앵무새? 인간 피드백 강화학습
AI 시대, 개인이 할 수 있는 일들
AI 시대, 기업이 할 수 있는 일들
세상을 뒤흔든 챗GPT, 비즈니스의 게임 체인저 | 기업에서 생성형 AI를 도입하는 방식 | 모건스탠리, 블룸버그GPT의 파인튜닝 | API 비즈니스, 원래의 서비스에 더 똑똑한 비서 탑재 | 생성형 AI가 쏘아올린 금융권 AI의 미래, AI 뱅커 | AI 모델 & 나만을 위한 패션 디자이너 | 생성형 AI가 만드는 새로운 소통과 비즈니스 | 스마트 팩토리에 적용된다면? | 내 휴대폰 안의 대화형 AI, 라마-2 | 2군의 강력한 추격 속도 | 전략적 방향성이 필요하다 | 모바일과 생성형 AI 시장, 어떻게 움직일까?
2024년, AI의 실체를 마주하는 원년
AI 비즈니스가 본격화된다 | 아이폰 모먼트와 유사한 ‘생성형 AI 모먼트’ | 맞춤형 거대언어모델(LLM)이 온다 | 개인이 기업이 된다 | 법적, 윤리적 쟁점을 극복할 수 있을까? | 챗봇 네이티브를 준비하라! | 할루시네이션은 해결될까? | 업무에서 사용하는 생성형 AI의 특징별 사용법
2장 생성형 AI의 발전과 동향
코파일럿이 바꿀 업무 환경
마이크로소프트가 보여주는 일의 미래 | MS 워드 코파일럿으로 회의록을 요약, 제안서까지 | 엑셀 데이터 분석, 예측까지 자동으로 | 코파일럿으로 PPT 파일을 단숨에!
윈도우에 코파일럿이 들어간다고?
코딩도 뚝딱, 깃허브 코파일럿
월 1만원 정도에 최고의 코딩 선생님을 옆에
[TIP] 깃허브 코파일럿이 짠 코드, 챗GPT로 쉽게 수정하기
네이버의 새로운 언어모델 하이퍼클로바X
클로바X의 쇼핑 기능 이용하기 | 클로바X의 여행정보 이용하기
사용자의 간지러운 부분을 긁어주는 AI 검색, 네이버 큐:
큐:의 뛰어난 AI 기반 검색 기능 | 큐:로 특정 이슈 정리하기
구글, 반격의 시작?_바드와 연결되기 시작한 구글 앱 서비스
구글 바드의 익스텐션 이용하기 | 유튜브 | 구글 워크스페이스 | 구글 항공편 | 구글 지도 | 구글 익스텐션 직접 실행해 사용하기
진정한 멀티모달 서비스로 진화하는 챗GPT
음성으로 질문과 답변 주고받기 | 이미지를 ‘보고 답하는’ 기능 | 챗GPT의 이미지 인식 기능 실습 | 그래프를 읽어줘, GPT
메타버스에서 만나는 생성형 AI
게임을 위한 엔비디아 에이스 | 생성형 게임 디자인 툴 로블록스 | AI가 애니메이션의 에피소드를, 사우스파크
3장 업무 생산성 향상을 위한 대화형 AI 서비스 7종
대화형 AI 분류법
챗GPT | 빙챗 | 바드 | 클로바X
티키타카 장인 GPT-3.5, 느긋한 똑쟁이 GPT-4
챗GPT-3.5와의 첫 만남 | 챗GPT-4, 무엇이 다른가?
[TIP] 챗GPT를 더 수월하게 쓰는 마법의 프롬프트
검색을 탑재한 빙챗
[TIP] 자동 이메일 쓰기 | 블로그 자동 글쓰기 | 빙챗으로 PDF나 웹사이트 뉴스 요약하기 | 빙챗에서 엑셀, 파워포인트 내용 보기
음유 시인 바드와 함께하기
워크스페이스 실험실 기능 활용한 G메일의 자동 영어 글쓰기
[TIP] 워크스페이스 실험실을 사용하려면?
카카오톡에서 AI 챗봇을, 아숙업(AskUp)
힙합 음악 추천 | 강의안 자동 쓰기 | 시험문제를 올리면 척척 풀어줌
챗GPT를 잘 모르겠다면 따라 써보자, 뤼튼
링크드인 채용 공고 만들기 | 구글 검색 광고 문구 만들기
[TIP] GPT와 바드, 빙 중 어떤 것을 많이 쓰나?
직장인을 위한 업무 비서 웍스AI
복잡한 영어 논문 번역하고 요약하기 | 출장 보고서 초안 작성하기
나만의 데이터로 만드는 AI 어시스턴트, 구루미 AI 스페이스
다양한 AI 모델 미세조정 및 결과 비교하기 | 나만의 AI 어시스턴트 만들기
[TIP] 알아두면 좋은 나만의 챗봇 제작 사이트
대화형 AI 섞어 쓰는 3가지 노하우
[TIP] 여러 언어모델을 한 곳에서 테스트하고 싶다면?
[TIP] 업무에서 사용하는 생성형 AI 특징별 활용법 예시
4장 프롬프트 엔지니어링 한눈에 보기
좋은 질문을 하는 8가지 방법
프롬프트, 질문이 바뀌면 결과가 바뀐다
구조화를 위한 프롬프트 엔지니어링
퓨 샷(Few Shot)을 줘라!
퓨 샷을 사용한 실습 1: 감정 격언 만들기 | 퓨샷을 사용한 실습 2: 삼행시 짓기
이어쓰기 기법
‘이어쓰기’란 단어만으로 뒷글이 자동으로 술술 | Q&A 형식을 이용한 이어쓰기 | Q&A 이어쓰기로 랩 가사 쓰기 | 원하는 답변을 Q&A 형태로 유도하기
페르소나 부여하기[Act as 기법]
여행 가이드 페르소나 | 청소부 페르소나 | 마법 지팡이를 어디서 사는지 아니?
할루시네이션 유도하기
프롬프트에 영 자신 없다면 오픈프롬프트
프롬프트의 보물상자 지피테이블
[TIP] 프롬프트 및 생성형 AI 도구 공유/구매 사이트
[TIP] 비즈니스 보고서의 마법의 프롬프트, 프레임워크
[TIP] 챗GPT로 면접 연습하기
5장 글쓰기를 위한 AI 활용법
동기부여 블로그 글쓰기
[TIP] 구글에 노출이 잘되게 글 바꾸기
유튜브 쇼츠 대본 쓰기
나도 책 쓸 수 있어_기술책&판타지 소설 쓰기
글쓰기가 즐거워지는 라이팅젤
역사 판타지 소설 쓰기 | 시화 만들기
[TIP] 내 전자책을 인터넷 서점에 등록하기
걸그룹 스타일로 작사하기
6장 챗GPT-4 두 배로 활용하기
커스텀 인스트럭션으로 맞춤형 비서 만들기
플러그인으로 GPT 업그레이드하기
일잘러를 위한 플러그인 8종 추천
국내 교통과 날씨: 김비서 | 해외여행 정보: 김비서 & 트립닷컴 | 언어공부: 스피크 | 투자 관련: 불리오 인베스트 | 인터넷 검색: 웹파일럿 | 유튜브 요약: 그래스프 | 쇼핑 검색: 위시 버킷 | 요리: 테이스티 레시피스
고급 데이터 분석, 만능 GPT가 온다
카톡 대화방 단어 분석 | 통계 그래프 그리기 | 그림 인식하기 | 글자 이미지 만들기
[TIP] 고급 데이터 분석 기능으로 PPT 파일로 변환하기
[TIP] 상품 후기 분석도 고급 데이터 분석 기능으로 척척
[TIP] 이젠 파이썬 배울 필요 없을까?
7장 일잘러를 위한 업무별 생산성 AI 툴
마인드맵 그리기, 윔시컬
제목만 주면 자동 마인드맵 그리기
의사결정이 어렵다면 라셔널
PPT 제작을 5분 만에 뚝딱, 감마
[TIP] 알아두면 좋은 PPT 제작 AI 도구
구글 스프레드시트와 GPT의 만남
GPT 함수로 문장 자동으로 바꾸기 | GPT 리스트 이용하기 | 이메일 주소 형식 자동 수정하기 | 휴대폰 번호 형식 자동 수정하기 | API 키를 받는 법
트로우로 유튜브 단번에 요약해 포스팅하기
콘텐츠 기능으로 블로그 글 뚝딱 쓰기 | 트로우가 요약 못할 때 체크포인트
번역이 어렵지 않아요, 딥엘
8장 그리기를 위한 AI 사용법
이미지 생성 AI 분류법
대화형 AI 기반 이미지 서비스 | 모델 편의형 | 서비스 탑재형 | 통합 기능형 | 특화 기능형
실력자는 나야 나, 미드저니
미드저니를 더 편리하게 활용하는 앱 깔기 | 내가 요청한 그림 찾기 | 텍스트로 그림 생성 이매진 | 〈U〉, 〈V〉 단추 활용하기 | 멋진 그림의 프롬프트 가져와 내 그림 생성 | 고화질 삽화 그리기 | 사진을 이용해 삽화 그리기 | 이미지 합성 블렌드 | 디스크라이브로 도시 그리기
[TIP] 미드저니에서 프롬프트 더 잘 쓰는 법
오픈 AI가 만든 달리
멋진 그림의 프롬프트 가져와 이용하기 | 텍스트로 그리기 | 아웃페인팅 활용하기
빙 이미지 크리에이터로 만나는 달리
다른 AI 그림 써먹기, 렉시카
낙서가 그림이 되는 스테이블 두들
간단한 선만으로 스파이더맨 그리기 | 텍스트만으로 원하는 배경 그리기
대화형 AI 빙챗, 아숙업으로 그리기
포토샵과 함께 쓰는 이미지 AI
생성형 채우기(Generative Fill)로 그림 배경 채우기 | 생성형 채우기로 그림 그리기 | 셀카로 찍은 내 사진의 잘린 부분 채우기
[TIP] 자동 채우기 영역을 작게 선택해야 하는 이유
칼로로 그림 그리기
흑백 사진을 컬러 사진으로
인공지능이 그려주는 클립아트, 오토드로우
로고와 글자 디자인을 뚝딱 아이디오그램
AI로 누끼 따고 업스케일링, 픽셀컷
AI로 그림 배경 단숨에 제거하기(누끼) | 화질을 단숨에 더 좋게, 업스케일링
9장 비디오를 위한 AI 사용법
비디오스튜로 유튜브 쇼츠 만들기
챗GPT로 영상 주제/대본 만들기 | 비디오스튜로 20초짜리 유튜브 쇼츠 만들기 | 비디오스튜로 15분 유튜브 영상 만들기 | 웹사이트 자료로 유튜브 쇼츠 만들기 | 템플릿으로 유튜브 쇼츠 만들기
[TIP] 영상 기획에 대해 많이 하는 질문 | 영상 대본은 이렇게! | 유튜브 쇼츠 아이 디어와 주제 선정이 어렵다면
[TIP] 알아두면 좋은 영상제작 AI 도구
텍스트만으로 영상을 만드는 런웨이
[TIP] 내 얼굴이 침팬지로 변하는 영상, 카이버
짧은 배경음악을 작사 작곡까지, 비트봇
[TIP] 가사는 내가 쓰고 AI는 노래와 보컬만, Suno AI
[TIP] 음악 생성 AI의 저작권 문제
더 전문적인 음악생성기 아이바
내 목소리를 넣고 싶다면 플레이HT
말하는 AI 휴먼 만들기 D-ID
[TIP] AI 프레젠터 얼굴을 내 얼굴로 바꾸기
10장 슈퍼 개인이 되자
브랜드와 로고를 뚝딱 네임릭스
1인 사업자를 위한 브랜드 패키지, 테일러 브랜드
아주 간단한 홈페이지를 만드는 믹소
PC/모바일 홈페이지를 한꺼번에, 프레이머
네이버 쇼핑몰을 하고 싶다면 판다랭크
쇼핑몰 상품 동영상 쉽게 만드는 브이캣
밈을 뚝딱 만들어 SNS 홍보, 슈퍼밈
SNS 홍보에 움직이는 캐릭터, 애니메이티드 드로잉스
아바타로 상품 뉴스 동영상을 인스타에
챗GPT+웹파일럿, 헤이젠, 이미지서치
[TIP] 헤이젠 더 강력하게 활용하기
[TIP] 내 얼굴과 목소리 아바타, PPT로 강의 동영상 만들기
챗GPT와 영어회화, 스몰토크
[TIP] 알아두면 좋은 영어회화 연습 AI 도구
에필로그_생성형 AI가 많아서 엄두가 안 난다는 분들께
펼쳐보기
접어보기',
        '절대 놓쳐서는 안 될 2024년 AI 트렌드와 활용법. 10여 년 동안 IT 트렌드의 최전선에서 대중들과 함께 호흡해온 김덕진 IT커뮤니케이션연구소장이 네이버, 구글, MS, 오픈AI 등 빅테크 기업들의 최신 전략을 분석하고, 2024년 산업 트렌드를 예측한다.',
        '스마트북스', '2023-10-25', 22000, 19800, 1, 'https://image.aladin.co.kr/product/32628/53/cover/k822935456_1.jpg',
        10),
       ('9791169212144', 'K722930969', '혼자 공부하는 네트워크 - 1:1 과외하듯 배우는 네트워크 자습서', '목차
Chapter 01 컴퓨터 네트워크 시작하기
01-1 컴퓨터 네트워크를 알아야 하는 이유
네트워크의 네트워크, 인터넷
개발자가 컴퓨터 네트워크를 알아야 하는 이유
- 프로그램을 만드는 업무에서 네트워크 지식을 활용하는 경우
- 프로그램을 유지 보수하는 업무에서 네트워크 지식을 활용하는 경우
2가지 키워드로 정리하는 핵심 포인트
확인 문제
01-2 네트워크 거시적으로 살펴보기
네트워크의 기본 구조
- 호스트
- 네트워크 장비
- 통신 매체
- 메시지
범위에 따른 네트워크 분류
- LAN
- WAN
메시지 교환 방식에 따른 네트워크 분류
- 회선 교환 방식
- 패킷 교환 방식
[좀 더 알아보기] 주소와 송수신지 유형에 따른 전송 방식
6가지 키워드로 정리하는 핵심 포인트
확인 문제
01-3 네트워크 미시적으로 살펴보기
프로토콜
네트워크 참조 모델
- OSI 모델
- TCP/IP 모델
캡슐화와 역캡슐화
- 캡슐화
- 역캡슐화
PDU
[좀 더 알아보기] OSI 7계층, TCP/IP 4계층은 사실 아무것도 해 주지 않는다
[좀 더 알아보기] 트래픽과 네트워크 성능 지표
- 처리율
- 대역폭
- 패킷 손실
7가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 02 물리 계층과 데이터 링크 계층
02-1 이더넷
이더넷 표준
통신 매체 표기 형태
통신 매체 종류
이더넷 프레임
- 프리앰블
- 수신지 MAC 주소와 송신지 MAC 주소
- 타입/길이
- 데이터
- FCS
[좀 더 알아보기] 토큰 링
4가지 키워드로 정리하는 핵심 포인트
확인 문제
02-2 NIC와 케이블
NIC
- NIC의 생김새
- NIC의 역할
트위스티드 페어 케이블
- 트위스티드 페어 케이블의 생김새
- 실드에 따른 트위스티드 페어 케이블의 분류
- 카테고리에 따른 트위스티드 페어 케이블의 분류
광섬유 케이블
- 광섬유 케이블의 생김새
- 싱글 모드 광섬유 케이블
- 멀티 모드 광섬유 케이블
5가지 키워드로 정리하는 핵심 포인트
표로 정리하는 핵심 포인트
확인 문제
02-3 허브
주소 개념이 없는 물리 계층
허브
- 허브의 특징
- 콜리전 도메인
CSMA/CD
5가지 키워드로 정리하는 핵심 포인트
확인 문제
02-4 스위치
스위치
- 스위치의 특징
MAC 주소 학습
VLAN
- 포트 기반 VLAN
- MAC 기반 VLAN
4가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 03 네트워크 계층
03-1 LAN을 넘어서는 네트워크 계층
데이터 링크 계층의 한계
인터넷 프로토콜
- IP 주소 형태
- IP의 기능
- IPv4
- IPv6
ARP
[좀 더 알아보기] IP 단편화를 피하는 방법
7가지 키워드로 정리하는 핵심 포인트
확인 문제
03-2 IP 주소
네트워크 주소와 호스트 주소
클래스풀 주소 체계
클래스리스 주소 체계
- 서브넷 마스크
- 서브네팅: 비트 AND 연산
- 서브넷 마스크 표기: CIDR 표기법
공인 IP 주소와 사설 IP 주소
- 공인 IP 주소
- 사설 IP 주소와 NAT
정적 IP 주소와 동적 IP 주소
- 정적 할당
- 동적 할당과 DHCP
[좀 더 알아보기] 예약 주소: 0.0.0.0 vs 127.0.0.1
9가지 키워드로 정리하는 핵심 포인트
확인 문제
03-3 라우팅
라우터
라우팅 테이블
정적 라우팅과 동적 라우팅
- 정적 라우팅
- 동적 라우팅
라우팅 프로토콜
- IGP: RIP와 OSPF
- EGP: BGP
5가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 04 전송 계층
04-1 전송 계층 개요: IP의 한계와 포트
신뢰할 수 없는 통신과 비연결형 통신
IP의 한계를 보완하는 전송 계층
응용 계층과의 연결 다리, 포트
- 포트의 정의
- 포트의 분류
포트 기반 NAT
- NAT 변환 테이블
- NAPT
[좀 더 알아보기] 포트 포워딩
[좀 더 알아보기] ICMP
6가지 키워드로 정리하는 핵심 포인트
확인 문제
04-2 TCP와 UDP
TCP 통신 단계와 세그먼트 구조
- 제어 비트
- 순서 번호와 확인 응답 번호
TCP 연결 수립과 종료
- 연결 수립: 쓰리 웨이 핸드셰이크
- 연결 종료
TCP 상태
- 연결이 수립되지 않은 상태
- 연결 수립 상태
- 연결 종료 상태
UDP 데이터그램 구조
9가지 키워드로 정리하는 핵심 포인트
확인 문제
04-3 TCP의 오류·흐름·혼잡 제어
오류 제어: 재전송 기법
- 오류 검출과 재전송
- ARQ: 재전송 기법
- Stop-and-Wait ARQ
- Go-Back-N ARQ
- Selective Repeat ARQ
흐름 제어: 슬라이딩 윈도우
혼잡 제어
[좀 더 알아보기] ECN: 명시적 혼잡 알림
6가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 05 응용 계층
05-1 DNS와 자원
도메인 네임과 네임 서버
계층적 네임 서버
자원을 식별하는 URI
- URL
- URN
[좀 더 알아보기] DNS 레코드 타입
7가지 키워드로 정리하는 핵심 포인트
확인 문제
05-2 HTTP
HTTP의 특성
- 요청-응답 기반 프로토콜
- 미디어 독립적 프로토콜
- 스테이트리스 프로토콜
- 지속 연결 프로토콜
HTTP 메시지 구조
HTTP 메서드
- GET - 가져다주세요
- HEAD - 헤더만 가져다주세요
- POST - 처리해 주세요
- PUT - 덮어써 주세요
- PATCH - 일부 수정해 주세요
- DELETE - 삭제해 주세요
HTTP 상태 코드
- 200번대: 성공 상태 코드
- 300번대: 리다이렉션 상태 코드
- 400번대: 클라이언트 에러 상태 코드
- 500번대: 서버 에러 상태 코드
[좀 더 알아보기] HTTP의 발전: HTTP/0.9에서 HTTP/3.0까지
4가지 키워드로 정리하는 핵심 포인트
확인 문제
05-3 HTTP 헤더와 HTTP 기반 기술
HTTP 헤더
- 요청 시 활용되는 HTTP 헤더
- 응답 시 활용되는 HTTP 헤더
- 요청과 응답 모두에서 활용되는 HTTP 헤더
캐시
쿠키
콘텐츠 협상과 표현
4가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 06 실습으로 복습하는 네트워크
06-1 와이어샤크 설치 및 사용법
와이어샤크 설치
- 윈도우
- 맥OS
와이어샤크 사용법
- 패킷 캡처
- 와이어샤크 화면 구성
- 패킷 필터링
- 캡처 파일 저장과 열기
2가지 키워드로 정리하는 핵심 포인트
확인 문제
06-2 와이어샤크를 통한 프로토콜 분석
IP 분석
- IPv4 단편화 + ICMP
- IPv6 단편화 + UDP
TCP 분석
- TCP 연결 수립
- TCP 연결 종료
- TCP 재전송
HTTP 분석
5가지 키워드로 정리하는 핵심 포인트
확인 문제
Chapter 07 네트워크 심화
07-1 안정성을 위한 기술
가용성
이중화
로드 밸런싱
[좀 더 알아보기] 포워드 프록시와 리버스 프록시
4가지 키워드로 정리하는 핵심 포인트
확인 문제
07-2 안전성을 위한 기술
암호와 인증서
- 대칭 키 암호화 방식과 공개 키 암호화 방식
- 인증서와 디지털 서명
HTTPS: SSL과 TLS
8가지 키워드로 정리하는 핵심 포인트
확인 문제
07-3 무선 네트워크
전파와 주파수
와이파이와 802.11
AP와 서비스 셋
9가지 키워드로 정리하는 핵심 포인트
확인 문제
정답 및 해설
찾아보기
펼쳐보기
접어보기
', '개발자의 필수 지식인 네트워크를 기본부터 제대로 학습할 수 있도록 돕는 입문서다. 다수의 네트워크 전공 서적들을 면밀히 분석하고, 방대한 컴퓨터 네트워크 이론 중에서 핵심 내용만 선별해서 담았다.',
        '한빛미디어', '2024-04-12', 28000, 25200, 1, 'https://image.aladin.co.kr/product/33748/38/cover/k722930969_1.jpg',
        10),
       ('9791163035459', 'K712937959',
        '된다! 하루 만에 끝내는 챗GPT 활용법 - 글쓰기, 영어 공부, 유튜브, 수익 창출도 된다! 업무부터 자기 계발까지 활용 범위 넓히기, 전면 개정판', '',
        '용어조차 생소할 초보자를 위해 인공지능에 대한 개념 설명과 챗GPT 가입 방법부터 시작한다. 이어서 실무에 활용할 프롬프트 작성 예제, 저작권 이슈, ‘챗GPT가 먹통일 때 해결 방법’과 같이 많은 분들이 궁금해할 만한 내용까지 Q & A 형식으로 꼼꼼하게 다룬다.',
        '이지스퍼블리싱', '2024-01-29', 17000, 15300, 1, 'https://image.aladin.co.kr/product/33203/55/cover/k712937959_1.jpg',
        10),
       ('9791162243091', 'K932838038', '혼자 공부하는 컴퓨터 구조 + 운영체제 - 1:1 과외하듯 배우는 컴퓨터공학 자습서', '목차
Chapter 01 컴퓨터 구조 시작하기
01-1 구조를 알아야 하는 이유
__문제 해결
__성능, 용량, 비용
[2가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
01-2 컴퓨터 구조의 큰 그림
__컴퓨터가 이해하는 정보
__컴퓨터의 4가지 핵심 부품
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 02 데이터
02-1 0과 1로 숫자를 표현하는 방법
__정보 단위
__이진법
__십육진법
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-2 0과 1로 문자를 표현하는 방법
__문자 집합과 인코딩
__아스키 코드
__EUC-KR
__유니코드와 UTF-8
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 03 명령어
03-1 소스 코드와 명령어
__고급 언어와 저급 언어
__컴파일 언어와 인터프리터 언어
[좀 더 알아보기] 목적 파일 vs 실행 파일
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
03-2 명령어의 구조
__연산 코드와 오퍼랜드
__주소 지정 방식
[좀 더 알아보기] 스택과 큐
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 04 CPU와 작동 원리
04-1 ALU와 제어장치
__ALU
__제어장치
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
04-2 레지스터
__반드시 알아야 할 레지스터
__특정 레지스터를 이용한 주소 지정 방식(1): 스택 주소 지정 방식
__특정 레지스터를 이용한 주소 지정 방식(2): 변위 주소 지정 방식
[좀 더 알아보기] 상용화된 CPU 속 레지스터 및 주소 지정 방식
[8가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
04-3 명령어 사이클과 인터럽트
__명령어 사이클
__인터럽트
[좀 더 알아보기] 예외의 종류
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 05 CPU 성능 향상 기법
05-1 빠른 CPU를 위한 설계 기법
__클럭
__코어와 멀티 코어
__스레드와 멀티스레드
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
05-2 명령어 병렬 처리 기법 1
__명령어 파이프라인
__슈퍼스칼라
__비순차적 명령어 처리
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
05-3 CISC와 RISC
__명령어 집합
__CISC
__RISC
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 06 메모리와 캐시 메모리
06-1 RAM의 특징과 종류
__RAM의 특징
__RAM의 용량과 성능
__RAM의 종류
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
06-2 메모리의 주소 공간
__물리 주소와 논리 주소
__메모리 보호 기법
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
06-3 캐시 메모리
__저장 장치 계층 구조
__캐시 메모리
__참조 지역성 원리
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 07 보조기억장치
07-1 다양한 보조기억장치
__하드 디스크
__플래시 메모리
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
07-2 RAID의 정의와 종류
__RAID의 정의
__RAID의 종류
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 08 입출력장치
08-1 장치 컨트롤러와 장치 드라이버
__장치 컨트롤러
__장치 드라이버
[2가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
08-2 다양한 입출력 방법
__프로그램 입출력
__인터럽트 기반 입출력
__ DMA 입출력
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 09 운영체제 시작하기
09-1 운영체제를 알아야 하는 이유
__운영체제란
__운영체제를 알아야 하는 이유
[2가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
09-2 운영체제의 큰 그림
__운영체제의 심장, 커널
__이중 모드와 시스템 호출
__운영체제의 핵심 서비스
[좀 더 알아보기] 가상 머신과 이중 모드의 발전
[좀 더 알아보기] 시스템 호출의 종류
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 10 프로세스와 스레드
10-1 프로세스 개요
__프로세스 직접 확인하기
__프로세스 제어 블록
__문맥 교환
__프로세스의 메모리 영역
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
10-2 프로세스 상태와 계층 구조
__프로세스 상태
__프로세스 계층 구조
__프로세스 생성 기법
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
10-3 스레드
__프로세스와 스레드
__멀티프로세스와 멀티스레드
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 11 CPU 스케줄링
11-1 CPU 스케줄링 개요
__ 프로세스 우선순위
__스케줄링 큐
__선점형과 비선점형 스케줄링
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
11-2 CPU 스케줄링 알고리즘
__스케줄링 알고리즘의 종류
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 12 프로세스 동기화
12-1 동기화란
__동기화의 의미
__ 생산자와 소비자 문제
__공유 자원과 임계 구역
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
12-2 공유 자원과 임계 구역
__뮤텍스 락
__세마포
__모니터
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 13 교착 상태
13-1 교착 상태란
__식사하는 철학자 문제
__자원 할당 그래프
__교착 상태 발생 조건
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
13-2 교착 상태 해결 방법
__교착 상태 예방
__교착 상태 회피
__교착 상태 검출 후 회복
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 14 가상 메모리
14-1 연속 메모리 할당
__스와핑
__메모리 할당
__외부 단편화
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
14-2 페이징을 통한 가상 메모리 관리
__페이징이란
__페이지 테이블
__페이징에서의 주소 변환
__페이지 테이블 엔트리
[좀 더 알아보기] 페이징의 이점 - 쓰기 시 복사
[좀 더 알아보기] 계층적 페이징
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
14-3 페이지 교체와 프레임 할당
__요구 페이징
__페이지 교체 알고리즘
__스래싱과 프레임 할당
[4가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 15 파일 시스템
15-1 파일과 디렉터리
__파일
__디렉터리
[좀 더 알아보기] 상대 경로를 나타내는 또 다른 방법
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
15-2 파일 시스템
__파티셔닝과 포매팅
__파일 할당 방법
__파일 시스템 살펴보기
[좀 더 알아보기] 저널링 파일 시스템
[좀 더 알아보기] 마운트
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
____정답 및 해설
____찾아보기
펼쳐보기
접어보기',
        '1:1 과외하듯 배우는 IT 지식 입문서. 독학으로 컴퓨터 구조와 운영체제를 배우는 입문자가 ‘꼭 필요한 내용을 제대로 학습’할 수 있도록 구성했다. 뭘 모르는지조차 모르는 입문자의 막연한 마음에 십분 공감하여 과외 선생님이 알려주듯 친절하게, 핵심 내용만 콕콕 집어 준다.',
        '한빛미디어', '2022-08-16', 28000, 25200, 1, 'https://image.aladin.co.kr/product/29901/42/cover/k932838038_1.jpg',
        10),
       ('9791140708819', 'K602939885', '컴퓨터 밑바닥의 비밀 - 컴퓨터 시스템의 본질을 알면 코드의 실마리가 보인다', '목차
1장 프로그래밍 언어부터 프로그램 실행까지, 이렇게 진행된다
1.1 여러분이 프로그래밍 언어를 발명한다면?
__1.1.1 창세기: CPU는 똑똑한 바보
__1.1.2 어셈블리어 등장
__1.1.3 저수준 계층의 세부 사항 대 고수준 계층의 추상화
__1.1.4 가득한 규칙: 고급 프로그래밍 언어의 시작
__1.1.5 〈인셉션〉과 재귀: 코드 본질
__1.1.6 컴퓨터가 재귀를 이해하도록 만들기
__1.1.7 우수한 번역가: 컴파일러
__1.1.8 해석형 언어의 탄생
1.2 컴파일러는 어떻게 작동하는 것일까?
__1.2.1 컴파일러는 그저 일반적인 프로그램일 뿐, 대단하지 않다
__1.2.2 각각의 토큰 추출하기
__1.2.3 토큰이 표현하고자 하는 의미
__1.2.4 생성된 구문 트리에 이상은 없을까?
__1.2.5 구문 트리를 기반으로 중간 코드 생성하기
__1.2.6 코드 생성
1.3 링커의 말할 수 없는 비밀
__1.3.1 링커는 이렇게 일한다
__1.3.2 심벌 해석: 수요와 공급
__1.3.3 정적 라이브러리, 동적 라이브러리, 실행 파일
__1.3.4 동적 라이브러리의 장단점
__1.3.5 재배치: 심벌의 실행 시 주소 결정하기
__1.3.6 가상 메모리와 프로그램 메모리 구조
1.4 컴퓨터 과학에서 추상화가 중요한 이유
__1.4.1 프로그래밍과 추상화
__1.4.2 시스템 설계와 추상화
1.5 요약
2장 프로그램이 실행되었지만, 뭐가 뭔지 하나도 모르겠다
2.1 운영 체제, 프로세스, 스레드의 근본 이해하기
__2.1.1 모든 것은 CPU에서 시작된다
__2.1.2 CPU에서 운영 체제까지
__2.1.3 프로세스는 매우 훌륭하지만, 아직 불편하다
__2.1.4 프로세스에서 스레드로 진화
__2.1.5 다중 스레드와 메모리 구조
__2.1.6 스레드 활용 예
__2.1.7 스레드 풀의 동작 방식
__2.1.8 스레드 풀의 스레드 수
2.2 스레드 간 공유되는 프로세스 리소스
__2.2.1 스레드 전용 리소스
__2.2.2 코드 영역: 모든 함수를 스레드에 배치하여 실행할 수 있다
__2.2.3 데이터 영역: 모든 스레드가 데이터 영역의 변수에 접근할 수 있다
__2.2.4 힙 영역: 포인터가 핵심이다
__2.2.5 스택 영역: 공유 공간 내 전용 데이터
__2.2.6 동적 링크 라이브러리와 파일
__2.2.7 스레드 전용 저장소
2.3 스레드 안전 코드는 도대체 어떻게 작성해야 할까?
__2.3.1 자유와 제약
__2.3.2 스레드 안전이란 무엇일까?
__2.3.3 스레드 전용 리소스와 공유 리소스
__2.3.4 스레드 전용 리소스만 사용하기
__2.3.5 스레드 전용 리소스와 함수 매개변수
__2.3.6 전역 변수 사용
__2.3.7 스레드 전용 저장소
__2.3.8 함수 반환값
__2.3.9 스레드 안전이 아닌 코드 호출하기
__2.3.10 스레드 안전 코드는 어떻게 구현할까?
2.4 프로그래머는 코루틴을 어떻게 이해해야 할까?
__2.4.1 일반 함수
__2.4.2 일반 함수에서 코루틴으로
__2.4.3 직관적인 코루틴 설명
__2.4.4 함수는 그저 코루틴의 특별한 예에 불과하다
__2.4.5 코루틴의 역사
__2.4.6 코루틴은 어떻게 구현될까?
2.5 콜백 함수를 철저하게 이해한다
__2.5.1 모든 것은 다음 요구에서 시작된다
__2.5.2 콜백이 필요한 이유
__2.5.3 비동기 콜백
__2.5.4 비동기 콜백은 새로운 프로그래밍 사고방식으로 이어진다
__2.5.5 콜백 함수의 정의
__2.5.6 두 가지 콜백 유형
__2.5.7 비동기 콜백의 문제: 콜백 지옥
2.6 동기와 비동기를 철저하게 이해한다
__2.6.1 고된 프로그래머
__2.6.2 전화 통화와 이메일 보내기
__2.6.3 동기 호출
__2.6.4 비동기 호출
__2.6.5 웹 서버에서 동기와 비동기 작업
2.7 아 맞다! 블로킹과 논블로킹도 있다
__2.7.1 블로킹과 논블로킹
__2.7.2 블로킹의 핵심 문제: 입출력
__2.7.3 논블로킹과 비동기 입출력
__2.7.4 피자 주문에 비유하기
__2.7.5 동기와 블로킹
__2.7.6 비동기와 논블로킹
2.8 높은 동시성과 고성능을 갖춘 서버 구현
__2.8.1 다중 프로세스
__2.8.2 다중 스레드
__2.8.3 이벤트 순환과 이벤트 구동
__2.8.4 첫 번째 문제: 이벤트 소스와 입출력 다중화
__2.8.5 두 번째 문제: 이벤트 순환과 다중 스레드
__2.8.6 카페는 어떻게 운영되는가: 반응자 패턴
__2.8.7 이벤트 순환과 입출력
__2.8.8 비동기와 콜백 함수
__2.8.9 코루틴: 동기 방식의 비동기 프로그래밍
__2.8.10 CPU, 스레드, 코루틴
2.9 컴퓨터 시스템 여행: 데이터, 코드, 콜백, 클로저에서 컨테이너, 가상 머신까지
__2.9.1 코드, 데이터, 변수, 포인터
__2.9.2 콜백 함수와 클로저
__2.9.3 컨테이너와 가상 머신 기술
2.10 요약
3장 저수준 계층? 메모리라는 사물함에서부터 시작해 보자
3.1 메모리의 본질, 포인터와 참조
__3.1.1 메모리의 본질은 무엇일까? 사물함, 비트, 바이트, 객체
__3.1.2 메모리에서 변수로: 변수의 의미
__3.1.3 변수에서 포인터로: 포인터 이해하기
__3.1.4 포인터의 힘과 파괴력: 능력과 책임
__3.1.5 포인터에서 참조로: 메모리 주소 감추기
3.2 프로세스는 메모리 안에서 어떤 모습을 하고 있을까?
__3.2.1 가상 메모리: 눈에 보이는 것이 항상 실제와 같지는 않다
__3.2.2 페이지와 페이지 테이블: 가상에서 현실로
3.3 스택 영역: 함수 호출은 어떻게 구현될까?
__3.3.1 프로그래머를 위한 도우미: 함수
__3.3.2 함수 호출 활동 추적하기: 스택
__3.3.3 스택 프레임 및 스택 영역: 거시적 관점
__3.3.4 함수 점프와 반환은 어떻게 구현될까?
__3.3.5 매개변수 전달과 반환값은 어떻게 구현될까?
__3.3.6 지역 변수는 어디에 있을까?
__3.3.7 레지스터의 저장과 복원
__3.3.8 큰 그림을 그려 보자, 우리는 지금 어디에 있을까?
3.4 힙 영역: 메모리의 동적 할당은 어떻게 구현될까?
__3.4.1 힙 영역이 필요한 이유
__3.4.2 malloc 메모리 할당자 직접 구현하기
__3.4.3 주차장에서 메모리 관리까지
__3.4.4 여유 메모리 조각 관리하기
__3.4.5 메모리 할당 상태 추적하기
__3.4.6 어떻게 여유 메모리 조각을 선택할 것인가: 할당 전략
__3.4.7 메모리 할당하기
__3.4.8 메모리 해제하기
__3.4.9 여유 메모리 조각을 효율적으로 병합하기
3.5 메모리를 할당할 때 저수준 계층에서 일어나는 일
__3.5.1 천지인과 CPU 실행 상태
__3.5.2 커널 상태와 사용자 상태
__3.5.3 포털: 시스템 호출
__3.5.4 표준 라이브러리: 시스템의 차이를 감춘다
__3.5.5 힙 영역의 메모리가 부족할 때
__3.5.6 운영 체제에 메모리 요청하기: brk
__3.5.7 빙산의 아래: 가상 메모리가 최종 보스다
__3.5.8 메모리 할당의 전체 이야기
3.6 고성능 서버의 메모리 풀은 어떻게 구현될까?
__3.6.1 메모리 풀 대 범용 메모리 할당자
__3.6.2 메모리 풀 기술의 원리
__3.6.3 초간단 메모리 풀 구현하기
__3.6.4 약간 더 복잡한 메모리 풀 구현하기
__3.6.5 메모리 풀의 스레드 안전 문제
3.7 대표적인 메모리 관련 버그
__3.7.1 지역 변수의 포인터 반환하기
__3.7.2 포인터 연산의 잘못된 이해
__3.7.3 문제 있는 포인터 역참조하기
__3.7.4 초기화되지 않은 메모리 읽기
__3.7.5 이미 해제된 메모리 참조하기
__3.7.6 배열 첨자는 0부터 시작한다
__3.7.7 스택 넘침
__3.7.8 메모리 누수
3.8 왜 SSD는 메모리로 사용할 수 없을까?
__3.8.1 메모리 읽기/쓰기와 디스크 읽기/쓰기의 차이
__3.8.2 가상 메모리의 제한
__3.8.3 SSD 사용 수명 문제
3.9 요약
4장 트랜지스터에서 CPU로, 이보다 더 중요한 것은 없다
4.1 이 작은 장난감을 CPU라고 부른다
__4.1.1 위대한 발명
__4.1.2 논리곱, 논리합, 논리부정
__4.1.3 도는 하나를 낳고, 하나는 둘을 낳고, 둘은 셋을 낳으며, 셋은 만물을 낳는다
__4.1.4 연산 능력은 어디에서 나올까?
__4.1.5 신기한 기억 능력
__4.1.6 레지스터와 메모리의 탄생
__4.1.7 하드웨어 아니면 소프트웨어? 범용 장치
__4.1.8 하드웨어의 기본 기술: 기계 명령
__4.1.9 소프트웨어와 하드웨어 간 인터페이스: 명령어 집합
__4.1.10 회로에는 지휘자가 필요하다
__4.1.11 큰일을 해냈다, CPU가 탄생했다!
4.2 CPU는 유휴 상태일 때 무엇을 할까?
__4.2.1 컴퓨터의 CPU 사용률은 얼마인가?
__4.2.2 프로세스 관리와 스케줄링
__4.2.3 대기열 상태 확인: 더 나은 설계
__4.2.4 모든 것은 CPU로 돌아온다
__4.2.5 유휴 프로세스와 CPU의 저전력 상태
__4.2.6 무한 순환 탈출: 인터럽트
4.3 CPU는 숫자를 어떻게 인식할까?
__4.3.1 숫자 0과 양의 정수
__4.3.2 부호 있는 정수
__4.3.3 양수에 음수 기호를 붙이면 바로 대응하는 음수: 부호-크기 표현
__4.3.4 부호-크기 표현의 반전: 1의 보수
__4.3.5 간단하지 않은 두 수 더하기
__4.3.6 컴퓨터 친화적 표현 방식: 2의 보수
__4.3.7 CPU는 정말 숫자를 알고 있을까?
4.4 CPU가 if 문을 만났을 때
__4.4.1 파이프라인 기술의 탄생
__4.4.2 CPU: 메가팩토리와 파이프라인
__4.4.3 if가 파이프라인을 만나면
__4.4.4 분기 예측: 가능한 한 CPU가 올바르게 추측하도록
4.5 CPU 코어 수와 스레드 수 사이의 관계는 무엇일까?
__4.5.1 레시피와 코드, 볶음 요리와 스레드
__4.5.2 작업 분할과 블로킹 입출력
__4.5.3 다중 코어와 다중 스레드
4.6 CPU 진화론(상): 복잡 명령어 집합의 탄생
__4.6.1 프로그래머의 눈에 보이는 CPU
__4.6.2 CPU의 능력 범위: 명령어 집합
__4.6.3 추상화: 적을수록 좋다
__4.6.4 코드도 저장 공간을 차지한다
__4.6.5 필연적인 복잡 명령어 집합의 탄생
__4.6.6 마이크로코드 설계의 문제점
4.7 CPU 진화론(중): 축소 명령어 집합의 탄생
__4.7.1 복잡함을 단순함으로
__4.7.2 축소 명령어 집합의 철학
__4.7.3 복잡 명령어 집합과 축소 명령어 집합의 차이
__4.7.4 명령어 파이프라인
__4.7.5 천하에 명성을 떨치다
4.8 CPU 진화론(하): 절체절명의 위기에서 반격
__4.8.1 이길 수 없다면 함께하라: RISC와 동일한 CISC
__4.8.2 하이퍼스레딩이라는 필살기
__4.8.3 장점은 취하고 약점은 보완하다: CISC와 RISC의 통합
__4.8.4 기술이 전부는 아니다: CISC와 RISC 간 상업적 전쟁
4.9 CPU, 스택과 함수 호출, 시스템 호출, 스레드 전환, 인터럽트 처리 통달하기
__4.9.1 레지스터
__4.9.2 스택 포인터
__4.9.3 명령어 주소 레지스터
__4.9.4 상태 레지스터
__4.9.5 상황 정보
__4.9.6 중첩과 스택
__4.9.7 함수 호출과 실행 시간 스택
__4.9.8 시스템 호출과 커널 상태 스택
__4.9.9 인터럽트와 인터럽트 함수 스택
__4.9.10 스레드 전환과 커널 상태 스택
4.10 요약
5장 작은 것으로 큰 성과 이루기, 캐시
5.1 캐시, 어디에나 존재하는 것
__5.1.1 CPU와 메모리의 속도 차이
__5.1.2 도서관, 책상, 캐시
__5.1.3 공짜 점심은 없다: 캐시 갱신
__5.1.4 세상에 공짜 저녁은 없다: 다중 코어 캐시의 일관성
__5.1.5 메모리를 디스크의 캐시로 활용하기
__5.1.6 가상 메모리와 디스크
__5.1.7 CPU는 어떻게 메모리를 읽을까?
__5.1.8 분산 저장 지원
5.2 어떻게 캐시 친화적인 프로그램을 작성할까?
__5.2.1 프로그램 지역성의 원칙
__5.2.2 메모리 풀 사용
__5.2.3 struct 구조체 재배치
__5.2.4 핫 데이터와 콜드 데이터의 분리
__5.2.5 캐시 친화적인 데이터 구조
__5.2.6 다차원 배열 순회
5.3 다중 스레드 성능 방해자
__5.3.1 캐시와 메모리 상호 작용의 기본 단위: 캐시 라인
__5.3.2 첫 번째 성능 방해자: 캐시 튕김 문제
__5.3.3 두 번째 성능 방해자: 거짓 공유 문제
5.4 봉화희제후와 메모리 장벽
__5.4.1 명령어의 비순차적 실행: 컴파일러와 OoOE
__5.4.2 캐시도 고려해야 한다
__5.4.3 네 가지 메모리 장벽 유형
__5.4.4 획득-해제 의미론
__5.4.5 C++에서 제공하는 인터페이스
__5.4.6 다른 CPU, 다른 천성
__5.4.7 누가 명령어 재정렬에 관심을 가져야 하는가: 잠금 없는 프로그래밍
__5.4.8 잠금 프로그래밍과 잠금 없는 프로그래밍
__5.4.9 명령어 재정렬에 대한 논쟁
5.5 요약
6장 입출력이 없는 컴퓨터가 있을까?
6.1 CPU는 어떻게 입출력 작업을 처리할까?
__6.1.1 전문적으로 처리하기: 입출력 기계 명령어
__6.1.2 메모리 사상 입출력
__6.1.3 CPU가 키보드를 읽고 쓰는 것의 본질
__6.1.4 폴링: 계속 검사하기
__6.1.5 배달 음식 주문과 중단 처리
__6.1.6 인터럽트 구동식 입출력
__6.1.7 CPU는 어떻게 인터럽트 신호를 감지할까?
__6.1.8 인터럽트 처리와 함수 호출의 차이
__6.1.9 중단된 프로그램의 실행 상태 저장과 복원
6.2 디스크가 입출력을 처리할 때 CPU가 하는 일은 무엇일까?
__6.2.1 장치 제어기
__6.2.2 CPU가 직접 데이터를 복사해야 할까?
__6.2.3 직접 메모리 접근
__6.2.4 전 과정 정리
__6.2.5 프로그래머에게 시사하는 것
6.3 파일을 읽을 때 프로그램에는 어떤 일이 발생할까?
__6.3.1 메모리 관점에서 입출력
__6.3.2 read 함수는 어떻게 파일을 읽는 것일까?
6.4 높은 동시성의 비결: 입출력 다중화
__6.4.1 파일 서술자
__6.4.2 다중 입출력을 어떻게 효율적으로 처리하는 것일까?
__6.4.3 상대방이 아닌 내가 전화하게 만들기
__6.4.4 입출력 다중화
__6.4.5 삼총사: select, poll, epoll
6.5 mmap: 메모리 읽기와 쓰기 방식으로 파일 처리하기
__6.5.1 파일과 가상 메모리
__6.5.2 마술사 운영 체제
__6.5.3 mmap 대 전통적인 read/write 함수
__6.5.4 큰 파일 처리
__6.5.5 동적 링크 라이브러리와 공유 메모리
__6.5.6 mmap 직접 조작하기
6.6 컴퓨터 시스템의 각 부분에서 얼마큼 지연이 일어날까?
__6.6.1 시간 지표로 환산
__6.6.2 거리 지표로 환산
6.7 요약
펼쳐보기
접어보기', '코드를 실행하면 컴퓨터 내부에서는 어떤 일이 벌어질까? 운영 체제부터 CPU, 동기화, 입출력을 구현하는 원리까지, 내 코드를 바꿔줄 컴퓨터 밑바닥의 비밀을 들여다보자.', '길벗',
        '2024-03-11', 33000, 29700, 1, 'https://image.aladin.co.kr/product/33564/48/cover/k602939885_1.jpg', 10),
       ('9791140708598', 'K262938458',
        '랭체인으로 LLM 기반의 AI 서비스 개발하기 - 현직 AI Specialist에게 배우는 RAG! 랭체인, 오픈AI API, 스트림릿으로 8가지 서비스 구현까지', '목차
1장 LLM 훑어보기
__1.1 LLM 개념
____1.1.1 언어 모델
____1.1.2 거대 언어 모델
__1.2 LLM 특징과 종류
____1.2.1 LLM의 특징
____1.2.2 LLM의 종류
____1.2.3 LLM과 GAI, SLM
__1.3 LLM 생성 과정
__1.4 LLM 생성 후 추가 고려 사항
2장 LLM 활용하기
__2.1 LLM 활용 방법
____2.1.1 파인튜닝
____2.1.2 RAG
____2.1.3 퓨샷 러닝
__2.2 LLM 활용 시 주의 사항
__2.3 LLM의 한계
3장 RAG 훑어보기
__3.1 RAG 개념
__3.2 RAG 구현 과정
____3.2.1 정보 검색
____3.2.2 심화 정보 검색
____3.2.3 텍스트 생성
__3.3 RAG 구현 시 필요한 것
____3.3.1 데이터
____3.3.2 벡터 데이터베이스
____3.3.3 프레임워크(랭체인)
4장 랭체인 익숙해지기
__4.1 랭체인 훑어보기
__4.2 랭체인을 사용하기 위한 환경 구성
____4.2.1 아나콘다 환경 구성
____4.2.2 필요한 라이브러리 설치
____4.2.3 키 발급
__4.3 랭체인 주요 모듈
____4.3.1 모델 I/O
____4.3.2 데이터 연결
____4.3.3 체인
____4.3.4 메모리
____4.3.5 에이전트/툴
5장 랭체인으로 RAG 구현하기
__5.1 간단한 챗봇 만들기
__5.2 RAG 기반의 챗봇 만들기
__5.3 PDF 요약 웹사이트 만들기
__5.4 독립형 질문 챗봇 만들기
__5.5 대화형 챗봇 만들기
__5.6 번역 서비스 만들기
__5.7 메일 작성기 만들기
__5.8 CSV 파일 분석하기
6장 LLM을 이용한 서비스 알아보기
__6.1 콜센터
__6.2 상품 추천
__6.3 보험 언더라이팅
__6.4 코드 생성 및 리뷰
__6.5 문장 생성, M365 코파일럿
부록 코랩 사용법
__A.1 코랩 사용 방법
__A.2 코랩에 파일 업로드하기
찾아보기
펼쳐보기
접어보기',
        'LLM의 기본 개념부터 동작 원리까지, LLM을 활용할 수 있는 랭체인 사용법은 물론 LLM과 랭체인을 나에게 맞게 사용할 수 있도록 다양한 8가지 실습을 담았다. 랭체인과 오픈AI 등 다양한 AI 서비스를 직접 만들어 볼 수 있다.',
        '길벗', '2024-02-27', 24000, 21600, 1, 'https://image.aladin.co.kr/product/33493/24/cover/k262938458_1.jpg', 10),
       ('9791192987033', 'K402936596', '챗GPT로 만드는 주식 & 암호화폐 자동매매 시스템 - 코딩을 몰라도 누구나 할 수 있는 파이썬 금융 프로그래밍', '목차
추천사 viii
머리말 xi
CHAPTER 01 서론
1.1 금융 프로그래밍의 니즈  3
1.2 챗GPT로부터 얻을 수 있는 것들  4
1.3 금융과 결합한 챗GPT 프로그래밍  5
CHAPTER 02 AI 기술을 만나기 위한 준비
2.1 챗GPT 가입 및 시작  11
2.2 파이썬 셋업  14
__파이썬 설치  15__PyCharm 설치  19
__파이썬 패키지 설치  28
2.3 파이썬 프로그래밍 기초  33
__파이썬 기초 문법  34
__UI 만들어보기  40
__파이썬 코드 만들기  44
__EXE 실행 파일 만들기  48
트레이더와 코딩: 트레이딩에 코딩을 어떻게 사용하나요?  53
CHAPTER 03 챗GPT를 활용한 금융 데이터 수집
3.1 챗GPT 질문법  58
3.2 주식 데이터 수집  60
__주식 데이터 수집 목표 및 질문 구성  61
__챗GPT 답변의 오류 수정하기  66
__최종 수정된 답변으로 데이터 확인하기  71
3.3 암호화폐 데이터 수집  72
__암호화폐 데이터 수집 목표 및 질문 구성  73
__챗GPT 답변으로부터 최종 데이터 확인  76
트레이더와 코딩: 트레이더에게 어느 정도의 코딩 능력이 필요한가요?  77
CHAPTER 04 챗GPT를 활용한 금융 데이터 분석
4.1 텐서플로란?  82
4.2 기초 데이터 분석  83
__상관계수  83
__변동성  84
__챗GPT로 상관계수 분석  87
__챗GPT로 변동성 분석  92
4.3 주식 예측 모델 만들기  98
__주식 예측 모델 정하기  98
__주식 예측 모델에 대한 질문 구성  100
__챗GPT의 주식 가격 예측 데이터 확인  103
4.4 암호화폐 예측 모델 만들기  104
__암호화폐 예측 모델 정하기  104
__암호화폐 예측 모델에 대한 질문 구성  104
__챗GPT의 암호화폐 가격 예측 데이터 확인  108
트레이더와 코딩: 프로그래밍 능력이 커리어에 얼마나 도움을 주는가?  110
CHAPTER 05 실전 시스템 만들기
5.1 주식 종목 추천 시스템 만들기  113
__시스템 구현 목표 정하기  115
__주식 종목 추천 시스템 UI 만들기  116
__UI 연결 변수를 포함한 챗GPT 질문 만들기  124
__챗GPT 질문을 통한 결과 코드  125
__챗GPT로 받은 코드 실행해보기  127
__주식 종목 추천 시스템 EXE 파일 만들기  131
5.2 암호화폐 종목 추천 시스템 만들기  134
__시스템 구현 목표 정하기  134
__암호화폐 종목 추천 시스템 UI 만들기  136
__UI 연결 변수를 포함한 챗GPT 질문 만들기  141
__챗GPT 질문을 통한 결과 코드  142
__챗GPT로 받은 코드 실행해보기  144
__암호화폐 종목 추천 시스템 EXE 파일 만들기  146
트레이더와 코딩: 주식, 파생, 채권 중 개인이 수익을 내기 위해서는 어떤 것에 투자해야 하나요?  150
CHAPTER 06 자동매매 시스템 만들기
6.1 파이썬 32비트 버전 설치하기  156
6.2 증권사 API 사용 방법  162
6.3 주식 자동매매 시스템 개발하기  175
__시스템 구현 목표 정하기  175
__자동매매 시스템 UI 만들기  176
__UI 연결 변수를 포함한 챗GPT 질문 만들기  183
__챗GPT 질문을 통한 결과 코드  184
__챗GPT로 받은 코드 실행해보기  187
__자동매매 시스템 EXE 파일 만들기  190
6.4 업비트 API 사용 방법  193
6.5 암호화폐 자동매매 시스템 개발하기  199
__시스템 구현 목표 정하기  199
__자동매매 시스템 UI 만들기  200
__UI 연결 변수를 포함한 챗GPT 질문 만들기  207
__챗GPT 질문을 통한 결과 코드  208
__챗GPT로 받은 코드 실행해보기  211
__자동매매 시스템 EXE 파일 만들기  214
CHAPTER 07 맺음말
7.1 이 책을 통해서 얻은 것  221
7.2 금융과 챗GPT  222
7.3 챗GPT와 인간  222
찾아보기 225
펼쳐보기
접어보기',
        '코딩을 모르는 사람도 프로그램을 개발할 수 있는 길이 열렸다. 챗GPT에 질문하고, 챗GPT가 만든 코드를 복사해서 붙여넣기만 해도 프로그램이 뚝딱 만들어진다. 중요한 것은 프로그래밍 언어를 아는 것이 아니라, 문제 해결 방식을 떠올리는 것이다.',
        '제이펍', '2023-11-17', 20000, 18000, 1, 'https://image.aladin.co.kr/product/32793/51/cover/k402936596_1.jpg', 10),
       ('9791140706181', 'K182935369', '쿠버네티스 교과서 - 기초부터 운영까지, 실전에 강한 쿠버네티스 사용법!', '목차
1부 쿠버네티스 빠르게 훑어보기
1장 시작하기 전에
1.1 쿠버네티스 이해하기
1.2 이 책의 대상 독자
1.3 실습 환경 만들기
__1.3.1 이 책의 예제 코드 내려받기
__1.3.2 도커 데스크톱 설치하기
__1.3.3 도커 커뮤니티 에디션과 K3s 설치하기
__1.3.4 쿠버네티스 명령행 도구 설치하기
__1.3.5 애저 환경에서 단일 노드 쿠버네티스 클러스터 실행하기
__1.3.6 AWS에서 단일 노드 쿠버네티스 클러스터 실행하기
__1.3.7 생성한 클러스터 확인하기
1.4 바로 활용하기
2장 파드와 디플로이먼트로 컨테이너 실행하기
2.1 쿠버네티스는 어떻게 컨테이너를 실행하고 관리하는가
2.2 컨트롤러 객체와 함께 파드 실행하기
2.3 애플리케이션 매니페스트에 배포 정의하기
2.4 파드에서 실행 중인 애플리케이션에 접근하기
2.5 쿠버네티스의 리소스 관리 이해하기
2.6 연습 문제
3장 네트워크를 통해 서비스에 파드 연결하기
3.1 쿠버네티스 내부의 네트워크 트래픽 라우팅
3.2 파드와 파드 간 통신
3.3 외부 트래픽을 파드로 전달하기
3.4 쿠버네티스 클러스터 외부로 트래픽 전달하기
3.5 쿠버네티스 서비스의 해소 과정
3.6 연습 문제
4장 컨피그맵과 비밀값으로 애플리케이션 설정하기
4.1 쿠버네티스에서 애플리케이션에 설정이 전달되는 과정
4.2 컨피그맵에 저장한 설정 파일 사용하기
4.3 컨피그맵에 담긴 설정값 데이터 주입하기
4.4 비밀값을 이용하여 민감한 정보가 담긴 설정값 다루기
4.5 쿠버네티스의 애플리케이션 설정 관리
4.6 연습 문제
5장 볼륨, 마운트, 클레임을 이용한 데이터 퍼시스턴시
5.1 쿠버네티스에서 컨테이너 파일 시스템이 구축되는 과정
5.2 볼륨과 마운트로 노드에 데이터 저장하기
5.3 전체에서 접근 가능하도록 데이터 저장하기: 영구볼륨과 클레임
5.4 스토리지의 유형과 동적 볼륨 프로비저닝
5.5 스토리지를 선택할 때 고려할 점
5.6 연습 문제
6장 컨트롤러 리소스를 이용한 애플리케이션의 스케일링
6.1 쿠버네티스는 어떻게 애플리케이션을 스케일링하는가
6.2 디플로이먼트와 레플리카셋을 이용한 부하 스케일링
6.3 데몬셋을 이용한 스케일링으로 고가용성 확보하기
6.4 쿠버네티스의 객체 간 오너십
6.5 연습 문제
2부 쿠버네티스 실무에 활용하기
7장 멀티컨테이너 파드를 이용하여 애플리케이션 확장하기
7.1 파드와 컨테이너의 통신
7.2 초기화 컨테이너를 이용한 애플리케이션 시작
7.3 어댑터 컨테이너를 이용한 일관성 있는 애플리케이션 관리
7.4 외부와의 통신을 추상화하기: 앰배서더 컨테이너
7.5 파드 환경 이해하기
7.6 연습 문제
8장 데이터를 많이 다루는 애플리케이션 실행하기: 스테이트풀셋과 잡
8.1 스테이트풀셋을 이용한 안정성 모델링
8.2 스테이트풀셋에서 초기화 컨테이너 활용하기
8.3 볼륨 클레임 템플릿으로 스토리지 요청하기
8.4 잡과 크론잡을 이용한 유지 보수 작업
8.5 유상태 애플리케이션을 위한 플랫폼 선택하기
8.6 연습 문제
9장 롤아웃과 롤백을 이용한 애플리케이션 릴리스 관리
9.1 쿠버네티스의 롤링 업데이트
9.2 롤아웃과 롤백을 이용한 디플로이먼트 업데이트
9.3 디플로이먼트의 롤링 업데이트 설정
9.4 데몬셋과 스테이트풀셋의 롤링 업데이트
9.5 릴리스 전략 이해하기
9.6 연습 문제
10장 헬름을 이용한 애플리케이션 패키징 및 관리
10.1 헬름이 제공하는 기능
10.2 헬름으로 애플리케이션 패키징하기
10.3 차트 간 의존 관계 모델링하기
10.4 헬름으로 설치한 릴리스의 업그레이드와 롤백
10.5 헬름은 어떤 상황에 적합한가
10.6 연습 문제
11장 애플리케이션 개발: 개발 워크플로와 CI/CD
11.1 도커 개발 워크플로
11.2 쿠버네티스 개발 워크플로
11.3 컨텍스트와 네임스페이스를 이용하여 워크로드 분리하기
11.4 도커를 배제한 쿠버네티스의 지속적 전달
11.5 쿠버네티스 환경의 개발자 워크플로 평가하기
11.6 연습 문제
3부 운영 환경으로 가자
12장 자기수복형 애플리케이션 활용하기
12.1 정상 파드에만 트래픽 라우팅하기: 레디니스 프로브
12.2 고장을 일으킨 파드 재시작하기: 리브니스 프로브
12.3 헬름을 이용한 안전한 애플리케이션 업데이트
12.4 계산 리소스를 관리하여 애플리케이션 및 노드 보호하기
12.5 자기수복형 애플리케이션의 한계점
12.6 연습 문제
13장 플루언트디와 일래스틱서치를 이용한 중앙화된 로그 관리
13.1 쿠버네티스의 로그 관리
13.2 플루언트디를 이용한 로그 파일 수집
13.3 수집된 로그를 일래스틱서치에 저장하기
13.4 로그 파싱 및 필터링하기
13.5 쿠버네티스에 적용할 수 있는 그 외 로그 모델
13.6 연습 문제
14장 프로메테우스를 이용한 쿠버네티스 및 애플리케이션 모니터링
14.1 프로메테우스가 쿠버네티스 애플리케이션을 모니터링하는 과정
14.2 프로메테우스 클라이언트 라이브러리가 사용된 애플리케이션 모니터링하기
14.3 측정값 추출기를 이용한 모니터링
14.4 쿠버네티스 객체와 컨테이너 모니터링하기
14.5 모니터링을 위한 투자의 방향성
14.6 연습 문제
15장 인그레스를 이용한 인입 트래픽 관리
15.1 인그레스의 라우팅 과정
15.2 인그레스 규칙을 이용한 HTTP 트래픽 라우팅
15.3 인그레스 컨트롤러 비교하기
15.4 인그레스를 사용하여 HTTPS 적용하기
15.5 인그레스 및 인그레스 컨트롤러의 이해
15.6 연습 문제
16장 폴리시, 컨텍스트, API 접근 제어를 이용한 애플리케이션 보안
16.1 네트워크 폴리시를 이용하여 컨테이너 통신 제약하기
16.2 보안 컨텍스트를 이용하여 컨테이너 기능 제약하기
16.3 웹훅을 이용한 워크로드의 차단 또는 변경하기
16.4 오픈 폴리시 에이전트를 이용한 어드미션 컨트롤
16.5 쿠버네티스의 보안 그 깊은 곳
16.6 연습 문제
4부 고급 쿠버네티스 사용법
17장 역할 기반 접근 제어를 이용한 리소스 보안
17.1 쿠버네티스 리소스에 대한 접근 제어하기
17.2 클러스터 내부의 리소스 접근 제어하기
17.3 사용자나 서비스 계정 또는 그 그룹에 롤을 부여하기
17.4 서드파티 플러그인을 사용한 권한 부여 검증하기
17.5 RBAC 전략 구상하기
17.6 연습 문제
18장 쿠버네티스 배치하기: 다중 노드 혹은 다중 아키텍처 클러스터
18.1 쿠버네티스 클러스터의 구조
18.2 컨트롤플레인 초기화하기
18.3 노드를 추가하고 클러스터에서 애플리케이션 실행하기
18.4 윈도우 노드를 추가하고 하이브리드 애플리케이션 실행하기
18.5 쿠버네티스 클러스터를 확장할 때 고려할 것
18.6 연습 문제
19장 워크로드의 배치 조정과 자동 스케일링
19.1 쿠버네티스의 워크로드 배치 과정
19.2 어피니티 및 안티어피니티를 이용한 파드 배정 지정
19.3 자동 스케일링을 이용하여 처리 용량 제어
19.4 선점과 우선순위를 이용한 리소스 보호
19.5 워크로드 관리의 메커니즘 이해
19.6 연습 문제
20장 사용자 정의 리소스와 오퍼레이터를 이용하여 쿠버네티스 확장하기
20.1 사용자 정의 리소스를 이용한 쿠버네티스 확장하기
20.2 사용자 정의 컨트롤러를 이용한 워크플로 트리거
20.3 오퍼레이터를 이용한 서드파티 컴포넌트 관리하기
20.4 오퍼레이터 직접 작성하기
20.5 쿠버네티스의 기능 확장이 필요한 시점은 언제일까
20.6 연습 문제
21장 쿠버네티스에서 서버리스 펑션 실행하기
21.1 서버리스 플랫폼의 동작 원리
21.2 HTTP 요청을 통해 서버리스 펑션 호출하기
21.3 서버리스 펑션 호출하기: 이벤트 트리거와 스케줄 트리거
21.4 Serverless를 이용하여 서버리스 펑션 추상화하기
21.5 서버리스 펑션의 용도 이해하기
21.6 연습 문제
22장 끝없는 정진
22.1 장별 추가 학습 자료
22.2 어떤 쿠버네티스 플랫폼을 선택해야 할까
22.3 쿠버네티스의 개발 프로세스
22.4 커뮤니티 참여하기
부록은 무료 전자책으로 제공합니다. 온라인 서점 eBook 코너에서 ‘쿠버네티스 교과서’로 검색하면 찾을 수 있습니다.
부록 A. 애플리케이션 소스 코드에서 도커 이미지까지
부록 B. 컨테이너 모니터링으로 투명성 있는 애플리케이션 만들기
부록 C. 컨테이너의 애플리케이션 설정 관리
부록 D. 도커를 이용한 로그 생성 및 관리
펼쳐보기
접어보기',
        '쿠버네티스는 지금도 변화 중이고 거대한 기능을 갖춘 강력한 플랫폼이다. 그만큼 학습하기에 쉽지 않은 대상이기도 하다. 저자는 다년간의 교육과 워크숍에서 찾은 효과적인 학습 과정을 바탕으로 이 책을 구성했다.',
        '길벗', '2023-08-30', 44000, 39600, 1, 'https://image.aladin.co.kr/product/32340/48/cover/k182935369_1.jpg', 10),
       ('9791196918033', 'K662631176', '비전공자를 위한 이해할 수 있는 IT 지식 - IT시대의 필수 교양서', '목차
프롤로그   4
1장 오리엔테이션
1-1. 왜 자꾸 파이썬(Python)을 배우라고 하는 거죠? (feat. C 언어, 자바(JAVA)를 배워봐)   14
1-2. 가장 먼저 알아야 할 지식은 ‘프로그래밍 언어’가 아닙니다   21
2장 프로그래밍 언어 & 운영체제(OS)
2-1. 프로그래밍 언어가 ‘언어’라고?(못	알아듣겠는데…)   32
2-2. 개발자는 앉아서 뭐하는 거지(뭔가 치긴 치는데…)   37
2-3. 뭐가 이렇게 많아?(C 언어, 자바, 파이썬… 등)   41
2-4. 컴퓨터 구매해보셨나요?(컴퓨터의 구성 요소)   47
2-5. 우린 왜 이 이야기들이 낯설까?   51
2-6. 우리가 자바 최신 버전을 설치해야 하는 이유   55
3장 네트워크, 클라이언트, 서버
3-1. 국민학교와 초등학교 시절 이야기   62
3-2. 한강에서 카카오톡을 다운로드하고, 실행하면 일어나는 일들   66
3-3. 당신은 계속 뭘 달라고 하고, 누군가는 계속 뭘 준다   70
3-4. 도대체 우분투가 뭐죠?   75
3-5. 개인 서버를 운영하면 힘든 이유   84
4장 API와 JSON
4-1. POST는 뭐고, GET은 뭐죠?(feat. 개발자의 암호문)   90
4-2. 요청과 응답을 주고 받을 때의 형식   104
4-3. API 문서 살펴보기   112
5장 애플리케이션
5-1. 설치한 뒤 실행하는 애플리케이션의 특징   120
6장 웹(Web)
6-1. 웹은 어떻게 이루어져 있고, 어떻게 동작할까?   128
6-2. 웹 개발하다가 못해 먹겠다고 말하는 이유   143
6-3. 반응형으로 코딩하면, 더 비싸나요?(그게 뭔데요?)   148
6-4. 애플리케이션 이야기를 하는데, 왜 자꾸 웹 개발자에게 말하라는 거죠?   153
7장 데이터베이스와 이미지 처리
7-1. 쇼핑몰을 생각해봅니다. 여기서 데이터는 대체 뭘까요?   162
7-2. 클라가 들고 있다는 게 뭐죠?(클라에 저장돼요. 클라가 가지고 있어요)   169
7-3. 배너 좀 바꾸려는데, 자꾸 자기한테 말하면 안 된대요. (왜 자꾸 사람이 바뀌는 건데…)   175
8장 프레임워크와 라이브러리
8-1. 코코아요? 그거 먹는거잖아요. 그리고 자꾸 왜 도서관 얘기를 하는거죠?(프레임워크, 라이브러리)   186
9장 협업, 소스관리, 디자인
9-1. 커밋이요? 머지요? 뭐요?   198
9-2. 왜 말을 저렇게하지.. 둘이 싸웠나?(feat. 디자이너와 개발자)   204
10장 정리
10-1. 개발을 시작하면 일어나는 일들   214
10-2. 아웃트로   222
부록- API 문서를 통해 서비스 분석하기   226
펼쳐보기
접어보기',
        '비전공자를 위한 ''IT 기초 문법서''로, 한 번쯤 들어봤을 프로그래밍 언어, 운영체제, 네트워크, API, JSON, 데이터베이스, 이미지 처리, 프레임워크, 라이브러리, 깃(Git), 디자인 이슈 등 다양한 지식을 담고 있다.',
        'T.W.I.G(티더블유아이지)(주)', '2020-07-14', 16800, 15120, 1,
        'https://image.aladin.co.kr/product/24606/45/cover/k662631176_1.jpg', 10),
       ('9791165219529', 'K382837902', '면접을 위한 CS 전공지식 노트 - 디자인 패턴, 운영체제, 데이터베이스, 자료 구조, 네트워크, 개발자 면접', '목차
1장. 디자인 패턴과 프로그래밍 패러다임
1.1 디자인 패턴
__1.1.1 싱글톤 패턴
__1.1.2 팩토리 패턴
__1.1.3 전략 패턴
__1.1.4 옵저버 패턴
__1.1.5 프록시 패턴과 프록시 서버
__1.1.6 이터레이터 패턴
__1.1.7 노출모듈 패턴
__1.1.8 MVC 패턴
__1.1.9 MVP 패턴
__1.1.10 MVVM 패턴
1.2 프로그래밍 패러다임
__1.2.1 선언형과 함수형 프로그래밍
__1.2.2 객체지향 프로그래밍
__1.2.3 절차형 프로그래밍
__1.2.4 패러다임의 혼합
예상 질문
2장. 네트워크
2.1 네트워크의 기초
__2.1.1 처리량과 지연 시간
__2.1.2 네트워크 토폴로지와 병목 현상
__2.1.3 네트워크 분류
__2.1.4 네트워크 성능 분석 명령어
__2.1.5 네트워크 프로토콜 표준화
2.2 TCP/IP 4계층 모델
__2.2.1 계층 구조
__2.2.2 PDU
2.3 네트워크 기기
__2.3.1 네트워크 기기의 처리 범위
__2.3.2 애플리케이션 계층을 처리하는 기기
__2.3.3 인터넷 계층을 처리하는 기기
__2.3.4 데이터 링크 계층을 처리하는 기기
__2.3.5 물리 계층을 처리하는 기기
2.4 IP 주소
__2.4.1 ARP
__2.4.2 홉바이홉 통신
__2.4.3 IP 주소 체계
__2.4.4 IP 주소를 이용한 위치 정보
2.5 HTTP
__2.5.1 HTTP/1.0
__2.5.2 HTTP/1.1
__2.5.3 HTTP/2
__2.5.4 HTTPS
__2.5.5 HTTP/3
예상 질문
3장. 운영체제
3.1 운영체제와 컴퓨터
__3.1.1 운영체제의 역할과 구조
__3.1.2 컴퓨터의 요소
3.2 메모리
__3.2.1 메모리 계층
__3.2.2 메모리 관리
3.3 프로세스와 스레드
__3.3.1 프로세스와 컴파일 과정
__3.3.2 프로세스의 상태
__3.3.3 프로세스의 메모리 구조
__3.3.4 PCB
__3.3.5 멀티프로세싱
__3.3.6 스레드와 멀티스레딩
__3.3.7 공유 자원과 임계 영역
__3.3.8 교착 상태
3.4 CPU 스케줄링 알고리즘
__3.4.1 비선점형 방식
__3.4.2 선점형 방식
예상 질문
4장. 데이터베이스
4.1 데이터베이스의 기본
__4.1.1 엔터티
__4.1.2 릴레이션
__4.1.3 속성
__4.1.4 도메인
__4.1.5 필드와 레코드
__4.1.6 관계
__4.1.7 키
4.2 ERD와 정규화 과정
__4.2.1 ERD의 중요성
__4.2.2 예제로 배우는 ERD
__4.2.3 정규화 과정
4.3 트랜잭션과 무결성
__4.3.1 트랜잭션
__4.3.2 무결성
__4.4 데이터베이스의 종류
__4.4.1 관계형 데이터베이스
__4.4.2 NoSQL 데이터베이스
4.5 인덱스
__4.5.1 인덱스의 필요성
__4.5.2 B-트리
__4.5.3 인덱스 만드는 방법
__4.5.4 인덱스 최적화 기법
4.6 조인의 종류
__4.6.1 내부 조인
__4.6.2 왼쪽 조인
__4.6.3 오른쪽 조인
__4.6.4 합집합 조인
4.7 조인의 원리
__4.7.1 중첩 루프 조인
__4.7.2 정렬 병합 조인
__4.7.3 해시 조인
예상 질문
5장. 자료 구조
5.1 복잡도
__5.1.1 시간 복잡도
__5.1.2 공간 복잡도
__5.1.3 자료 구조에서의 시간 복잡도
5.2 선형 자료 구조
__5.2.1 연결 리스트
__5.2.2 배열
__5.2.3 벡터
__5.2.4 스택
__5.2.5 큐
5.3 비선형 자료 구조
__5.3.1 그래프
__5.3.2 트리
__5.3.3 힙
__5.3.4 우선순위 큐
__5.3.5 맵
__5.3.6 셋
__5.3.7 해시 테이블
예상 질문
6장. 포트폴리오와 면접
6.1 포트폴리오
__6.1.1 첫 문장이 중요하다
__6.1.2 숫자로 말하라
__6.1.3 기술의 숙련도를 나눠서 표기하라
__6.1.4 리드미를 잘 작성하라
__6.1.5 오픈 소스 컨트리뷰터가 되자
__6.1.6 블로깅을 하자
6.2 면접
__6.2.1 꼬리에 꼬리를 무는 질문
__6.2.2 대답을 바꾸지 말자
__6.2.3 모르는 것은 모르는 것
__6.2.4 압박을 버텨라
__6.2.5 공식 사이트를 봐라
__6.2.6 또렷한 발음으로
__6.2.7 장점, 단점, 차이는 필수다
__6.2.8 업무를 예측하라
__6.2.9 체크리스트를 만들어 준비하라
__6.2.10 인성 면접
펼쳐보기
접어보기',
        '디자인 패턴, 네트워크, 운영체제, 데이터베이스, 자료 구조 등 면접에 필요한 CS 전공지식을 모두 담고 있다. 200여 개의 그림과 코드로 이론을 자세히 설명하고, 실무 활용법을 함께 다뤄 이론과 실무를 놓치지 않고 학습할 수 있도록 구성했다.',
        '길벗', '2022-04-28', 24000, 21600, 1, 'https://image.aladin.co.kr/product/29281/57/cover/k382837902_1.jpg', 10),
       ('9788966263158', '8966263151', '가상 면접 사례로 배우는 대규모 시스템 설계 기초', '목차
옮긴이의 글
지은이의 글
1장 사용자 수에 따른 규모 확장성
2장 개략적인 규모 추정
3장 시스템 설계 면접 공략법
4장 처리율 제한 장치의 설계
5장 안정 해시 설계
6장 키-값 저장소 설계
7장 분산 시스템을 위한 유일 ID 생성기 설계
8장 URL 단축기 설계
9장 웹 크롤러 설계
10장 알림 시스템 설계
11장 뉴스 피드 시스템 설계
12장 채팅 시스템 설계
13장 검색어 자동완성 시스템
14장 유튜브 설계
15장 구글 드라이브 설계
16장 배움은 계속된다
펼쳐보기
접어보기',
        '16가지 실제 시스템 설계 면접 문제와 상세한 답안을 제시한다. 시스템 동작 원리를 시각적으로 보여 주는 188개의 도해로 설명하면서 4단계 접근법으로 면접 문제를 풀 수 있도록 돕는다. 이 책을 통해 면접관이 평가하려는 항목과 그 이유를 내부자 관점에서 들을 수 있다.',
        '인사이트', '2021-07-28', 24000, 21600, 1, 'https://image.aladin.co.kr/product/27604/17/cover/8966263151_1.jpg',
        10),
       ('9788970509716', '8970509712', 'C언어로 쉽게 풀어쓴 자료구조 - 개정 3판', '목차
Chapter 01 자료구조와 알고리즘
1.1 자료구조와 알고리즘
1.2 추상 자료형
1.3 알고리즘의 성능 분석
■연습문제
Chapter 02 순환
2.1 순환의 소개
2.2 거듭제곱값 계산
2.3 피보나치 수열의 계산
2.4 하노이탑 문제
■연습문제
Chapter 03 배열, 구조체, 포인터
3.1 배열
3.2 구조체
3.3 배열의 응용: 다항식
3.4 배열의 응용: 희소행렬
3.5 포인터
3.6 동적 메모리 할당
■연습문제
Chapter 04 스택
4.1 스택이란?
4.2 스택의 구현
4.3 동적 배열 스택
4.4 스택의 응용: 괄호 검사 문제
4.5 스택의 응용: 후위 표기 수식의 계산
4.6 스택의 응용: 미로 문제
■연습문제
Chapter 05 큐
5.1 큐 추상 데이터 타입
5.2 선형큐
5.3 원형큐
5.4 큐의 응용: 버퍼
5.5 덱이란?
5.6 큐의 응용: 시뮬레이션
■연습문제
Chapter 06 연결 리스트 I
6.1 리스트 추상 데이터 타입
6.2 배열로 구현된 리스트
6.3 연결 리스트
6.4 단순 연결 리스트
6.5 단순 연결 리스트의 연산 구현
6.6 연결 리스트의 응용: 다항식
■연습문제
Chapter 07 연결 리스트 II
7.1 원형 연결 리스트
7.2 원형 연결 리스트는 어디에 사용될까?
7.3 이중 연결 리스트
7.4 예제: mp3 재생 프로그램 만들기
7.5 연결 리스트로 구현한 스택
7.5 연결 리스트로 구현한 큐
■연습문제
Chapter 08 트리
8.1 트리의 개념
8.2 이진 트리 소개
8.3 이진 트리의 표현
8.4 이진 트리의 순회
8.5 반복적 순회
8.6 레벨 순회
8.7 트리의 응용: 수식 트리 처리
8.8 트리의 응용: 디렉토리 용량 계산
8.9 이진 트리의 추가 연산
8.10 스레드 이진 트리
8.11 이진 탐색 트리
8.12 이진 탐색 트리의 응용: 영어 사전
■연습문제
Chapter 09 우선순위 큐
9.1 우선순위 큐 추상 데이터 타입
9.2 우선순위 큐의 구현 방법
9.3 히프
9.4 히프의 구현
9.5 히프 정렬
9.6 머쉰 스케줄링
9.7 허프만 코드
■연습문제
Chapter 10 그래프 I
10.1 그래프란?
10.2 그래프의 정의와 용어
10.3 그래프의 표현 방법
10.4 그래프의 탐색
10.5 깊이 우선 탐색
10.6 너비 우선 탐색
■연습문제
Chapter 11 그래프 II
11.1 최소 비용 신장 트리
11.2 Kruskal의 MST 알고리즘
11.3 Prim의 MST 알고리즘
11.4 최단 경로
11.5 Dijkstra의 최단 경로 알고리즘
11.6 Floyd의 최단 경로 알고리즘
11.7 위상 정렬
■연습문제
Chapter 12 정렬
12.1 정렬이란?
12.2 선택 정렬
12.3 삽입 정렬
12.4 버블 정렬
12.5 쉘 정렬
12.6 합병 정렬
12.7 퀵 정렬
12.8 히프 정렬
12.9 기 수정렬
12.10 정렬 알고리즘의 비교
12.11 정렬의 응용: 영어 사전을 위한 정렬
■연습문제
Chapter 13 탐색
13.1 탐색이란?
13.2 정렬되지 않은 배열에서의 탐색
13.3 정렬된 배열에서의 탐색
13.4 이진 탐색 트리
13.5 AVL트리
13.6 2-3 트리
13.7 2-3-4 트리
■연습문제
Chapter 14 해싱
14.1 해싱이란?
14.2 추상 자료형 사전
14.3 해싱의 구조
14.4 해시함수
14.5 개방 주소법
14.6 체이닝
14.7 해싱의 성능 분석
14.8 해싱의 응용 분야
■연습문제
■찾아보기
펼쳐보기
접어보기',
        '입문자들이 자료구조의 개념을 좀 더 쉽게 이해할 수 있도록 원저의 순서를 변경하였다. 기초적인 자료구조라 할 수 있는 스택과 큐를 앞부분에 배치하였다. 입문자들은 스택과 큐를 통하여 자료구조가 무엇인지를 이해한 후에 좀 더 복잡한 자료구조인 연결리스트나 트리 등으로 나갈 수 있다.',
        '생능', '2019-02-22', 29000, 29000, 1, 'https://image.aladin.co.kr/product/18386/82/cover/8970509712_1.jpg', 10),
       ('9791191198362', 'K842935356', '소프트웨어 사고력 올림피아드 - 초등 3학년~중등 3학년 과정, 개정증보판', '목차
part1 소프트웨어 사고력이란?
1.시작하며 - 이제는 소프트웨어·인공지능 시대
2.소프트웨어 사고력이란?
3.소프트웨어 사고력 기르기
4.이 책의 활용 방법
part2 소프트웨어 사고력 올림피아드 기출문제 분석
1. 1회 대회 기출문제 분석
2. 2회 대회 기출문제 분석
3. 3회 대회 기출문제 분석
4. 4회 대회 기출문제 분석
5. 5회 대회 기출문제 분석
6. 6회 대회 기출문제 분석
7. 7회 대회 기출문제 분석
8. 8회 대회 기출문제 분석
9. 9회 대회 기출문제 분석
part3 소프트웨어 사고력 올림피아드 연습문제
소프트웨어(SW) 사고력 올림피아드 연습문제(1회)
소프트웨어(SW) 사고력 올림피아드 연습문제(2회)
소프트웨어(SW) 사고력 올림피아드 연습문제(3회)
소프트웨어(SW) 사고력 올림피아드 연습문제(4회 )
[부록] 연습문제 출제의도 및 답안지 양식
펼쳐보기
접어보기',
        'C언어, 자바 등 다양한 프로그래밍 언어를 이용하여 프로그램을 만든다. 또한, 프로그래머의 생각이 함께 반영된다. 완성된 결과물도 중요하지만, 좋은 결과물을 위해서는 설계의 과정이 중요하다. 이러한 설계의 과정을 잘할 수 있도록 도와주는 능력이 SW사고력이라고 할 수 있다.',
        '잇플ITPLE', '2023-08-16', 28500, 25650, 1, 'https://image.aladin.co.kr/product/32620/89/cover/k842935356_2.jpg',
        10),
       ('9788968484636', '8968484635', '밑바닥부터 시작하는 딥러닝 - 파이썬으로 익히는 딥러닝 이론과 구현', '목차
1장 헬로 파이썬
1.1 파이썬이란?
1.2 파이썬 설치하기
__1.2.1 파이썬 버전
__1.2.2 사용하는 외부 라이브러리
__1.2.3 아나콘다 배포판
1.3 파이썬 인터프리터
__1.3.1 산술 연산
__1.3.2 자료형
__1.3.3 변수
__1.3.4 리스트
__1.3.5 딕셔너리
__1.3.6 bool
__1.3.7 if 문
__1.3.8 for 문
__1.3.9 함수
1.4 파이썬 스크립트 파일
__1.4.1 파일로 저장하기
__1.4.2 클래스
1.5 넘파이
__1.5.1 넘파이 가져오기
__1.5.2 넘파이 배열 생성하기
__1.5.3 넘파이의 산술 연산
__1.5.4 넘파이의 N차원 배열
__1.5.5 브로드캐스트
__1.5.6 원소 접근
1.6 matplotlib
__1.6.1 단순한 그래프 그리기
__1.6.2 pyplot의 기능
__1.6.3 이미지 표시하기
1.7 정리
2장 퍼셉트론
2.1 퍼셉트론이란?
2.2 단순한 논리 회로
__2.2.1 AND 게이트
__2.2.2 NAND 게이트와 OR 게이트
2.3 퍼셉트론 구현하기
__2.3.1 간단한 구현부터
__2.3.2 가중치와 편향 도입
__2.3.3 가중치와 편향 구현하기
2.4 퍼셉트론의 한계
__2.4.1 도전! XOR 게이트
__2.4.2 선형과 비선형
2.5 다층 퍼셉트론이 출동한다면
__2.5.1 기존 게이트 조합하기
__2.5.2 XOR 게이트 구현하기
2.6 NAND에서 컴퓨터까지
2.7 정리
3장 신경망
3.1 퍼셉트론에서 신경망으로
__3.1.1 신경망의 예
__3.1.2 퍼셉트론 복습
__3.1.3 활성화 함수의 등장
3.2 활성화 함수
__3.2.1 시그모이드 함수
__3.2.2 계단 함수 구현하기
__3.2.3 계단 함수의 그래프
__3.2.4 시그모이드 함수 구현하기
__3.2.5 시그모이드 함수와 계단 함수 비교
__3.2.6 비선형 함수
__3.2.7 ReLU 함수
3.3 다차원 배열의 계산
__3.3.1 다차원 배열
__3.3.2 행렬의 내적
__3.3.3 신경망의 내적
3.4 3층 신경망 구현하기
__3.4.1 표기법 설명
__3.4.2 각 층의 신호 전달 구현하기
__3.4.3 구현 정리
3.5 출력층 설계하기
__3.5.1 항등 함수와 소프트맥스 함수 구현하기
__3.5.2 소프트맥스 함수 구현 시 주의점
__3.5.3 소프트맥스 함수의 특징
__3.5.4 출력층의 뉴런 수 정하기
3.6 손글씨 숫자 인식
__3.6.1 MNIST 데이터셋
__3.6.2 신경망의 추론 처리
__3.6.3 배치 처리
3.7 정리
4장 신경망 학습
4.1 데이터에서 학습한다!
__4.1.1 데이터 주도 학습
__4.1.2 훈련 데이터와 시험 데이터
4.2 손실 함수
__4.2.1 평균 제곱 오차
__4.2.2 교차 엔트로피 오차
__4.2.3 미니배치 학습
__4.2.4 (배치용) 교차 엔트로피 오차 구현하기
__4.2.5 왜 손실 함수를 설정하는가?
4.3 수치 미분
__4.3.1 미분
__4.3.2 수치 미분의 예
__4.3.3 편미분
4.4 기울기
__4.4.1 경사법(경사 하강법)
__4.4.2 신경망에서의 기울기
4.5 학습 알고리즘 구현하기
__4.5.1 2층 신경망 클래스 구현하기
__4.5.2 미니배치 학습 구현하기
__4.5.3 시험 데이터로 평가하기
4.6 정리
5장 오차역전파법
5.1 계산 그래프
__5.1.1 계산 그래프로 풀다
__5.1.2 국소적 계산
__5.1.3 왜 계산 그래프로 푸는가?
5.2 연쇄법칙
__5.2.1 계산 그래프에서의 역전파
__5.2.2 연쇄법칙이란?
__5.2.3 연쇄법칙과 계산 그래프
5.3 역전파
__5.3.1 덧셈 노드의 역전파
__5.3.2 곱셈 노드의 역전파
__5.3.3 사과 쇼핑의 예
5.4 단순한 계층 구현하기
__5.4.1 곱셈 계층
__5.4.2 덧셈 계층
5.5 활성화 함수 계층 구현하기
__5.5.1 ReLU 계층
__5.5.2 Sigmoid 계층
5.6 Affine/Softmax 계층 구현하기
__5.6.1 Affine 계층
__5.6.2 배치용 Affine 계층
__5.6.3 Softmax-with-Loss 계층
5.7 오차역전파법 구현하기
__5.7.1 신경망 학습의 전체 그림
__5.7.2 오차역전파법을 적용한 신경망 구현하기
__5.7.3 오차역전파법으로 구한 기울기 검증하기
__5.7.4 오차역전파법을 사용한 학습 구현하기
5.8 정리
6장 학습 관련 기술들
6.1 매개변수 갱신
__6.1.1 모험가 이야기
__6.1.2 확률적 경사 하강법(SGD)
__6.1.3 SGD의 단점
__6.1.4 모멘텀
__6.1.5 AdaGrad
__6.1.6 Adam
__6.1.7 어느 갱신 방법을 이용할 것인가?
__6.1.8 MNIST 데이터셋으로 본 갱신 방법 비교
6.2 가중치의 초깃값
__6.2.1 초깃값을 0으로 하면?
__6.2.2 은닉층의 활성화 분포
__6.2.3 ReLU를 사용할 때의 가중치 초깃값
__6.2.4 MNIST 데이터셋으로 본 가중치 초깃값 비교
6.3 배치 정규화
__6.3.1 배치 정규화 알고리즘
__6.3.2 배치 정규화의 효과
6.4 바른 학습을 위해
__6.4.1 오버피팅
__6.4.2 가중치 감소
__6.4.3 드롭아웃
6.5 적절한 하이퍼파라미터 값 찾기
__6.5.1 검증 데이터
__6.5.2 하이퍼파라미터 최적화
__6.5.3 하이퍼파라미터 최적화 구현하기
6.6 정리
7장 합성곱 신경망(CNN)
7.1 전체 구조
7.2 합성곱 계층
__7.2.1 완전연결 계층의 문제점
__7.2.2 합성곱 연산
__7.2.3 패딩
__7.2.4 스트라이드
__7.2.5 3차원 데이터의 합성곱 연산
__7.2.6 블록으로 생각하기
__7.2.7 배치 처리
7.3 풀링 계층
__7.3.1 풀링 계층의 특징
7.4 합성곱/풀링 계층 구현하기
__7.4.1 4차원 배열
__7.4.2 im2col로 데이터 전개하기
__7.4.3 합성곱 계층 구현하기
__7.4.4 풀링 계층 구현하기
7.5 CNN 구현하기
7.6 CNN 시각화하기
__7.6.1 1번째 층의 가중치 시각화하기
__7.6.2 층 깊이에 따른 추출 정보 변화
7.7 대표적인 CNN
__7.7.1 LeNet
__7.7.2 AlexNet
7.8 정리
8장 딥러닝
8.1 더 깊게
__8.1.1 더 깊은 네트워크로
__8.1.2 정확도를 더 높이려면
__8.1.3 깊게 하는 이유
8.2 딥러닝의 초기 역사
__8.2.1 이미지넷
__8.2.2 VGG
__8.2.3 GoogLeNet
__8.2.4 ResNet
8.3 더 빠르게(딥러닝 고속화)
__8.3.1 풀어야 할 숙제
__8.3.2 GPU를 활용한 고속화
__8.3.3 분산 학습
__8.3.4 연산 정밀도와 비트 줄이기
8.4 딥러닝의 활용
__8.4.1 사물 검출
__8.4.2 분할
__8.4.3 사진 캡션 생성
8.5 딥러닝의 미래
__8.5.1 이미지 스타일(화풍) 변환
__8.5.2 이미지 생성
__8.5.3 자율 주행
__8.5.4 Deep Q-Network(강화학습)
8.6 정리
부록 A Softmax-with-Loss 계층의 계산 그래프
A.1 순전파
A.2 역전파
A.3 정리
참고문헌
펼쳐보기
접어보기',
        '라이브러리나 프레임워크에 의존하지 않고, 딥러닝의 핵심을 ‘밑바닥부터’ 직접 만들어보며 즐겁게 배울 수 있는 본격 딥러닝 입문서이다. 술술 읽힐 만큼 쉽게 설명하였고, 역전파처럼 어려운 내용은 ‘계산 그래프’ 기법으로 시각적으로 풀이했다.',
        '한빛미디어', '2017-01-03', 24000, 21600, 1, 'https://image.aladin.co.kr/product/9951/87/cover/8968484635_1.jpg',
        10),
       ('9791140708963', 'K472939529', '읽기 쉬운 코드 - 지속 가능하고 유지/보수하기 쉬운, 이해할 수 있고 복잡하지 않은, 좋은 코드를 짜는 방법과 아이디어', '목차
1부 속도를 높여봅시다
1장 예술인가? 과학인가?
__1.1 집 짓기 비유
____1.1.1 프로젝트라고 생각해서 발생하는 문제
____1.1.2 단계가 있다고 생각해서 발생하는 문제
____1.1.3 의존성의 차이
__1.2 정원 가꾸기 비유
____1.2.1 무엇이 정원을 키워주나요?
__1.3 공학으로 나아가기
____1.3.1 소프트웨어를 기술로 바라보는 관점
____1.3.2 휴리스틱 방식
____1.3.3 소프트웨어 공학의 초기 개념
____1.3.4 소프트웨어 공학으로 나아가기
__1.4 결론
2장 체크리스트
__2.1 기억 보조 수단
__2.2 새로운 코드베이스를 위한 체크리스트
____2.2.1 깃을 사용할 것
____2.2.2 빌드를 자동화할 것
____2.2.3 모든 오류 메시지를 켜둘 것
__2.3 기존 코드베이스를 위한 체크리스트
____2.3.1 점진적 개선
____2.3.2 조직 문화를 바꾸는 전략
__2.4 결론
3장 복잡성을 잘 다루는 법
__3.1 목적
____3.1.1 지속가능성
____3.1.2 가치
__3.2 프로그래밍이 어려운 이유
____3.2.1 두뇌에 비유하는 것
____3.2.2 코드는 작성하는 것보다 읽는 경우가 더 많다
____3.2.3 가독성
____3.2.4 지적인 작업
__3.3 소프트웨어 공학으로 나아가기
____3.3.1 컴퓨터 과학과의 관계
____3.3.2 인간 친화적인 코드
__3.4 결론
4장 수직 슬라이스
__4.1 동작하는 소프트웨어에서 시작하기
____4.1.1 데이터 수신에서 데이터 보존까지
____4.1.2 가장 간단한 수직 슬라이스
__4.2 동작하는 골격
____4.2.1 특성화 테스트
____4.2.2 준비-행동-어설트(AAA 패턴)
____4.2.3 정적 분석 조절
__4.3 외부 접근 개발
____4.3.1 JSON 수신
____4.3.2 예약 게시
____4.3.3 유닛 테스트
____4.3.4 DTO와 도메인 모델
____4.3.5 가짜 객체
____4.3.6 저장소 인터페이스
____4.3.7 저장소 생성
____4.3.8 의존성 구성
__4.4 슬라이스 완성
____4.4.1 스키마
____4.4.2 SQL 저장소
____4.4.3 데이터베이스 설정
____4.4.4 스모크 테스트 수행
____4.4.5 가짜 데이터베이스를 사용한 경계 테스트
__4.5 결론
5장 캡슐화하기
__5.1 데이터 저장하기
____5.1.1 변환 우선순위 전제
____5.1.2 매개변수를 이용하는 테스트
____5.1.3 DTO를 도메인 모델로 복사하기
__5.2 검증
____5.2.1 날짜가 잘못 입력된 경우
____5.2.2 빨강-초록-리팩터
____5.2.3 자연수
____5.2.4 포스텔의 법칙
__5.3 변하지 않는 값 보호하기
____5.3.1 항상 유효한 상태
__5.4 결론
6장 다각화하기
__6.1 단기 기억과 장기 기억
____6.1.1 레거시 코드와 메모리
__6.2 용량
____6.2.1 초과 예약
____6.2.2 악마의 변호인
____6.2.3 기존 예약 다루기
____6.2.4 악마의 변호인 vs. 빨강-초록-리팩터
____6.2.5 테스트는 언제 충분하다고 할 수 있을까?
__6.3 결론
7장 분해하기
__7.1 코드의 부패
____7.1.1 임계값
____7.1.2 순환 복잡도
____7.1.3 80/24 규칙
__7.2 머리에 잘 들어오는 코드
____7.2.1 육각꽃
____7.2.2 응집
____7.2.3 기능 편애
____7.2.4 바꾸는 과정에서 잃는 것들
____7.2.5 유효성 검사 대신 분석하라
____7.2.6 프랙탈 구조
____7.2.7 변수 세기
__7.3 결론
8장 API 설계
__8.1 설계의 원칙
____8.1.1 행동 유도성
____8.1.2 포카요케
____8.1.3 읽는 사람을 위한 코드 작성
____8.1.4 주석보다 중요한, 잘 지은 이름
____8.1.5 X로 이름 바꾸기
____8.1.6 명령과 쿼리의 분리
____8.1.7 정보 전달 단계
__8.2 API 설계 예제
____8.2.1 지배인
____8.2.2 캡슐화된 객체와의 상호작용
____8.2.3 구현의 자세한 부분
__8.3 결론
9장 팀워크
__9.1 깃
____9.1.1 커밋 메시지
____9.1.2 지속적 통합
____9.1.3 조금씩 커밋하기
__9.2 코드의 공동 소유
____9.2.1 짝 프로그래밍
____9.2.2 몹 프로그래밍
____9.2.3 코드 리뷰 대기 시간
____9.2.4 큰 변경 사항 거부하기
____9.2.5 코드 리뷰
____9.2.6 풀 리퀘스트
__9.3 결론
2부 지속가능성
10장 코드를 보강해봅시다
__10.1 기능 플래그
____10.1.1 캘린더 플래그
__10.2 스트랭글러 패턴
____10.2.1 메서드 수준의 스트랭글러
____10.2.2 클래스 수준의 스트랭글러
__10.3 버전 관리하기
____10.3.1 미리 경고하기
__10.4 결론
11장 유닛 테스트 편집하기
__11.1 유닛 테스트 리팩터링하기
____11.1.1 안전망 변경하기
____11.1.2 새로운 테스트 코드 추가하기
____11.1.3 테스트와 프로덕션 코드에 대한 리팩터링 분리하기
__11.2 테스트 실패 참조하기
__11.3 결론
12장 문제 해결하기
__12.1 이해하기
____12.1.1 과학적인 방법
____12.1.2 단순화
____12.1.3 고무 오리 디버깅
__12.2 결함
____12.2.1 결함을 테스트로 재현하기
____12.2.2 느린 테스트
____12.2.3 비결정적 결함
__12.3 이분법
____12.3.1 깃에서 이분법 방식 사용하기
__12.4 결론
13장 관심사의 분리
__13.1 조합
____13.1.1 중첩 조합
____13.1.2 순차적 조합
____13.1.3 참조 투명성
__13.2 횡단 관심사
____13.2.1 로그 남기기
____13.2.2 데코레이터
____13.2.3 무엇을 로그로 남길까?
__13.3 결론
14장 리듬
__14.1 개인적인 리듬
____14.1.1 타임 박싱
____14.1.2 휴식 취하기
____14.1.3 시간을 계획적으로 사용하기
____14.1.4 자판 외우기
__14.2 팀의 리듬
____14.2.1 주기적으로 의존성 갱신하기
____14.2.2 다른 작업 일정 잡기
____14.2.3 콘웨이의 법칙
__14.3 결론
15장 유력한 용의자
__15.1 성능
____15.1.1 과거의 유산
____15.1.2 명료성
__15.2 보안
____15.2.1 STRIDE 위협 모델
____15.2.2 스푸핑
____15.2.3 변조
____15.2.4 거부
____15.2.5 정보 노출
____15.2.6 서비스 거부
____15.2.7 권한 상승
__15.3 다른 기법들
____15.3.1 속성 기반 테스트
____15.3.2 행위 기반 코드 분석
__15.4 결론
16장 여행
__16.1 코드베이스 탐색하기
____16.1.1 큰 그림 보기
____16.1.2 파일 정리
____16.1.3 세부 사항 찾아보기
__16.2 아키텍처
____16.2.1 모놀리식
____16.2.2 순환 구조
__16.3 사용법
____16.3.1 테스트를 통해서 배우기
____16.3.2 테스트에 귀를 기울이자
__16.4 결론
부록 A 프랙티스 목록
__A.1 50/72 규칙
__A.2 80/24 규칙
__A.3 준비-행동-어설트
__A.4 이분법
__A.5 새로운 코드베이스를 위한 체크리스트
__A.6 명령과 쿼리의 분리
__A.7 변수 개수 세기
__A.8 순환 복잡도
__A.9 횡단 관심사에 대한 데코레이터
__A.10 악마의 변호인
__A.11 기능 플래그
__A.12 함수형 코어, 명령 셸
__A.13 정보 전달 단계
__A.14 예외 규정이 있을 때 이유 설명하기
__A.15 유효성 검사 말고 구문 분석 하기
__A.16 포스텔의 법칙
__A.17 빨강-초록-리팩터
__A.18 정기적인 의존성 업데이트
__A.19 결함을 테스트로 재현하기
__A.20 코드 리뷰
__A.21 유의적 버전 관리
__A.22 테스트와 프로덕션 코드에 대한 리팩터링 분리하기
__A.23 슬라이스
__A.24 스트랭글러
__A.25 위협 모델
__A.26 변환 우선순위 전제
__A.27 XX-주도 개발
__A.28 X로 이름 바꾸기
부록 B 참고 문헌
부록 C 예제 빌드해보기
__C.1 예제 파일 관련 정보
__C.2 윈도우 환경에서 빌드하는 방법
__C.3 리눅스/WLS 환경에서 컴파일하는 방법
__C.4 끝내면서
찾아보기
펼쳐보기
접어보기', '『소프트웨어 장인』에 이은 또 한 권의 ‘로버트 C. 마틴 시리즈’. 70년 동안 개발자들에게 검증 받은 개발 방법론과 주옥 같은 팁들을 한 권으로 총 정리하였다.', '길벗',
        '2024-03-25', 33000, 29700, 1, 'https://image.aladin.co.kr/product/33657/96/cover/k472939529_1.jpg', 10),
       ('9791192932576', 'K562939114', '코파일럿 - 업무에 200% 써먹는 AI 비서 : 엑셀, 파워포인트, 워드, 아웃룩, 팀즈까지', '목차
들어가며
Chapter 01 코파일럿, AI가 주도할 사무 업무의 혁신
01 챗GPT 이후의 AI 패권 경쟁
02 코파일럿, 그래도 너무 늦지 않게 출시되다
Chapter 02 코파일럿, 구매부터 설치까지
01 기업용 코파일럿의 가격은?
02 개인 사용자용 코파일럿의 가격은?
03 코파일럿 사용을 위한 마이크로소프트 365 신규 구매 절차
04 코파일럿 라이선스 구매와 할당
05 코파일럿 설치
Chapter 03 GPT-4 기반 AI 비서, M365 Chat
01 M365 Chat의 실행 방법
02 한국어 지원과 관련된 정보
03 묻기, 답하기, 생성하기
Chapter 04 M365 Chat과 함께하는 사무 업무의 자동화
01 채팅창에서 이메일 관리하기
02 슬래시( / )를 활용한 이메일 자동화
03 슬래시( / )를 활용한 워드 파일 자동화
04 슬래시( / )를 활용한 PPT 파일 자동화
05 슬래시( / )를 활용한 엑셀 xlsx 파일 자동화
06 슬래시( / )를 활용한 분 단위 근태 관리 자동화
07 그 외 어떤 신기한 일들이 가능할까요?
Chapter 05 OneNote 코파일럿 - 노트 필기 앱과 GPT-4의 만남
01 OneNote, 포지션이 애매한 노트 필기 앱
02 원노트 코파일럿 사용하기
03 노트 필기 요약하기
04 To-do list 만들기
05 프로젝트 스케줄 관리하기
06 노트의 내용을 기반으로 새로운 문서 작성하기
07 코파일럿은 원노트의 게임 체인저가 맞습니다
Chapter 06 Outlook 코파일럿
01 아웃룩 - 직장인, 프리랜서의 필수 앱
02 아웃룩을 처음 사용해 봐요!
03 코파일럿이 활성화되었나 확인하는 방법
04 코파일럿을 활용한 단일 메일 요약
05 코파일럿을 활용한 메일 타래 요약
06 코파일럿을 활용한 이메일 자동 작성
07 파일럿을 활용한 답장 자동 작성
08 코파일럿을 활용해 외국어로 답장하기
Chapter 07 Teams 코파일럿
01 Teams - 수십 개의 카톡방을 하나의 앱으로
02 Teams 채팅을 카카오톡 대신 사용하세요
03 Teams에서 팀 관리하기
04 채널 게시물 작성에 코파일럿 활용하기
05 채널 게시물 댓글 작성과 요약에 코파일럿 사용하기
06 코파일럿으로 채팅방의 대화 흐름 파악하기
07 Teams 화상회의에 코파일럿을 활용하기
Chapter 08 Word 코파일럿
01 워드 코파일럿 개요
02 코파일럿을 활용한 문서 작성 자동화
03 내용 보충하기
04 코파일럿을 활용한 문서 읽기 보조
05 문서의 요약
06 요점 추출
07 문서의 윤문(다시쓰기)
08 찬성/ 반대 의견 도출하기
Chapter 09 PowerPoint 코파일럿
01 파워포인트에 자동화할 부분이 더 있을까요?
02 파워포인트 코파일럿의 사용 방법
03 디자인 컨셉 변경 요청하기
04 발표자료 목차 자동으로 정돈하기
05 무에서 유를 창조할 수 있습니다
06 한식의 세계화에 대한 발표자료를 만들어줘! - 발표자료 콘텐츠 수정
07 텍스트만 존재하는 워드 파일을 읽어와 프레젠테이션 만들기
08 슬라이드 추가하기
09 그래프, 차트, 표가 포함된 문서를 PPT 발표자료로 만들기
Chapter 10 Excel 코파일럿
01 엑셀과 GPT의 만남은 어떤 모습일까?
02 테이블 사용이 필요합니다
03 코파일럿 사용 전 알아 두면 좋은 데이터 분석 기능
04 특정 데이터에 대해 질문하기
05 데이터 범위 선택하기
06 인사이트 발견하기
07 채팅창을 통한 간단한 분석 요청
08 채팅창을 활용한 그래프 그리기
09 이제 엑셀 함수를 외울 필요가 없어졌습니다
10 채팅으로 조건부 서식 지정하기
(부록)
부록 01 Microsoft 365에 커스텀 도메인 이메일 연결하기
부록 02 Microsoft 365에 새로운 직원 추가하기
부록 03 Outlook에 외부 이메일 연동하기
부록 04 코파일럿 사이드 패널이 먹통인 경우
에필로그
펼쳐보기
접어보기',
        '코파일럿 구매부터 설치, 코파일럿을 어떻게 사용하는지 모든 사용법을 정리했으며, 책을 따라 하면서 쉽게 배울 수 있도록 소개하고 있다. 또한, 내가 얻고자 하는 정보가 무엇이든지 엔터키 한 번으로 모든 것을 빠르게 해결할 수 있다.',
        '생능북스', '2024-03-25', 19800, 19800, 1, 'https://image.aladin.co.kr/product/33621/34/cover/k562939114_1.jpg',
        10),
       ('9791169211932', 'K622938877',
        '쉽고 빠르게 익히는 실전 LLM - ChatGPT 활용부터 LLM 파인튜닝, 임베딩, 고급 프롬프트 엔지니어링까지 I LLM FAQ, AI/ML 용어 해설집 수록', '목차
Part 1 LLM 소개
Chapter 1 LLM
_1.1 LLM이란?
__1.1.1 LLM 정의
__1.1.2 LLM 주요 특징
__1.1.3 LLM 작동 원리
_1.2 현재 많이 사용되는 LLM
__1.2.1 BERT
__1.2.2 GPT-4와 ChatGPT
__1.2.3 T5
_1.3 도메인 특화 LLM
_1.4 LLM을 이용한 애플리케이션
__1.4.1 전통적인 자연어 처리(NLP) 작업
__1.4.2 자유로운 텍스트 생성
__1.4.3 정보 검색/신경망 의미 기반 검색
__1.4.4 챗봇
_1.5 마치며
Chapter 2 LLM을 이용한 의미 기반 검색
_2.1 들어가는 글
_2.2 작업
__2.2.1 비대칭적 의미 기반 검색
_2.3 솔루션 개요
_2.4 구성 요소
__2.4.1 텍스트 임베더
__2.4.2 문서 청킹
__2.4.3 벡터 데이터베이스
__2.4.4 파인콘
__2.4.5 오픈 소스 대안
__2.4.6 검색 결과 재순위화
__2.4.7 API
_2.5 통합
__2.5.1 성능
_2.6 클로즈드 소스 구성 요소의 비용
_2.7 마치며
Chapter 3 프롬프트 엔지니어링의 첫 번째 단계
_3.1 들어가는 글
_3.2 프롬프트 엔지니어링
__3.2.1 언어 모델에서 정렬
__3.2.2 직접 요청하기
__3.2.3 퓨샷 학습
__3.2.4 출력 구조화
__3.2.5 페르소나 지정하기
_3.3 여러 모델과 프롬프트 작업하기
__3.3.1 ChatGPT
__3.3.2 Cohere
__3.3.3 오픈 소스 프롬프트 엔지니어링
_3.4 ChatGPT와 Q/A 챗봇 만들기
_3.5 마치며
Part 2 LLM 활용법
Chapter 4 맞춤형 파인튜닝으로 LLM을 최적화하기
_4.1 들어가는 글
_4.2 파인튜닝과 전이학습: 기초 안내서
__4.2.1 파인튜닝 과정
__4.2.2 파운데이션 모델로 사전 훈련된 클로즈드 소스 모델 사용하기
_4.3 OpenAI 파인튜닝 API 살펴보기
__4.3.1 GPT-3 파인튜닝 API
__4.3.2 사례 연구: Amazon 리뷰 감정 분류
__4.3.3 데이터에 대한 지침 및 모범 사례
_4.4 OpenAI CLI로 맞춤형 예제 준비하기
_4.5 OpenAI CLI 설정하기
__4.5.1 하이퍼파라미터 선택과 최적화
_4.6 첫 번째 파인튜닝 LLM
__4.6.1 정량적 지표로 파인튜닝 모델 평가하기
__4.6.2 정성적 평가 기술
__4.6.3 파인튜닝된 GPT-3 모델을 애플리케이션에 통합하기
_4.7 사례 연구 2: Amazon 리뷰 카테고리 분류
_4.8 마치며
Chapter 5 고급 프롬프트 엔지니어링
_5.1 들어가는 글
_5.2 프롬프트 인젝션 공격
_5.3 입력/출력 유효성 검사
__5.3.1 예제: NLI 이용해서 유효성 검사 파이프라인 만들기
_5.4 배치 프롬프팅
_5.5 프롬프트 체이닝
__5.5.1 프롬프트 인젝션을 방어하기 위한 체이닝
__5.5.2 프롬프트 스터핑을 막기 위한 체이닝
__5.5.3 예제: 멀티모달 LLM을 안전하게 사용하기 위한 체이닝
_5.6 연쇄적 사고 프롬프트
__5.6.1 예시: 기초 연산
_5.7 퓨샷 학습 다시 보기
__5.7.1 예제: LLM을 이용한 초등학교 수학
_5.8 테스트와 반복적 프롬프트 개발
_5.9 마치며
Chapter 6 임베딩과 모델 아키텍처 맞춤화
_6.1 들어가는 글
_6.2 사례 연구: 추천 시스템 만들기
__6.2.1 문제와 데이터 설정하기
__6.2.2 추천의 문제 정의하기
__6.2.3 추천 시스템의 전체 개요
__6.2.4 항목 비교를 위한 맞춤형 설명 필드 생성
__6.2.5 파운데이션 임베더로 기준선 설정
__6.2.6 파인튜닝 데이터 준비
__6.2.7 문장 트랜스포머 라이브러리로 오픈 소스 임베더 파인튜닝하기
__6.2.8 결과 요약
_6.3 마치며
Part 3 고급 LLM 사용법
Chapter 7 파운데이션 모델을 넘어서
_7.1 들어가는 글
_7.2 사례연구: VQA
__7.2.1 모델 소개: ViT, GPT-2 및 DistillBERT
__7.2.2 은닉 상태 투영과 융합
__7.2.3 크로스-어텐션: 이것은 무엇이며 왜 중요한가요?
__7.2.4 맞춤형 멀티모달 모델
__7.2.5 데이터: Visual QA
__7.2.6 VQA 훈련 과정
__7.2.7 결과 요약
_7.3 사례 연구: 피드백 기반 강화 학습
__7.3.1 모델: FLAN-T5
__7.3.2 보상 모델: 감정과 문법 정확도
__7.3.3 트랜스포머 강화 학습
__7.3.4 RLF 훈련 과정
__7.3.5 결과 요약
_7.4 마치며
Chapter 8 고급 오픈 소스 LLM 파인튜닝
_8.1 들어가는 글
_8.2 예시: BERT를 이용한 애니메이션 장르 다중 레이블 분류
__8.2.1 다중 레이블 장르 예측을 위한 성능 측정 지표로 자카드 점수 사용하기
__8.2.2 단순 파인튜닝 과정
__8.2.3 오픈 소스 LLM 파인튜닝을 위한 일반적인 팁
__8.2.4 결과 요약
_8.3 예시: GPT-2를 이용한 LaTeX 생성
__8.3.1 오픈 소스 모델을 위한 프롬프트 엔지니어링
__8.3.2 결과 요약
_8.4 시난의 현명하면서도 매력적인 답변 생성기: SAWYER
__1단계: 지시사항 파인튜닝
__2단계: 보상 모델 훈련
__3단계: (예상하는) 사용자 피드백 기반 강화 학습
__결과 요약
_8.5 끊임없이 변화하는 파인튜닝의 세계
_8.6 마치며
Chapter 9 LLM을 프로덕션 환경에서 사용하기
_9.1 들어가는 글
_9.2 클로즈드 소스 LLM을 프로덕션 환경에 배포하기
__9.2.1 비용 예측
__9.2.2 API 키 관리
_9.3 프로덕션 환경에 오픈 소스 LLM 배포하기
__9.3.1 추론을 위한 모델 준비
__9.3.2 상호 운용성
__9.3.3 양자화
__9.3.4 가지치기
__9.3.5 지식 증류
__9.3.6 LLM 사용에 대한 비용 예측
__9.3.7 Hugging Face에 올리기
_9.4 마치며
Part 4 부록
APPENDIX A LLM 자주 묻는 질문(FAQ)
APPENDIX B LLM 용어 해설
APPENDIX C LLM 애플리케이션 개발 고려사항
펼쳐보기
접어보기',
        'LLM 개발 단계별 지침, 모범 사례, 실제 사례 연구, 실습 예제 등 LLM이 생소했던 사람도 당장 개발을 시작할 수 있을 만큼 LLM에 대한 전반적인 지식을 쉽고 친절하게 설명한다. 또한, LLM 개발에 더 깊이 들어가 파인튜닝, 오픈 소스와 클로즈드 소스 LLM의 비교 및 활용법, 데이터 형식 및 파라미터 설정법, 임베딩, 성능 최적화, 고급 프롬프트 엔지니어링까지 다룬다.',
        '한빛미디어', '2024-02-01', 28000, 25200, 1, 'https://image.aladin.co.kr/product/33279/95/cover/k622938877_2.jpg',
        10),
       ('9788966264247', '8966264247', '논리적 사고를 기르는 알고리즘 수업 - 알고리즘보다 먼저 공부하는 알고리즘 사고 방식', '목차
1부 알고리즘 문제 해결
1장 들어가며
2장 불변량
3장 강 건너기
4장 게임
5장 기사와 건달
6장 귀납법
7장 가짜 동전 찾기
8장 하노이의 탑
9장 알고리즘 설계의 원칙
10장 다리 건너기 문제
11장 기사의 순회
2부 수학적 기법
12장 수학의 언어
13장 불리언 대수
14장 한정 기호
15장 정수론의 요소들
16장 관계, 그래프, 경로 대수
펼쳐보기
접어보기',
        '알고리즘 문제 해결의 원칙을 체계적으로 소개하는 여러 가지 예제로 구성되어 있다. 문제 중심으로 접근하여 자연스럽게 독자들의 도전 성향을 자극한다. 불변량, 귀납법, 대칭성 등 알고리즘 설계의 핵심 원칙은 앞으로 맞닥뜨릴 어떤 문제에든 접근할 수 있는 무기가 된다.',
        '인사이트', '2024-01-31', 32000, 28800, 1, 'https://image.aladin.co.kr/product/33245/73/cover/8966264247_1.jpg',
        10),
       ('9791162243664', 'K052736813', '혼자 공부하는 머신러닝 + 딥러닝 - 1:1 과외하듯 배우는 인공지능 자습서', '목차
Chapter 01 나의 첫 머신러닝 ▶ 이 생선의 이름은 무엇인가요
__ 01-1 인공지능과 머신러닝, 딥러닝 ▶  인공지능과 머신러닝, 딥러닝은 무엇일까요
____ 인공지능이란
____ 머신러닝이란
____ 딥러닝이란
____ 키워드로 끝내는 핵심 포인트
____ 이 책에서 배울 것은
__ 01-2 코랩과 주피터 노트북 ▶ 코랩과 주피터 노트북으로 손코딩 준비하기
____ 구글 코랩
____ 텍스트 셀
____ 코드 셀
____ 노트북
____ 키워드로 끝내는 핵심 포인트
____ 표로 정리하는 툴바와 마크다운
____ 확인 문제
__ 01-3 마켓과 머신러닝 ▶ 마켓을 예로 들어 머신러닝을 설명합니다.
____ 생선 분류 문제
____ 첫 번째 머신러닝 프로그램
____ [문제해결 과정] 도미와 빙어 분류
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 02 데이터 다루기 ▶ 수상한 생선을 조심하라!
__ 02-1 훈련 세트와 테스트 세트 ▶  모델을 훈련 시키는 훈련 세트와 검증하는 테스트 세트로 나누어 학습하기
____ 지도 학습과 비지도 학습
____ 훈련 세트와 테스트 세트
____ 샘플링 편향
____ 넘파이
____ 두 번째 머신러닝 프로그램
____ [문제해결 과정] 훈련 모델 평가
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 02-2 데이터 전처리 ▶ 정교한 결과 도출을 위한 데이터 전처리 알아보기
____ 넘파이로 데이터 준비하기
____ 사이킷런으로 훈련 세트와 테스트 세트 나누기
____ 수상한 도미 한 마리
____ 기준을 맞춰라
____ 전처리 데이터로 모델 훈련하기
____ [문제해결 과정] 스케일이 다른 특성 처리
____ 키워드로 끝나는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 03 회귀 알고리즘과 모델 규제 ▶ 농어의 무게를 예측하라!
__ 03-1 k-최근접 이웃 회귀 ▶ 회귀 문제를 이해하고 k-최근접 이웃 알고리즘으로 풀어 보기
____ k-최근접 이웃 회귀
____ 데이터 준비
____ 결정계수(R2)
____ 과대적합 vs 과소적합
____ [문제해결 과정] 회귀 문제 다루기
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 03-2 선형 회귀 ▶  사이킷런으로 선형 회귀 모델 만들어 보기
____ k-최근접 이웃의 한계
____ 선형 회귀
____ 다항 회귀
____ [문제해결 과정] 선형 회귀로 훈련 세트 범위 밖의 샘플 예측
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 03-3 특성 공학과 규제 ▶ 특성 공학과 규제 알아보기
____ 다중 회귀
____ 데이터 준비
____ 사이킷런의 변환기
____ 다중 회귀 모델 훈련하기
____ 규제
____ 릿지 회귀
____ 라쏘 회귀
____ [문제해결 과정] 모델의 과대적합을 제어하기
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 04 다양한 분류 알고리즘 ▶ 럭키백의 확률을 계산하라!
__ 04-1 로지스틱 회귀 ▶ 로지스틱 회귀 알고리즘을 배우고 이진 분류 문제에서 클래스 확률 예측하기
____ 럭키백의 확률
____ 로지스틱 회귀
____ [문제해결 과정] 로지스틱 회귀로 확률 예측
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 04-2 확률적 경사 하강법 ▶ 경사 하강법 알고리즘을 이해하고 대량의 데이터에서 분류 모델을 훈련하기
____ 점진적인 학습
____ SGDClassifier
____ 에포크와 과대/과소적합
____ [문제해결 과정] 점진적 학습을 위한 확률적 경사 하강법
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 05 트리 알고리즘 ▶ 화이트 와인을 찾아라!
__ 05-1 결정 트리 ▶ 결정 트리 알고리즘을 사용해 새로운 분류 문제 다루기
____ 로지스틱 회귀로 와인 분류하기
____ 결정 트리
____ [문제해결 과정] 이해하기 쉬운 결정 트리 모델
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 05-2 교차 검증과 그리드 서치 ▶ 검증 세트가 필요한 이유를 이해하고 교차 검증해 보기
____ 검증 세트
____ 교차 검증
____ 하이퍼파라미터 튜닝
____ [문제해결 과정] 최적의 모델을 위한 하이퍼파라미터 탐색
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 05-3 트리의 앙상블 ▶  앙상블 학습을 알고 실습해 보기
____ 정형 데이터와 비정형 데이터
____ 랜덤 포레스트
____ 엑스트라 트리
____ 그레이디언트 부스팅
____ 히스토그램 기반 그레이디언트 부스팅
____ [문제해결 과정] 앙상블 학습을 통한 성능 향상
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 06 비지도 학습 ▶ 비슷한 과일끼리 모으자!
__ 06-1 군집 알고리즘 ▶  흑백 이미지 분류 방법과 비지도 학습, 군집 알고리즘 이해하기
____ 과일 사진 데이터 준비하기
____ 픽셀값 분석하기
____ 평균값과 가까운 사진 고르기
____ [문제해결 과정] 비슷한 샘플끼리 모으기
____ 키워드로 끝내는 핵심 포인트
____ 확인 문제
__ 06-2 k-평균 ▶ k-평균 알고리즘 작동 방식을 이해하고 비지도 학습 모델 만들기
____ k-평균 알고리즘 소개
____ KMeans 클래스
____ 클러스터 중심
____ 최적의 k 찾기
____ [문제해결 과정] 과일을 자동으로 분류하기
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 06-3 주성분 분석 ▶ 차원을 알고 차원 축소 알고리즘 PC 모델 만들기
____ 차원과 차원 축소
____ 주성분 분석 소개
____ PCA 클래스
____ 원본 데이터 재구성
____ 설명된 분산
____ 다른 알고리즘과 함께 사용하기
____ [문제해결 과정] 주성분 분석으로 차원 축소
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 07 딥러닝을 시작합니다 ▶ 패션 럭키백을 판매합니다!
__ 07-1 인공 신경망 ▶  텐서플로로 간단한 인공 신경망 모델 만들기
____ 패션 MNIST
____ 로지스틱 회귀로 패션 아이템 분류하기
____ 인공 신경망
____ 인공 신경망으로 모델 만들기
____ 인공 신경망으로 패션 아이템 분류하기
____ [문제해결 과정] 인공 신경망 모델로 성능 향상
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 07-2 심층 신경망 ▶ 인공 신경망에 층을 추가하여 심층 신경망 만들어 보기
____ 2개의 층
____ 심층 신경망 만들기
____ 층을 추가하는 다른 방법
____ 렐루 활성화 함수
____ 옵티마이저
____ [문제해결 과정] 케라스 API를 활용한 심층 신경망
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 07-3 신경망 모델 훈련 ▶ 인경 신경망 모델 훈련의 모범 사례 학습하기
____ 손실 곡선
____ 검증 손실
____ 드롭아웃
____ 모델 저장과 복원
____ 콜백
____ [문제해결 과정] 최상의 신경망 모델 얻기
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 08 이미지를 위한 인공 신경망 ▶ 패션 럭키백의 정확도를 높입니다!
__ 08-1 합성곱 신경망의 구성 요소 ▶ 합성곱 신경망의 개념과 동작 원리를 배우고 간단한 실습하기
____ 합성곱
____ 케라스 합성곱 층
____ 합성곱 신경망의 전체 구조
____ [문제해결 과정] 합성곱 층과 풀링 층 이해하기
____ 키워드로 끝내는 핵심 포인트
____ 확인 문제
__ 08-2 합성곱 신경망을 사용한 이미지 분류 ▶ 케라스 API로  합성곱 신경망 모델 만들기
____ 패션 MNIST 데이터 불러오기
____ 합성곱 신경망 만들기
____ 모델 컴파일과 훈련
____ [문제해결 과정] 케라스 API로 합성곱 신경망 구현
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 08-3 합성곱 신경망의 시각화 ▶ 신경망이 이미지에서 학습하는 게 무엇인지 이해하기
____ 가중치 시각화
____ 함수형 API
____ 특성 맵 시각화
____ [문제해결 과정]
____ 시각화로 이해하는 합성곱 신경망
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
Chapter 09 텍스트를 위한 인공 신경망 ▶ 한빛 마켓의 댓글을 분석하라!
__ 09-1 순차 데이터와 순환 신경망 ▶ 순차 데이터의 특징과 개념 이해하기
____ 순차 데이터
____ 순환 신경망
____ 셀의 가중치와 입출력
____ [문제해결 과정] 순환 신경망으로 순환 데이터 처리
____ 키워드로 끝내는 핵심 포인트
____ 확인 문제
__ 09-2 순환 신경망으로 IMDB 리뷰 분류하기 ▶ 텐서플로 순환 신경망으로 영화 리뷰 분류하기
____ IMDB 리뷰 데이터셋
____ 순환 신경망 만들기
____ 순환 신경망 훈련하기
____ 단어 임베딩을 사용하기
____ [문제해결 과정] 케라스 API로 순환 신경망 구현
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 09-3 LSTM과 GRU 셀 ▶ 순환 신경망의 중요 기술을 사용해 모델 만들어 보기
____ LSTM 구조
____ LSTM 신경망 훈련하기
____ 순환층에 드롭아웃 적용하기
____ 2개의 층을 연결하기
____ GRU 구조
____ GRU 신경망 훈련하기
____ [문제해결 과정] LSTM과 GRU 셀로 훈련
____ 키워드로 끝내는 핵심 포인트
____ 핵심 패키지와 함수
____ 확인 문제
__ 부록 A 한발 더 나아가기
__ 부록 B 에필로그
____ 정답 및 해설
____ 찾아보기
펼쳐보기
접어보기',
        '구글 머신러닝 전문가로 활동하고 있는 저자는 여러 차례의 입문자들과 함께한 머신러닝&딥러닝 스터디와 번역·집필 경험을 통해 ''무엇을'' ''어떻게'' 학습해야 할지 모르는 입문자의 막연함을 이해하고, 과외 선생님이 알려주듯 친절하게 핵심적인 내용을 콕콕 집어준다.',
        '한빛미디어', '2020-12-21', 26000, 23400, 1, 'https://image.aladin.co.kr/product/25793/20/cover/k052736813_2.jpg',
        10),
       ('9791140706129', 'K442834848', '기술 면접 대비 CS 전공 핵심요약집 - IT 대기업 합격자의 비밀 노트', '목차
1장 운영체제
1.1 운영체제
1.2 프로세스
1.3 스케줄링
1.4 메모리 관리 전략
1.5 가상 메모리
1.6 캐시 메모리
1.7 면접 전 요약 정리
1.8 예상 면접 질문
2장 컴퓨터 네트워크
2.1 네트워크 계층
2.2 TCP와 UDP
2.3 HTTP
2.4 REST
2.5 면접 전 요약 정리
2.6 예상 면접 질문
3장 데이터베이스
3.1 데이터베이스의 종류
3.2 관계형 데이터베이스
3.3 트랜잭션
3.4 조인
3.5 면접 전 요약 정리
3.6 예상 면접 질문
4장 자료구조
4.1 복잡도
4.2 선형 자료구조
4.3 비선형 자료구조
4.4 면접 전 요약 정리
4.5 예상 면접 질문
5장 알고리즘
5.1 정렬 알고리즘
5.2 최소 신장 트리
5.3 최단 거리 알고리즘
5.4 면접 전 요약 정리
5.5 예상 면접 질문
6장 부록
6.1 개발 분야별 예상 질문
6.2 자기소개서 작성
6.3 포트폴리오 작성
펼쳐보기
접어보기',
        '기술 면접에 자주 나오는 필수 주제 5가지를 엄선해 핵심 개념을 요약 정리한다. 또한, 예상 질문과 함께 기술 면접에서 놓치기 쉬운 답변 포인트를 제시하고, 어떻게 답변해야 개발자로서의 역량을 드러낼 수 있는지 가이드한다.',
        '길벗', '2023-08-25', 24000, 21600, 1, 'https://image.aladin.co.kr/product/32263/66/cover/k442834848_1.jpg', 10),
       ('9791161757650', 'K282834560', '데이터 분석과 비판적 사고 - 양적 추론과 분석의 길잡이', '목차
01장. 데이터 기반 시대에 명확하게 사고하기
__1장에서 다루는 내용
__들어가며
__경고성 일화
____에이브에게 내린 성급한 진단
____시민 저항 운동
____깨진 유리창 정책
__사고와 데이터는 서로 보완하지, 대체하지 않는다
__읽을거리
1부 ㅡ 공통 언어 구축하기
02장. 상관관계: 무엇이며 어디에 쓰는가?
__2장에서 다루는 내용
__들어가며
__상관관계란 무엇인가?
____단순 사실인가 상관관계인가?
__상관관계는 어디에 쓰나?
____관계 서술
____예측
____인과 추론
__상관관계 측정
____평균, 분산, 표준 편차
____공분산
____상관계수
____회귀선 기울기
____모집단과 표본
__선형성에 관한 직설
__정리
__핵심 용어
__연습 문제
__읽을거리
03장. 인과관계: 무엇이며 어디에 쓰는가?
__3장에서 다루는 내용
__들어가며
__인과관계란 무엇인가?
__잠재적 결과와 반사실성
__인과관계는 어디에 쓰나?
__인과 추론의 근본적인 문제
__개념적 쟁점
____원인이 무엇인가?
____인과관계와 반례
____인과관계와 법률
____인과관계가 시간을 거슬러 올라갈 수 있나?
____인과관계는 물리적인 연결 고리가 있어야 하나?
____인과관계가 반드시 상관관계를 내포하지는 않는다
__정리
__핵심 용어
__연습 문제
__읽을거리
2부 ㅡ 관계가 존재하는가?
04장. 상관관계는 변이가 있어야 한다
__4장에서 다루는 내용
__들어가며
__종속 변수의 취사 선택
____1만 시간 법칙
____젊은 세대의 타락
____고등학교 중퇴
____자살 공격
__세상은 사람들이 종속 변수를 취사 선택하게끔 이뤄졌다
____의사 눈에는 환자만 보인다
____사후 분석
____인생의 조언
__정리
__핵심 용어
__연습 문제
__읽을거리
05장. 관계 서술과 예측에 쓰는 회귀
__5장에서 다루는 내용
__들어가며
__회귀 기초
__선형 회귀, 비선형 데이터
__과적합 문제
____대통령 선거 예측
__회귀 결과를 어떻게 보여 줄까
__회귀의 간략한 학문적 역사
__정리
__핵심 용어
__연습 문제
__읽을거리
06장. 표본, 불확실성, 통계적 추론
__6장에서 다루는 내용
__들어가며
__추정
__왜 추정치는 추정 대상과 다를까?
____편향
____잡음
__어떤 추정량이 좋은가?
__정밀도 정량화하기
____표준 오차
____작은 표본과 극단적인 관찰값
____신뢰 구간
__통계적 추론과 가설 검정
____가설 검정
____통계적 유의성
__관계에 관한 통계적 추론
__전체 모집단 데이터가 있으면 어떻게 할까?
__실질적 유의성 대 통계적 유의성
____소셜미디어와 투표
____제2차 개혁법
__정리
__핵심 용어
__연습 문제
__읽을거리
07장. 과도한 비교, 부실한 보고
__7장에서 다루는 내용
__들어가며
____문어가 축구 전문가가 되다?
__출판 편향
____p -해킹
____p -검열
__대부분의 과학적 ‘사실’이 거짓일까?
____초감각적 지각
____투표 독려
____p -해킹 수사대
__가능성 있는 해법
____유의성 문턱값을 줄여라
____복수 검정에서 p -값을 조정하라
____통계적 유의성에 너무 집착하지 마라
____사전 등록
____재현
____중요하고 타당한 가설을 검증하라
__학문 너머로
____슈퍼스타
__정리
__핵심 용어
__연습 문제
__읽을거리
08장. 평균으로의 회귀
__8장에서 다루는 내용
__들어가며
____진실이 흐릿해진다?
__프랜시스 골턴과 평범함으로의 회귀
__평균으로의 회귀는 중력이 아니다
__도움 구하기
____무릎 수술이 효과가 있나?
__평균 회귀, 위약 효과, 우주의 습관화
____위약 효과
____우주의 습관화 해설
____우주의 습관화와 유전학
__믿음은 평균으로 회귀하지 않는다
__정리
__핵심 용어
__연습 문제
__읽을거리
3부 ㅡ 인과관계인가?
09장, 어째서 상관관계는 인과관계를 내포하지 않는가
__9장에서 다루는 내용
__들어가며
____대안학교
__잠재적 결과를 명확하게 이해하기
__편향의 근원
____교란 변수
____역인과관계
____1만 시간 법칙 다시 보기
____다이어트 소다
__교란 변수와 역인과관계는 어떻게 다른가?
____선거 운동 비용
__편향의 방향(부호) 정하기
____피임과 HIV
__기작 대 교란 변수
__편향과 잡음에 관해 명확하게 사고하기
__정리
__핵심 용어
__연습 문제
__읽을거리
10장. 교란 변수 통제
__10장에서 다루는 내용
__들어가며
____의회의 투표 관리
____이종 조치 효과에 관한 단상
__회귀 파헤치기
__회귀에서 어떻게 통제하나?
__통제와 인과관계
____소셜미디어가 해로운가?
__회귀 표 읽기
__교란 변수 통제 대 기작
__마법은 없다
__정리
__핵심 용어
__연습 문제
__읽을거리
11장. 무작위 실험
__11장에서 다루는 내용
__들어가며
____모유 수유
__무작위와 인과 추론
__실험에서의 추정과 추론
____표준 오차
____가설 검정
__실험에서 나타나는 문제점들
____불응과 도구 변수
____우연성 불균형
____검정력 부족
____이탈
____간섭
__자연 실험
____군 복무와 미래 소득
__정리
__핵심 용어
__연습 문제
__읽을거리
12장. 불연속 회귀 설계
__12장에서 다루는 내용
__들어가며
__불연속 회귀 설계의 구현 방법
____과격파와 중도파 중 당선 가능성이 높은 쪽은?
__문턱값 지점의 연속성
____선거에 관한 불연속 회귀 설계에서도 연속성이 유지될까?
__불응과 흐릿한 불연속 회귀
____베트남전의 폭격
__동기와 성공
__정리
__핵심 용어
__연습 문제
__읽을거리
13장. 이중차분법 설계
__13장에서 다루는 내용
__들어가며
__평행 추세
__두 대상과 두 시기
____실업과 최저임금
__N 개의 대상, 두 시기
____텔레비전 시청이 아이들에게 해로운가?
__N 개의 대상, N 개의 시기
____피임 그리고 성별에 따른 임금 차이
__유용한 진단
____신문의 지지가 투표 결정에 영향을 미치는가?
____비만은 전염되나?
__이중차분법으로 결과 검증하기
____민주적 평화
__정리
__핵심 용어
__연습 문제
__읽을거리
14장. 기작 평가
__14장에서 다루는 내용
__들어가며
__인과매개 분석
__중간 결과
____인지적 행동 치료와 위험에 처한 라이베리아의 청년들
__독립된 이론적 예측
____유권자들이 여성 후보를 차별하는가?
__설계로 기작을 시험하기
____사회적 압박과 투표
__기작 구분하기
____물가 폭등과 극심한 갈등
__정리
__핵심 용어
__연습 문제
__읽을거리
4부 ㅡ 정보로부터 의사결정에 이르기까지
15장 통계를 실체로
__15장에서 다루는 내용
__들어가며
__올바른 단위는 무엇인가?
____갤런당 마일과 마일당 갤런
____퍼센트 대 퍼센트포인트
__데이터 시각화
____정책 선호도와 남벌 전략
____데이터 시각화의 경험 법칙
__통계에서 믿음으로: 베이즈 법칙
____베이즈 법칙
____정보, 믿음, 사전 확률, 사후 확률
____에이브의 소아 지방변증 돌아보기
____공항에서 테러리스트 탐지하기
____베이즈 법칙과 양적 분석
__비용과 편익 기대치
____자주 또는 정확하게 검사하기
__정리
__핵심 용어
__연습 문제
__읽을거리
16장. 목적에 맞게 측정하라
__16장에서 다루는 내용
__들어가며
__엉뚱한 결과나 조치를 측정하기
____일부분만 측정
____중간 결과
____부정확한 목적
__표본은 적절한가?
____외적 타당성
____표본 선택
__전략적 적응과 관계 변화
____등불세와 창문세
____야구의 수비 시프트
____마약과의 전쟁
__정리
__핵심 용어
__연습 문제
__읽을거리
17장. 정량화의 한계
__17장에서 다루는 내용
__들어가며
__증거가 부족할 때의 의사결정
____비용 편익 분석과 환경 규제
____치실 사용과 마스크 착용
__정량화와 가치
____정량적 도구가 어떻게 가치를 몰래 들이미는가
____정량화는 어떻게 우리의 가치를 형성하는가
__명확히 사고하고 다른 사람들도 따르도록 돕자
__연습 문제
__읽을거리
펼쳐보기
접어보기',
        '데이터를 해석하는 과정에서 범하기 쉬운 오류를 소개하고, 이런 오류를 피해 올바르게 사고하는 원칙을 강조한다. 다양한 분야의 실제 사례를 소개함으로써 상관관계나 인과관계처럼 많은 사람들이 사용하면서도 쉽게 헷갈리는 핵심 개념을 정확히 이해하도록 돕는다.',
        '에이콘출판', '2023-07-28', 35000, 31500, 1, 'https://image.aladin.co.kr/product/31984/62/cover/k282834560_1.jpg',
        10),
       ('9791169210287', 'K602830144', '혼자 공부하는 데이터 분석 with 파이썬 - 1:1 과외하듯 배우는 데이터 분석 자습서', '목차
Chapter 01 데이터 분석을 시작하며
01-1 데이터 분석이란
__데이터 분석과 데이터 과학
__데이터 분석가
__데이터 분석을 위한 도구
[좀 더 알아보기] 데이터 마이닝과 머신러닝
[3가지 키워드로 정리하는 핵심 포인트]
[학습에 꼭 필요한 핵심 패키지]
[확인 문제]
01-2 구글 코랩과 주피터 노트북
__구글 코랩
__노트북
[좀 더 알아보기] 마크다운 서식
[5가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 텍스트 셀 툴바]
[확인 문제]
01-3 이 도서가 얼마나 인기가 좋을까요?
__도서 데이터 찾기
__코랩에서 데이터 확인하기
__파이썬으로 CSV 파일 출력하기
__데이터프레임 다루기: 판다스
__[문제 해결 과정] 적절한 데이터를 찾아서 업로드하고 읽기
[좀 더 알아보기] 공개 데이터 세트 대표 사이트와 유명 포럼
[5가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 02 데이터 수집하기
02-1 API 사용하기
__API란
__파이썬에서 JSON 데이터 다루기
__파이썬에서 XML 데이터 다루기
__API로 20대가 가장 좋아하는 도서 찾기
__[문제 해결 과정] 공개 API로 웹에서 데이터 가져오기
[4가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
02-2 웹 스크래핑 사용하기
__도서 쪽수를 찾아서
__검색 결과 페이지 가져오기
__HTML에서 데이터 추출하기: 뷰티플수프
__전체 도서의 쪽수 구하기
__웹 스크래핑할 때 주의할 점
__[문제 해결 과정] 웹 스크래핑으로 HTML 수집하기
[좀 더 알아보기] merge() 함수의 매개변수
[2가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 03 데이터 정제하기
03-1 불필요한 데이터 삭제하기
__열 삭제하기
__행 삭제하기
__중복된 행 찾기
__그룹별로 모으기
__원본 데이터 업데이트하기
__[문제해결 과정] 일괄 처리 함수 만들기
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
03-2 잘못된 데이터 수정하기
__데이터프레임 정보 요약 확인하기
__누락된 값 처리하기
__정규 표현식
__잘못된 값 바꾸기
__누락된 정보 채우기
__[문제해결 과정] 데이터를 이해하고 올바르게 정제하기
[2가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 04 데이터 요약하기
04-1 통계로 요약하기
__기술통계 구하기
__평균 구하기
__중앙값 구하기
__최솟값, 최댓값 구하기
__분위수 구하기
__분산 구하기
__표준편차 구하기
__최빈값 구하기
__[문제해결 과정] 데이터프레임에서 기술통계 구하기
[좀 더 알아보기] 넘파이의 기술통계 함수
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
04-2 분포 요약하기
__산점도 그리기
__히스토그램 그리기
__상자 수염 그림 그리기
__[문제해결 과정] 통계량을 시각적으로 표현하기
[좀 더 알아보기] 판다스의 그래프 함수
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 05 데이터 시각화하기
05-1 맷플롯립 기본 요소 알아보기
__Figure 객체
__rcParams 객체
__여러 개의 서브플롯 출력하기
[5가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
05-2 선 그래프와 막대 그래프 그리기
__연도별 발행 도서 개수 구하기
__주제별 도서 개수 구하기
__선 그래프 그리기
__막대 그래프 그리기
__[문제 해결 과정] 맷플롯립으로 선 그래프와 막대 그래프 그리기
[좀 더 알아보기(1)] 이미지 출력하고 저장하기
[좀 더 알아보기(2)] 그래프를 이미지로 저장하기
[2가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 06 복잡한 데이터 표현하기
06-1 객체지향 API로 그래프 꾸미기
__pyplot 방식과 객체지향 API 방식
__그래프에 한글 출력하기
__출판사별 발행 도서 산점도 그리기
__[문제 해결 과정] 맷플롯립의 다양한 기능으로 그래프 개선하기
[3가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
06-2 맷플롯립의 고급 기능 배우기
__실습 준비하기
__하나의 피겨에 여러 개의 선 그래프 그리기
__하나의 피겨에 여러 개의 막대 그래프 그리기
__원 그래프 그리기
__여러 종류의 그래프가 있는 서브플롯 그리기
__[문제 해결 과정] 맷플롯립으로 복잡한 그래프 그리기
[좀 더 알아보기] 판다스로 여러 개의 그래프 그리기
[5가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
Chapter 07 검증하고 예측하기
07-1 통계적으로 추론하기
__모수검정이란
__표준점수 구하기
__중심극한정리 알아보기
__모집단의 평균 범위 추정하기: 신뢰구간
__통계적 의미 확인하기: 가설검정
__정규분포가 아닐 때 가설 검증하기: 순열검정
[문제 해결 과정] 표본 데이터에서 의사 결정 도출하기
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
[확인 문제]
07-2 머신러닝으로 예측하기
__알아 두면 좋은 머신러닝 용어
__모델 훈련하기
__훈련된 모델을 평가하기: 결정계수
__연속적인 값 예측하기: 선형회귀
__카테고리 예측하기: 로지스틱 회귀
__[문제 해결 과정] 도서권수로 대출건수 예측하기
[좀 더 알아보기]	평균제곱오차와 평균절댓값오차로 모델 평가하기
[8가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 함수와 메서드]
부록 A 한발 더 나아가기: 데이터베이스와 SQL
부록 B 이 책에서 배운 함수와 메서드
부록 C 에필로그
__확인 문제 정답
__찾아보기
펼쳐보기
접어보기',
        '독학으로 데이터 분석을 배우는 입문자가 ‘꼭 필요한 내용을 제대로 학습’할 수 있도록 구성했다. 뭘 모르는지조차 모르는 입문자의 막연한 마음에 십분 공감하여 과외 선생님이 알려주듯 친절하게, 핵심적인 내용만 콕콕 집어 준다.',
        '한빛미디어', '2023-01-02', 26000, 23400, 1, 'https://image.aladin.co.kr/product/30707/1/cover/k602830144_1.jpg',
        10),
       ('9791162244739', 'K032835973', '혼자 공부하는 SQL - 1:1 과외하듯 배우는 데이터베이스 자습서', '목차
Chapter 01 데이터베이스와 SQL
: 데이터베이스와 관계 깊은 DBMS를 살펴보고, MySQL을 설치해 작업 환경을 준비합니다.
01-1 데이터베이스 알아보기
__데이터베이스와 DBMS
__DBMS의 발전 과정
__DBMS의 분류
__DBMS에서 사용되는 언어: SQL
[4가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
01-2 MySQL 설치하기
__MySQL 설치를 위한 컴퓨터 환경
__MySQL 다운로드 및 설치하기
__MySQL 정상 작동 확인하기
__MariaDB의 다운로드와 설치
[3가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
Chapter 02 실전용 SQL 미리 맛보기
: 흥미롭게 학습하기 위해 실전에서 사용되는 SQL을 미리 맛보는 시간을 가져봅니다.
02-1 건물을 짓기 위한 설계도: 데이터베이스 모델링
__프로젝트 진행 단계
__데이터베이스 모델링
__전체 데이터베이스 구성도
[좀 더 알아보기] 데이터베이스 모델링 툴
[4가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
02-2 데이터베이스 시작부터 끝까지
__DBMS 설치하기
__데이터베이스 만들기
__테이블 만들기
__데이터 입력하기
__데이터 활용하기
[4가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
02-3 데이터베이스 개체
__인덱스
__뷰
__스토어드 프로시저
[3가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
Chapter 03 SQL 기본 문법
: 기본적인 SQL 문법을 이해하고 그 사용법이 익숙해지도록 연습해봅니다.
03-1 기본 중에 기본 SELECT~FROM~WHERE
__실습용 데이터베이스 구축
__기본 조회하기: SELECT ~ FROM
__특정한 조건만 조회하기: SELECT ~ FROM ~ WHERE
[좀 더 알아보기] 서브 쿼리
[5가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
03-2 좀 더 깊게 알아보는 SELECT 문
__ORDER BY 절
__GROUP BY 절
[5가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
03-3 데이터 변경을 위한 SQL 문
__데이터 입력: INSERT
__데이터 수정: UPDATE
__데이터 삭제: DELETE
__대용량 테이블의 삭제
[5가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
Chapter 04 SQL 고급 문법
: 고급 SQL을 활용하기 위한 데이터 형식과 조인에 대해 살펴보고, SQL 프로그래밍을 배워봅니다.
04-1 MySQL의 데이터 형식
__데이터 형식
__변수의 사용
__데이터 형 변환
[6가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
04-2 두 테이블을 묶는 조인
__내부 조인
__중복된 결과 1개만 출력하기
__외부 조인
__기타 조인
[6가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
04-3 SQL 프로그래밍
__IF 문
__CASE 문
__WHILE 문
__동적 SQL
[5가지 키워드로 끝내는 핵심 포인트]
[확인문제]
Chapter 05 테이블과 뷰
: 데이터베이스의 다양한 개체 중 가장 중요한 테이블과 뷰에 살펴봅니다.
05-1 테이블 만들기
__데이터베이스와 테이블 설계하기
__GUI 환경에서 테이블 만들기
__SQL로 테이블 만들기
[5가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
05-2 제약조건으로 테이블을 견고하게
__제약조건의 기본 개념과 종류
__기본 키 제약조건
__외래 키 제약조건
__기타 제약조건
[6가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
05-3 가상의 테이블: 뷰
__뷰의 개념
__뷰의 실제 작동
[6가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
Chapter 06 인덱스
: 데이터베이스에서 정보를 추출하는 시간을 단축시켜주는 인덱스에 대해 살펴봅니다.
06-1 인덱스 개념을 파악하자
__인덱스의 개념
__인덱스의 종류
[3가지 키워드로 끝내는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인문제]
06-2 인덱스의 내부 작동
__인덱스의 내부 작동 원리
__인덱스의 구조
[5가지 키워드로 끝내는 핵심 포인트]
[확인문제]
06-3 인덱스의 실제 사용
__인덱스 생성과 제거 문법
__인덱스 생성과 제거 실습
__인덱스를 효과적으로 사용하는 방법
[5가지 키워드로 끝내는 핵심 포인트]
[확인문제]
Chapter 07 스토어드 프로시저
: 스토어드 프로시저로 SQL에 프로그래밍 로직을 추가하는 방법을 배웁니다.
07-1 스토어드 프로시저 사용 방법
__스토어드 프로시저 기본
__스토어드 프로시저 실습
[6가지 키워드로 끝내는 핵심 포인트]
[확인문제]
07-2 스토어드 함수와 커서
__스토어드 함수
__커서로 한 행씩 처리하기
[5가지 키워드로 끝내는 핵심 포인트]
[확인문제]
07-3 자동 실행되는 트리거
__트리거 기본
__트리거 활용
[좀 더 알아보기] 트리거가 사용하는 임시 테이블
[6가지 키워드로 끝내는 핵심 포인트]
[확인문제]
Chapter 08 SQL과 파이썬 연결
: 프로그래밍 언어로 SQL과 연결하면 일반 사용자도 MySQL을 편리하게 사용할 수 있습니다. SQL과 파이썬 연동에 대해 배워봅니다.
08-1 파이썬 개발 환경 준비
__파이썬 소개
__파이썬 설치
__파이썬 사용 방법
[6가지 키워드로 끝내는 핵심 포인트]
[확인문제]
08-2 파이썬과 MySQL의 연동
__연동 프로그래밍 기본
__연동 프로그래밍 활용
[6가지 키워드로 끝내는 핵심 포인트]
[순서도로 살펴보는 핵심 포인트]
[확인문제]
08-3 GUI 응용 프로그램
__GUI 기본 프로그래밍
__완전한 형태의 GUI 응용 프로그래밍
[7가지 키워드로 끝내는 핵심 포인트]
[확인문제]
__부록 A MySQL 연동을 위한 파이썬 필수 문법
[확인문제 정답]
[찾아보기]
펼쳐보기
접어보기',
        '아무런 사전 지식 없는 입문자가 ‘꼭 필요한 내용을 제대로’ 학습할 수 있도록 구성했다. ‘무엇을’, ‘어떻게’ 학습해야 할지조차 모르는 입문자의 막연한 마음을 살펴, 과외 선생님이 알려주듯 친절하게, 그러나 핵심적인 내용만 콕콕 집어준다.',
        '한빛미디어', '2021-11-01', 24000, 21600, 1, 'https://image.aladin.co.kr/product/28203/15/cover/k032835973_1.jpg',
        10),
       ('9791161758350', 'K982939216', 'LangChain으로 구현하는 LLM - 파이썬, ChatGPT로 LLM 애플리케이션 만들기', '목차
1장. 생성형 AI란 무엇인가?
__생성형 AI 소개
____생성 모델이란 무엇인가?
____왜 지금인가?
__LLM의 이해
____GPT란 무엇인가?
____다른 LLM
____주요 플레이어
____GPT 모델은 어떻게 작동할까?
______사전 훈련
______토큰화
______스케일링
______조건화
____이러한 모델을 시험하는 방법
__텍스트 투 이미지 모델이란?
__다른 영역에서 AI가 할 수 있는 일
__요약
__문제
2장. LLM 응용을 위한 LangChain
__확률적 앵무새를 넘어서
____LLM의 한계는 무엇인가?
____LLM의 한계를 완화하는 방법
____LLM 응용이란 무엇인가?
__LangChain이란 무엇인가?
__LangChain의 핵심 요소 탐색
____체인이란 무엇인가?
____에이전트는 무엇인가?
____메모리는 무엇인가?
____도구란 무엇인가?
__LangChain의 작동 원리
__LangChain과 다른 프레임워크와의 비교
__요약
__문제
3장. LangChain으로 시작하기
__이 책을 위한 종속성 설정 방법
____pip
____Poetry
____Conda
____Docker
__API 모델 통합 탐색
____가짜 LLM
____OpenAI
____Hugging Face
____Google Cloud Platform
____Jina AI
____Replicate
____그 외
____애저
____Anthropic
__로컬 모델 탐색
____Hugging Face Transformers
____llama.cpp
____GPT4ALL
__고객 서비스를 위한 애플리케이션 구축
__요약
__문제
4장. 능력 있는 비서 구축
__팩트 체크를 통한 환각 완화
__정보 요약
____기본 프롬프팅
____프롬프트 템플릿
____밀도 체인
____맵 리듀스 파이프라인
____토큰 사용량 모니터링
__문서에서 정보 추출
__툴을 사용한 질문 응답
____툴을 사용한 정보 검색
____시각 인터페이스 구축
__추론 전략 탐색
__요약
__문제
5장. ChatGPT 같은 챗봇 구축
__챗봇이란 무엇인가?
__검색과 벡터의 이해
____임베딩
____벡터 저장소
______벡터 인덱싱
______벡터 라이브러리
______벡터 데이터베이스
__LangChain에서의 로딩 및 검색
____문서 로더
____LangChain에서 검색기
______kNN 검색기
______PubMed 검색기
______맞춤형 검색기
__챗봇 구현
____문서 로더
____벡터 저장소
____메모리
______대화 버퍼
______대화 요약 기억
______지식 그래프 저장
______여러 메모리 메커니즘의 병합
______장기 일관성
__응답 중재
__요약
__문제
6장. 생성형 AI를 이용한 소프트웨어 개발
__소프트웨어 개발과 AI
____코드 LLM
__LLM을 사용한 코드 작성
____StarCoder
____StarChat
____LLaMa 2
____소형 로컬 모델
__소프트웨어 개발 자동화
__요약
__문제
7장. 데이터 과학을 위한 LLM
__생성 모델이 데이터 과학에 미치는 영향
__자동화된 데이터 과학
____데이터 수집
____시각화와 탐색적 데이터 분석
____전처리와 특징 추출
____AutoML
__데이터 과학 질문에 답하기 위한 에이전트 사용
__LLM을 사용한 데이터 탐색
__요약
__질문
8장. LLM 사용자 정의 및 출력
__LLM 조건화
____조건화 기법
______인간 피드백을 가미한 강화학습
______LoRA
______추론 시간 조건화
__미세 조정
____미세 조정 설정
____오픈 소스 모델
____상업용 모델
__프롬프트 공학
____프롬프트 기술
______제로샷 프롬프팅
______퓨샷 러닝
______CoT 프롬프팅
______자기 일관성
______ToT
__요약
__문제
9장. 생성형 AI 제품화
__LLM 애플리케이션의 제품화를 준비하는 방법
____용어
__LLM 앱을 평가하는 방법
____두 출력 비교
____기준 대비 비교
____문자열과 문맥 비교
____데이터셋을 대상으로 한 평가 수행
__LLM 앱을 배포하는 방법
____FastAPI 웹서버
____Ray
__LLM 앱을 관찰하는 방법
____관찰 반응
____관측성 도구
____LangSmith
____PromptWatch
__요약
__문제
10장. 생성형 모델의 미래
__생성형 AI의 현 상태
____도전 과제
____모델 개발에서의 추세
____빅테크 대 소기업
____AGI
__경제적 결과
____창의적 산업과 광고
____교육
____법률
____제조
____의학
____군사
__사회적 함의
____오정보와 사이버보안
____규제와 실행의 어려움
__앞으로의 길
펼쳐보기
접어보기', '생성형 AI의 개요와 함께 LangChain 프레임워크를 사용한 실질적인 구현 사례까지 모두 10개의 장으로 구성해 포괄적으로 제공하는 책이다.', '에이콘출판', '2024-03-29', 35000,
        31500, 1, 'https://image.aladin.co.kr/product/33627/83/cover/k982939216_1.jpg', 10),
       ('9791169212038', 'K492939575', '게임 AI를 위한 탐색 알고리즘 입문 - 트리 탐색과 메타 휴리스틱으로 완성하는 최적화, C++ 기반 예제 코드 제공', '목차
1장 게임과 탐색의 세계
1.1 게임 AI와 탐색
__1.1.1 게임에서 말하는 AI와 탐색
__1.1.2 게임 종류와 탐색 알고리즘
1.2 게임에서 탐색의 매력
__1.2.1 개인 게임 개발을 한다면 탐색!
__1.2.2 대규모 상업 게임 개발에서도 탐색!
__1.2.3 다양한 프로그래밍 대회에서 이기기 위한 비장의 무기
2장 개발 환경 준비
2.1 WSL(Windows Subsystem for Linux) 설치 방법
__2.1.1 WSL 동작 확인
__2.1.2 CPU 가상화 기능 확인
__2.1.3 바이오스/UEFI에서 가상화 기능 활성화
__2.1.4 배포판 설정
__2.1.5 패키지 업데이트
__2.1.6 C++ 개발 환경 설치하기
3장 컨텍스트가 있는 1인 게임에서 사용하고 싶은 탐색 알고리즘
3.1 예제 게임 소개: 숫자 모으기 미로 게임
__3.1.1 숫자 모으기 미로 게임
__3.1.2 숫자 모으기 미로 게임 구현하기
3.2 그리디 알고리즘(탐욕법)
__3.2.1 그리디 알고리즘의 특징과 동작: 모든 탐색 알고리즘의 기초! 이것만 있으면 싸울 수 있다!
__3.2.2 그리디 알고리즘 구현하기
3.3 빔 탐색
__3.3.1 빔 탐색의 특징과 동작: 탐색 공간을 파악해라! 경진 대회 상위권에서 자주 등장하는 탐색법!
__3.3.2 빔 탐색 구현하기
COLUMN 빔 탐색 구현 방식 변경
3.4 Chokudai 탐색
__3.4.1 Chokudai 탐색의 특징과 동작: 다양성을 자동으로 확보! 간편하고 초보자에게 추천!
__3.4.2 Chokudai 탐색 구현하기
4장 컨텍스트가 없는 1인 게임에서 사용하고 싶은 탐색 알고리즘
4.1 예제 게임 소개: 자동 숫자 모으기 미로 게임
__4.1.1 숫자 모으기 미로 게임
__4.1.2 자동 숫자 모으기 미로 구현하기
4.2 언덕 오르기 탐색
__4.2.1 언덕 오르기 탐색의 특징과 동작: 착실하게 좋은 답을 탐색한다! 간단하고 안정감 있는 알고리즘!
__4.2.2 언덕 오르기 탐색 구현하기
4.3 담금질 기법
__4.3.1 담금질 기법의 특징과 동작: 국소 최적해에서 벗어나라! 마라톤 매치로 친숙한 알고리즘!
__4.3.2 담금질 기법 구현하기
COLUMN 메타 휴리스틱
5장 교대로 두는 2인 게임에서 사용하고 싶은 탐색 알고리즘
5.1 예제 게임 소개: 교대로 두는 숫자 모으기 미로 게임
__5.1.1 교대로 두는 숫자 모으기 미로 게임
__5.1.2 교대로 두는 숫자 모으기 미로 구현하기
5.2 미니맥스 알고리즘
__5.2.1 미니맥스 알고리즘의 특징과 동작: 신의 한 수!
__5.2.2 미니맥스 알고리즘 구현하기
5.3 알파-베타 가지치기
__5.3.1 알파-베타 가지치기의 특징과 동작: 낭비는 용서할 수 없다! 미니맥스 알고리즘 진화!
COLUMN 미니맥스 알고리즘과 알파-베타 가지치기의 관계
__5.3.2 알파-베타 가지치기 구현하기
5.4 반복 심화 탐색
__5.4.1 반복 심화 탐색의 특징과 동작: 낭비할 시간이 없다! 최적의 트리 깊이를 찾자!
__5.4.2 반복 심화 탐색 구현하기
5.5 순수 몬테카를로 탐색
__5.5.1 순수 몬테카를로 탐색의 특징과 동작: 게임판 평가는 필요없다! 승률이 좋은 수를 선택하자!
COLUMN 몬테카를로 탐색과 라스베가스 탐색
__5.5.2 순수 몬테카를로 탐색 구현하기
5.6 MCTS 몬테카를로 트리 탐색
__5.6.1 MCTS의 특징과 동작: 적을 얕보지 말라! 강자 대결 시뮬레이션
__5.6.2 MCTS 구현하기
5.7 Thunder 탐색
__5.7.1 Thunder 탐색의 특징과 동작: 필자가 발명! 게임판 평가를 이용해서 유리한 노드를 탐색한다!
__5.7.2 Thunder 탐색 구현하기
COLUMN Thunder 탐색은 어떻게 만들어졌나?
6장 동시에 두는 2인 게임에서 사용하고 싶은 탐색 알고리즘
6.1 예제 게임 소개: 동시에 두는 숫자 모으기 미로 게임
__6.1.1 동시에 두는 숫자 모으기 미로 게임
__6.1.2 동시에 두는 숫자 모으기 미로 구현하기
6.2 교대로 두는 게임용 알고리즘 적용
__6.2.1 순수 몬테카를로 탐색 구현하기
__6.2.2 MCTS 구현하기
6.3 DUCT(Decoupled Upper Confidence Tree)
__6.3.1 DUCT의 특징과 동작: 동시에 두는 게임이라면 바로 이거!
__6.3.2 DUCT 구현하기
7장 더 좋은 탐색을 하는 기법
7.1 예제 게임 소개: 벽이 있는 숫자 모으기 미로 게임
__7.1.1 벽이 있는 숫자 모으기 미로 게임
__7.1.2 벽이 있는 숫자 모으기 미로 구현하기
7.2 평가 함수 설계하기
__7.2.1 실제 기록 점수 이외의 후보 점수 추가하기
__7.2.2 실제 기록 점수 이외의 보조 기록 점수를 추가하는 방법 구현하기
7.3 다양성 확보 방침
__7.3.1 동일 게임판 제거하기
__7.3.2 동일 게임판 제거 구현하기
7.4 고속화
__7.4.1 다수의 비트열로 게임판 표현하기
__7.4.2 다수의 비트열로 게임판 표현 구현하기
__7.4.3 단일 비트열로 게임판 표현하기
__7.4.4 단일 비트열을 사용한 게임판 표현 구현하기
__7.4.5 복사 횟수 제어하기
__7.4.6 참조 카운트 방식으로 복사 횟수 제어 구현하기
8장 실제 게임에 응용하기
8.1 커넥트 포 게임을 플레이하는 AI 구현하기
__8.1.1 커넥트 포 게임
__8.1.2 커넥트 포 구현하기
__8.1.3 게임판 비트보드를 이용해서 고속화하기
__8.1.4 커넥트 포에 비트 연산을 적용해서 구현하기
펼쳐보기
접어보기',
        'C++ 개발 환경 준비와 플레이어의 행동을 예측하거나 조합 최적화를 이용하는 등 게임 유형에 따른 1인 게임에 맞춰 적합한 탐색 알고리즘을 설명한다. 또한 장기나 바둑처럼 교대로 두는 2인 게임 등 다음 수를 전혀 예상할 수 없는 게임에 어울리는 탐색 알고리즘도 함께 살펴본다.',
        '한빛미디어', '2024-03-08', 27000, 24300, 1, 'https://image.aladin.co.kr/product/33534/51/cover/k492939575_1.jpg',
        10),
       ('9791191905694', 'K242938457',
        '코딩 테스트 합격자 되기 : 자바 편 - 자료구조, 알고리즘, 빈출 97 문제로 대비하는 코테 풀 패키지 (모의고사, 엄친아 손노트, 온라인 학습 지원 제공)', '목차
[첫째 마당 : 코딩 테스트 사전 준비]
00장 코딩 테스트를 준비하기 전에
__00-1 합격자가 꼭 되고 싶은 여러분
__타인의 풀이를 보면 사고를 넓힐 수 있다
__나만의 테스트 케이스를 추가하는 건 좋은 알고리즘을 생각할 때 도움이 된다
__00-2 아는 것과 모르는 것을 명확하게
__첫 번째, 기록하라
__두 번째, 시험 보듯 공부하라
__세 번째, 짧은 시간 공부해서는 절대 코딩 테스트를 통과할 수 없다
__네 번째, 나만의 언어로 요약하라
01장 코딩 테스트 효율적으로 준비하기
__01-1 언어 선택하기
__01-2 문제 분석 연습하기
__첫 번째, 문제를 쪼개서 분석하라
__두 번째, 제약 사항을 파악하고 테스트 케이스를 추가하라
__세 번째, 입력값을 분석하라
__네 번째, 그리디하게 접근할 때는 근거를 명확히 해라
__다섯 번째, 데이터 흐름이나 구성을 파악하라
__01-3 의사 코드로 설계하는 연습하기
__첫 번째, 세부 구현이 아닌 동작 중심으로 작성하라
__두 번째, 문제 해결 순서로 작성하라
__세 번째, 충분히 테스트하라
02장 프로그래머스 완벽 활용 가이드
__02-1 프로그래머스는 어떤 곳인가요?
__02-2 프로그래머스 활용 가이드
__프로그래머스 살펴보기
__문제 풀이 과정 살펴보기
03장 알고리즘의 효율 분석
__03-1 시간 복잡도란?
__1차원 배열 검색하기
__알고리즘 수행 시간을 측정하는 방법
__최악의 경우 시간 복잡도를 표현하는 빅오 표기법
__시간 복잡도를 코딩 테스트에 활용하는 방법
__03-2 시간 복잡도 계산해보기
__별 찍기 문제
__박테리아 수명 문제
04장 코딩 테스트 필수 문법
__04-1 프리미티브 타입과 레퍼런스 타입
__정수형
__부동소수형
__04-2 컬렉션 프레임워크
__배열
__리스트
__해시맵
__문자열
__04-3 메서드
__메서드 정의
__메서드 호출
__람다식
__04-4 코딩 테스트 코드 구현 노하우
__조기 반환
__보호 구문
__제네릭
[둘째 마당 : 코딩 테스트 완전 정복]
05장 배열
__05-1 배열 개념
__배열 선언
__배열과 차원
__05-2 ArrayList 사용법
__ArrayList에 데이터 추가
__05-3 ArrayList의 효율성
__배열 연산의 시간 복잡도
__배열을 선택할 때 고려할 점
__05-4 몸풀기 문제
__[문제 01] 배열 정렬하기★
__[문제 02] 배열 제어하기★★
__05-5 합격자가 되는 모의 테스트
__[문제 03] 두 개 뽑아서 더하기★
__[문제 04] 모의고사★
__[문제 05] 행렬의 곱셈★
__[문제 06] 실패율★★
__[문제 07] 방문 길이★★
06장 스택
__06-1 스택 개념
__스택의 동작 원리 이해하기
__06-2 스택의 정의
__스택의 ADT
__Stack 클래스 사용하기
__06-3 몸풀기 문제
__[문제 08] 올바른 괄호★★
__[문제 09] 10진수를 2진수로 변환하기★
__06-4 합격자가 되는 모의 테스트
__[문제 10] 괄호 회전하기★
__[문제 11] 짝지어 제거하기★
__[문제 12] 주식 가격★★
__[문제 13] 크레인 인형 뽑기 게임★★
__[문제 14] 표 편집★★★★★
07장 큐
__07-1 큐의 개념
__큐에서 데이터가 이동하는 과정 살펴보기
__큐의 특성을 활용하는 분야
__큐의 ADT
__07-2 몸풀기 문제
__[문제 15] 요세푸스 문제★★
__07-3 합격자가 되는 모의 테스트
__[문제 16] 기능 개발★★
__[문제 17] 카드 뭉치★★
08장 해시
__08-1 해시의 개념
__해시 자세히 알아보기
__해시의 특성을 활용하는 분야
__08-2 해시 함수
__해시 함수를 구현할 때 고려할 내용
__자주 사용하는 해시 함수 알아보기
__08-3 충돌 처리
__체이닝으로 처리하기
__개방 주소법으로 처리하기
__해시맵
__HashMap 클래스 사용하기
__08-4 몸풀기 문제
__[문제 18] 두 개의 수로 특정값 만들기★
__08-5 합격자가 되는 모의 테스트
__[문제 19] 완주하지 못한 선수★
__[문제 20] 할인 행사★★
__[문제 21] 오픈 채팅방★★
__[문제 22] 베스트 앨범★★
__[문제 23] 신고 결과 받기★★
__[문제 24] 메뉴 리뉴얼★★★
09장 트리
__09-1 트리 개념
__나무를 거꾸로 뒤집어 놓은 모양의 트리
__09-2 이진 트리 표현하기
__배열로 표현하기
__이진 트리 순회하기
__포인터로 표현하기
__인접 리스트로 표현하기
__09-3 이진 트리 탐색하기
__이진 탐색 트리 구축하기
__이진 탐색 트리 탐색하기
__이진 탐색 트리와 배열 탐색의 효율 비교
__09-4 몸풀기 문제
__[문제 25] 트리 순회★
__09-5 합격자가 되는 모의 테스트
__[문제 26] 예상 대진표★
__[문제 27] 다단계 칫솔 판매★★
__[문제 28] 양과 늑대★★★★★
__[문제 29] 길 찾기 게임★★★★
10장 집합
__10-1 집합과 상호배타적 집합의 개념
__집합의 개념
__상호배타적 집합의 특성을 활용하는 분야
__10-2 집합의 연산
__배열을 활용한 트리로 집합 표현하기
__유니온-파인드 알고리즘
__10-3 몸풀기 문제
[문제 30] 간단한 유니온-파인드 알고리즘 구현하기★★
__10-4 합격자가 되는 모의 테스트
__[문제 31] 폰켓몬★
__[문제 32] 영어 끝말잇기★
__[문제 33] 섬 연결하기★★★
11장 그래프
__11-1 그래프의 개념
__그래프 용어 정리
__그래프의 특징과 종류
__그래프 구현
__11-2 그래프 탐색
__깊이 우선 탐색
__너비 우선 탐색
__깊이 우선 탐색과 너비 우선 탐색 비교
__11-3 그래프 최단 경로 구하기
__다익스트라 알고리즘
__벨만-포드 알고리즘
__11-4 몸풀기 문제
__[문제 34] 깊이 우선 탐색 순회★
__[문제 35] 너비 우선 탐색 순회★
__[문제 36] 다익스트라 알고리즘★★★
__11-5 합격자가 되는 모의 테스트
__[문제 37] 게임 맵 최단 거리★★
__[문제 38] 네트워크★★
__[문제 39] 미로 탈출★★
__[문제 40] 배달★★★
__[문제 41] 경주로 건설★★★★★
__[문제 42] 전력망을 둘로 나누기★★
12장 백트래킹
__12-1 백트래킹과 백트래킹 알고리즘 개념
__백트래킹이란?
__백트래킹 알고리즘이란?
__유망 함수란?
__백트래킹 알고리즘 문제에 적용해보기
__N-퀸 문제
__12-2 몸풀기 문제
__[문제 43] 1부터 N까지 숫자 중 합이 10이 되는 조합 구하기★
__[문제 44] 스도쿠 퍼즐★★★
__12-3 합격자가 되는 모의 테스트
__[문제 45] 피로도★
__[문제 46] N-퀸★
__[문제 47] 양궁 대회★★
__[문제 48] 외벽 점검★★★★★
__[문제 49] 사라지는 발판★★★★★
13장 정렬
__13-1 정렬 개념
__정렬이 필요한 이유
__삽입 정렬
__병합 정렬
__힙 정렬
__우선순위 큐
__계수 정렬
__위상 정렬
__13-2 몸풀기 문제
__[문제 50] 계수 정렬 구현하기★
__[문제 51] 정렬이 완료된 두 배열 합치기★
__13-3 합격자가 되는 모의 테스트
__[문제 52] 문자열 내 마음대로 정렬하기★
__[문제 53] 정수 내림차순으로 배치하기★
__[문제 54] K번째 수★
__[문제 55] 가장 큰 수★★★
__[문제 56] 튜플★★
__[문제 57] 지형 이동★★★★
__[문제 58] 전화번호 목록★★
14장 시뮬레이션
__14-1 시뮬레이션 문제 풀이 노하우
__시뮬레이션 문제를 푸는 방법
__행렬 연산
__좌표 연산
__대칭, 회전 연산
__14-2 몸풀기 문제
__[문제 59] 배열 회전하기★★
__[문제 60] 두 행렬을 곱한 후 전치 행렬 만들기★
__[문제 61] 달팽이 수열 만들기★★
__14-3 합격자가 되는 모의 테스트
__[문제 62] 이진 변환 반복하기★★
__[문제 63] 롤케이크 자르기★★
__[문제 64] 카펫★★
__[문제 65] 점프와 순간 이동★★
__[문제 66] 캐릭터의 좌표★★
15장 동적 계획법
__15-1 동적 계획법 개념
__점화식 세우기와 동적 계획법
__재귀 호출의 횟수를 줄여주는 메모이제이션
__최장 증가 부분 수열
__최장 공통 부분 수열
__15-2 몸풀기 문제
__[문제 67] LCS 길이 계산하기★★★
__[문제 68] LIS 길이 계산하기★★★
__[문제 69] 조약돌 문제★★★
__15-3 합격자가 되는 모의 테스트
__[문제 70] 피보나치 수★
__[문제 71] 2 × n 타일링★
__[문제 72] 정수 삼각형★★
__[문제 73] 땅따먹기★★
__[문제 74] 도둑질★★★★★
__[문제 75] 가장 큰 정사각형 찾기★★★
__[문제 76] 단어 퍼즐★★★★
16장 그리디
__16-1 그리디 개념
__그리디 알고리즘으로 거스름돈 내어주기
__그리디 알고리즘이 최적해를 보장하려면?
__16-2 최소 신장 트리
__신장 트리란?
__최소 신장 트리란?
__16-3 배낭 문제
__짐을 쪼갤 수 있는 부분 배낭 문제
__짐을 쪼갤 수 없는 0/1 배낭 문제
__16-4 몸풀기 문제
__[문제 77] 거스름돈 주기★★
__[문제 78] 부분 배낭 문제★★
__16-5 합격자가 되는 모의 테스트
__[문제 79] 예산★
__[문제 80] 구명보트★
__[문제 81] 귤 고르기★★
__[문제 82] 기지국 설치★★
[부록 1 : 모의고사]
_01회 모의고사
__[문제 83] 미로 탈출 명령어
__[문제 84] 택배 배달과 수거하기
__[문제 85] 개인 정보 수집 유효기간
_02회 모의고사
__[문제 86] 110 옮기기
__[문제 87] 쿼드 압축 후 개수 세기
__[문제 88] 없는 숫자 더하기
_03회 모의고사
__[문제 89] 불량 사용자
__[문제 90] k진수에서 소수 개수 구하기
__[문제 91] 거리두기 확인하기
_04회 모의고사
__[문제 92] 코딩 테스트 공부
__[문제 93] 두 큐 합 같게 만들기
__[문제 94] 숫자 게임
_05회 모의고사
__[문제 95] 보석 쇼핑
__[문제 96] 파괴되지 않은 건물
__[문제 97] 로또의 최고 순위와 최저 순위
[부록 2 : 엄친아 요약 노트]
펼쳐보기
접어보기',
        '신입 사원 코딩 테스트 합격에 딱 맞는 빈출문제를 선정하고 풀이하기 위해 저자와 전문 교강사진이 오랜 시간을 들여 고민해 만들었다. 문제의 맥을 관통하는 자료구조와 알고리즘, 시간 복잡도 분석까지 완벽하게 풀이했다.',
        '골든래빗(주)', '2024-03-01', 42000, 37800, 1, 'https://image.aladin.co.kr/product/33510/96/cover/k242938457_1.jpg',
        10),
       ('9791140708277', 'K562938338', '최소한의 데이터 리터러시 - 인공지능 시대를 살아갈 모든 사람을 위한 교양서', '목차
1부 데이터 리터러시를 시작하는 시간
1장 들어가는 글
21세기 미래 역량, 4C
컴퓨터와 문제 해결의 역사
2장 21세기에 가장 인기있는 분야, 데이터 과학
구글 검색량으로 데이터 분야 트렌드 분석하기
데이터 과학에 대한 다양한 정의와 벤 다이어그램
3장 생활 속 데이터에 질문하기
기온 데이터 수집하기
기온 데이터에 질문하기
출퇴근 시간에 사람들이 가장 많이 타고 내리는 역
대중교통 데이터 수집하기
대중교통 데이터에 질문하고 답 찾기
4장 미래를 가장 정확하게 예측하는 방법
인구 데이터 수집하기
인구 데이터에 질문하기
데이터를 읽고 쓰는 데이터 리터러시 키우기
2부 데이터 리터러시를 기르는 시간
5장 데이터 시대에 현명한 미디어 프로슈머로 살아남기
평점 데이터 자세히 살펴보기
여론조사 결과에 휘둘리지 않기
여론조사 너머의 무언가를 보기
6장 영화가 추천되는 과정
추천시스템의 역사와 다양한 알고리즘
추천 시스템을 현명하게 이용하기
확증 편향을 줄이기 위한 실천 방안
7장 아는 만큼 보인다! 데이터를 읽는 통계의 힘
평균의 함정 조심하기
상자그림을 활용한 데이터 시각화
8장 데이터 속에 숨어 있는 관계 찾기
산점도로 두 과목 사이의 관계 파악하기
상관관계 올바르게 해석하기
9장 제작비가 많이 들어간 영화일수록 흥행할까?
두 변수 사이의 경향성 나타내기
머신러닝으로 관객 수 예측하기
10장 데이터를 깊게 보고 오해에서 벗어나기
잘못된 오해, 모자이크 플롯과 조건부확률로 풀기
두 집단으로 나누니 정반대 결과가 나오는 역설
11장 코로나19 검사 결과, 믿어도 될까?
검사의 정확성을 높이는 열쇠: 민감도와 특이도
코로나19 검사 정확도 99%의 맹점
가설 검정의 미묘한 밸런스: 1종 오류와 2종 오류
12장 편견도 데이터로 수정이 될까?
머신러닝의 기반이 되는 베이즈 법칙 이해하기
경험을 통해 믿음을 업데이트하는 과정
3부 데이터 리터러시를 활용하는 시간
13장 이 그래프에서 무슨 일이 일어나고 있을까?
시각화를 통한 데이터 탐색
뉴욕타임스로 데이터 리터러시를 기르는 방법
14장 생활 속에서 활용하는 데이터 리터러시
데이터 리터러시 활용 가이드
생활 속 데이터 리터러시 활용 사례
15장 질문부터 통찰까지 꿰뚫는 설문 조사 만들기
설문지 만들고 응답 데이터 받기
코답(CODAP)을 활용한 설문 응답 데이터 분석
16장 데이터 패턴을 분석해 2050년 서울 기온 예측하기
기온 데이터 패턴 분석하기
머신러닝으로 2050년 기온 예측하기
17장 데이터 윤리가 필요한 시간
데이터와 인공지능의 연결고리
데이터 편향의 위험성
인공지능 발전의 그늘, 윤리와 책임
펼쳐보기
접어보기',
        '맛집 평점과 추천 시스템의 비밀부터 통계와 데이터 과학, 아주 간단한 머신러닝까지 체험해보며 일상생활은 물론 업무에서 어떻게 데이터를 활용해 효율적인 데이터 기반의 의사결정을 할 수 있는지 친절하게 알려준다.',
        '길벗', '2024-02-15', 20000, 18000, 1, 'https://image.aladin.co.kr/product/33413/13/cover/k562938338_1.jpg', 10),
       ('9791192987422', 'K012938902', '러스트 프로그래밍 공식 가이드 - 러스타시안 커뮤니티가 직접 만든 RUST 2021 공식 가이드북, 제2판', '목차
지은이·감수자·옮긴이 소개 xvi
옮긴이 머리말 xvii
베타리더 후기 xix
추천사 xxi
추천 서문 xxii
서문 xxiv
감사의 글 xxv
이 책에 대하여 xxvi
CHAPTER 1 시작해봅시다 1
1.1 러스트 설치 1
__1.1.1 rustup 설치(리눅스 및 macOS) 2
__1.1.2 rustup 설치(윈도우) 3
__1.1.3 트러블슈팅 3
__1.1.4 업데이트 및 삭제 4
__1.1.5 로컬 문서 4
1.2 Hello, World! 5
__1.2.1 프로젝트 디렉터리 생성하기 5
__1.2.2 러스트 프로그램 작성하고 실행하기 6
__1.2.3 러스트 프로그램 뜯어보기 6
__1.2.4 컴파일과 실행은 별개의 과정입니다 8
1.3 카고를 사용해봅시다 9
__1.3.1 카고로 프로젝트 생성하기 10
__1.3.2 카고로 프로젝트를 빌드하고 실행하기 11
__1.3.3 릴리스 빌드 생성하기 13
__1.3.4 관례로서의 카고 14
정리 14
CHAPTER 2 추리 게임 17
2.1 새로운 프로젝트 준비하기 18
2.2 추릿값 처리하기 19
__2.2.1 변수에 값 저장하기 20
__2.2.2 사용자 입력 받기 21
__2.2.3 Result 타입으로 잠재적 실패 다루기 22
__2.2.4 println! 자리표시자를 이용한 값 출력하기 24
__2.2.5 첫 번째 부분 테스트하기 25
2.3 비밀번호 생성하기 25
__2.3.1 크레이트를 사용하여 더 많은 기능 가져오기 25
__2.3.2 임의의 숫자 생성하기 29
2.4 비밀번호와 추릿값 비교하기 31
2.5 반복문을 이용하여 여러 번의 추리 허용하기 35
__2.5.1 정답을 맞힌 후 종료하기 36
__2.5.2 잘못된 입력값 처리하기 37
정리 40
CHAPTER 3 일반적인 프로그래밍 개념 41
3.1 변수와 가변성 42
__3.1.1 상수 44
__3.1.2 섀도잉 45
3.2 데이터 타입 47
__3.2.1 스칼라 타입 48
__3.2.2 복합 타입 52
3.3 함수 57
__3.3.1 매개변수 58
__3.3.2 구문과 표현식 60
__3.3.3 반환값을 갖는 함수 62
3.4 주석 65
3.5 제어 흐름 66
__3.5.1 if 표현식 66
__3.5.2 반복문을 이용한 반복 71
정리 76
CHAPTER 4 소유권 이해하기 79
4.1 소유권이 뭔가요? 79
__4.1.1 소유권 규칙 81
__4.1.2 변수의 스코프 81
__4.1.3 String 타입 82
__4.1.4 메모리와 할당 83
__4.1.5 소유권과 함수 90
__4.1.6 반환값과 스코프 91
4.2 참조와 대여 92
__4.2.1 가변 참조자 95
__4.2.2 댕글링 참조 98
__4.2.3 참조자 규칙 100
4.3 슬라이스 타입 100
__4.3.1 문자열 슬라이스 103
__4.3.2 그 외 슬라이스 108
정리 109
CHAPTER 5 구조체로 연관된 데이터 구조화하기 111
5.1 구조체 정의 및 인스턴스화 111
__5.1.1 필드 초기화 축약법 사용하기 114
__5.1.2 기존 인스턴스를 이용해 새 인스턴스를 만들 때 구조체 업데이트 문법 사용하기 114
__5.1.3 명명된 필드 없는 튜플 구조체를 사용하여 다른 타입 만들기 116
__5.1.4 필드가 없는 유사 유닛 구조체 116
5.2 구조체를 사용한 예제 프로그램 119
__5.2.1 튜플로 리팩터링하기 120
__5.2.2 구조체로 리팩터링하여 코드에 더 많은 의미를 담기 120
__5.2.3 트레이트 파생으로 유용한 기능 추가하기 122
5.3 메서드 문법 126
__5.3.1 메서드 정의하기 126
__5.3.2 더 많은 매개변수를 가진 메서드 129
__5.3.3 연관 함수 130
__5.3.4 여러 개의 impl 블록 131
정리 132
CHAPTER 6 열거형과 패턴 매칭 133
6.1 열거형 정의하기 133
__6.1.1 열거형 값 134
__6.1.2 Option 열거형이 널값보다 좋은 점들 139
6.2 match 제어 흐름 구조 142
__6.2.1 값을 바인딩하는 패턴 144
__6.2.2 Option〈T〉를 이용하는 매칭 145
__6.2.3 match는 철저합니다 147
__6.2.4 포괄 패턴과 _ 자리표시자 148
6.3 if let을 사용한 간결한 제어 흐름 150
정리 152
CHAPTER 7 커져가는 프로젝트를 패키지, 크레이트, 모듈로 관리하기 153
7.1 패키지와 크레이트 154
7.2 모듈을 정의하여 스코프 및 공개 여부 제어하기 158
7.3 경로를 사용하여 모듈 트리의 아이템 참조하기 160
__7.3.1 pub 키워드로 경로 노출하기 163
__7.3.2 super로 시작하는 상대 경로 166
__7.3.3 구조체, 열거형을 공개하기 167
7.4 use 키워드로 경로를 스코프 안으로 가져오기 169
__7.4.1 보편적인 use 경로 작성법 171
__7.4.2 as 키워드로 새로운 이름 제공하기 173
__7.4.3 pub use로 다시 내보내기 173
__7.4.4 외부 패키지 사용하기 174
__7.4.5 중첩 경로를 사용하여 대량의 use 나열을 정리하기 175
__7.4.6 글롭 연산자 176
7.5 별개의 파일로 모듈 분리하기 177
정리 179
CHAPTER 8 일반적인 컬렉션 181
8.1 벡터에 여러 값의 목록 저장하기 182
__8.1.1 새 벡터 만들기 182
__8.1.2 벡터 업데이트하기 183
__8.1.3 벡터 요소 읽기 183
__8.1.4 벡터값에 대해 반복하기 186
__8.1.5 열거형을 이용해 여러 타입 저장하기 187
__8.1.6 벡터가 버려지면 벡터의 요소도 버려집니다 188
8.2 문자열에 UTF - 8 텍스트 저장하기 188
__8.2.1 문자열이 뭔가요? 189
__8.2.2 새로운 문자열 생성하기 189
__8.2.3 문자열 업데이트하기 191
__8.2.4 문자열 내부의 인덱싱 193
__8.2.5 문자열 슬라이싱하기 196
__8.2.6 문자열에 대한 반복을 위한 메서드 197
__8.2.7 문자열은 그렇게 단순하지 않습니다 198
8.3 해시 맵에 서로 연관된 키와 값 저장하기 198
__8.3.1 새로운 해시 맵 생성하기 199
__8.3.2 해시 맵의 값 접근하기 199
__8.3.3 해시 맵과 소유권 200
__8.3.4 해시 맵 업데이트하기 201
__8.3.5 해시 함수 204
정리 204
CHAPTER 9 에러 처리 207
9.1 panic!으로 복구 불가능한 에러 처리하기 208
__9.1.1 panic! 백트레이스 이용하기 209
9.2 Result로 복구 가능한 에러 처리하기 212
__9.2.1 서로 다른 에러에 대해 매칭하기 214
__9.2.2 에러 전파하기 217
9.3 panic!이냐, panic!이 아니냐, 그것이 문제로다 224
__9.3.1 예제, 프로토타입 코드, 그리고 테스트 225
__9.3.2 여러분이 컴파일러보다 더 많은 정보를 가지고 있을 때 225
__9.3.3 에러 처리를 위한 가이드라인 226
__9.3.4 유효성을 위한 커스텀 타입 생성하기 228
정리 230
CHAPTER 10 제네릭 타입, 트레이트, 라이프타임 231
10.1 함수로 추출하여 중복 없애기 232
10.2 제네릭 데이터 타입 235
__10.2.1 제네릭 함수 정의 235
__10.2.2 제네릭 구조체 정의 238
__10.2.3 제네릭 열거형 정의 240
__10.2.4 제네릭 메서드 정의 241
__10.2.5 제네릭 코드의 성능 243
10.3. 트레이트로 공통된 동작 정의하기 244
__10.3.1 트레이트 정의하기 245
__10.3.2 특정 타입에 트레이트 구현하기 246
__10.3.3 기본 구현 248
__10.3.4 매개변수로서의 트레이트 250
__10.3.5 트레이트를 구현하는 타입을 반환하기 253
__10.3.6 트레이트 바운드를 사용해 조건부로 메서드 구현하기 254
10.4 라이프타임으로 참조자의 유효성 검증하기 256
__10.4.1 라이프타임으로 댕글링 참조 방지하기 256
__10.4.2 대여 검사기 258
__10.4.3 함수에서의 제네릭 라이프타임 259
__10.4.4 라이프타임 명시 문법 260
__10.4.5 함수 시그니처에서 라이프타임 명시하기 261
__10.4.6 라이프타임의 측면에서 생각하기 264
__10.4.7 구조체 정의에서 라이프타임 명시하기 265
__10.4.8 라이프타임 생략 266
__10.4.9 메서드 정의에서 라이프타임 명시하기 269
__10.4.10 정적 라이프타임 270
10.5 제네릭 타입 매개변수, 트레이트 바운드, 라이프타임을 한 곳에 사용해보기 271
정리 272
CHAPTER 11 자동화 테스트 작성하기 273
11.1 테스트 작성 방법 274
__11.1.1 테스트 함수 파헤치기 274
__11.1.2 assert! 매크로로 결과 검사하기 279
__11.1.3 assert_eq!, assert_ne! 매크로를 이용한 동등 테스트 282
__11.1.4 커스텀 실패 메시지 추가하기 285
__11.1.5 should_panic 매크로로 패닉 발생 검사하기 287
__11.1.6 Result〈T, E〉를 이용한 테스트 291
11.2 테스트 실행 방법 제어하기 292
__11.2.1 테스트를 병렬 혹은 순차적으로 실행하기 292
__11.2.2 함수 출력 표시하기 293
__11.2.3 이름을 지정해 일부 테스트만 실행하기 295
__11.2.4 특별 요청이 없다면 일부 테스트 무시하기 297
11.3 테스트 조직화 299
__11.3.1 유닛 테스트 299
__11.3.2 통합 테스트 301
정리 306
CHAPTER 12 I/O 프로젝트: 커맨드 라인 프로그램 만들기 307
12.1 커맨드 라인 인수 받기 308
__12.1.1 인수 읽기 309
__12.1.2 인수들을 변수에 저장하기 311
12.2 파일 읽기 312
12.3 모듈성과 에러 처리 향상을 위한 리팩터링 313
__12.3.1 바이너리 프로젝트에 대한 관심사 분리 314
__12.3.2 에러 처리 수정 319
__12.3.3 main으로부터 로직 추출하기 323
__12.3.4 라이브러리 크레이트로 코드 쪼개기 326
12.4 테스트 주도 개발로 라이브러리 기능 개발하기 328
__12.4.1 실패하는 테스트 작성하기 328
__12.4.2 테스트를 통과하도록 코드 작성하기 331
12.5 환경 변수 사용하기 334
__12.5.1 대소문자를 구분하지 않는 search 함수에 대한 실패하는 테스트 작성하기 335
__12.5.2 search_case_insensitive 함수 구현하기 336
12.6 표준 출력 대신 표준 에러로 에러 메시지 작성하기 341
__12.6.1 에러가 기록되었는지 검사하기 341
__12.6.2 표준 에러로 에러 출력하기 342
정리 343
CHAPTER 13 함수형 언어의 특성: 반복자와 클로저 345
13.1 클로저: 자신의 환경을 캡처하는 익명 함수 346
__13.1.1 클로저로 환경 캡처하기 346
__13.1.2 클로저 타입 추론과 명시 348
__13.1.3 참조자를 캡처하거나 소유권 이동하기 351
__13.1.4 캡처된 값을 클로저 밖으로 이동하기와 Fn 트레이트 353
13.2 반복자로 일련의 아이템 처리하기 358
__13.2.1 Iterator 트레이트와 next 메서드 359
__13.2.2 반복자를 소비하는 메서드 361
__13.2.3 다른 반복자를 생성하는 메서드 361
__13.2.4 환경을 캡처하는 클로저 사용하기 363
13.3 I/O 프로젝트 개선하기 365
__13.3.1 반복자를 사용하여 clone 제거하기 365
__13.3.2 반복자 어댑터로 더 간결한 코드 만들기 368
__13.3.3 루프와 반복자 중 선택하기 369
13.4 성능 비교하기: 루프 vs. 반복자 370
정리 372
CHAPTER 14 카고와 crates.io 더 알아보기 373
14.1 릴리스 프로필을 통한 빌드 커스터마이징하기 374
14.2 crates.io에 크레이트 배포하기 375
__14.2.1 유용한 문서화 주석 만들기 375
__14.2.2 pub use로 편리하게 공개 API 내보내기 379
__14.2.3 crates.io 계정 설정하기 384
__14.2.4 새 크레이트에 메타데이터 추가하기 384
__14.2.5 crates.io에 배포하기 386
__14.2.6 이미 존재하는 크레이트의 새 버전 배포하기 387
__14.2.7 cargo yank로 crates.io에서 버전 사용하지 않게 하기 387
14.3 카고 작업 공간 388
__14.3.1 작업 공간 생성하기 388
__14.3.2 작업 공간에 두 번째 패키지 생성하기 390
14.4 cargo install로 crates.io에 있는 바이너리 설치하기 395
14.5 커스텀 명령어로 카고 확장하기 396
정리 397
CHAPTER 15 스마트 포인터 399
15.1 Box〈T〉를 사용하여 힙에 있는 데이터 가리키기 401
__15.1.1 Box〈T〉를 사용하여 힙에 데이터 저장하기
15.2 Deref 트레이트로 스마트 포인터를 보통의 참조자처럼 취급하기 407
__15.2.1 포인터를 따라가서 값 얻기 408
__15.2.2 Box〈T〉를 참조자처럼 사용하기 409
__15.2.3 자체 스마트 포인터 정의하기 409
__15.2.4 Deref 트레이트를 구현하여 임의의 타입을 참조자처럼 다루기 411
__15.2.5 함수와 메서드를 이용한 암묵적 역참조 강제 412
__15.2.6 역참조 강제가 가변성과 상호작용하는 법 414
15.3 Drop 트레이트로 메모리 정리 코드 실행하기 415
__15.3.1 std::mem::drop으로 값을 일찍 버리기 417
15.4 Rc〈T〉, 참조 카운트 스마트 포인터 419
__15.4.1 Rc〈T〉를 사용하여 데이터 공유하기 420
__15.4.2 Rc〈T〉를 클론하는 것은 참조 카운트를 증가시킵니다 422
15.5 RefCell〈T〉와 내부 가변성 패턴 424
__15.5.1 RefCell〈T〉으로 런타임에 대여 규칙 집행하기 424
__15.5.2 내부 가변성: 불변값에 대한 가변 대여 425
__15.5.3 Rc〈T〉와 RefCell〈T〉를 조합하여 가변 데이터의 복수 소유자 만들기 433
15.6 순환 참조는 메모리 누수를 발생시킬 수 있습니다 435
__15.6.1 순환 참조 만들기 435
__15.6.2 순환 참조 방지하기: Rc〈T〉를 Weak〈T〉로 바꾸기 439
정리 444
CHAPTER 16 겁 없는 동시성 447
16.1 스레드를 이용하여 코드를 동시에 실행하기 448
__16.1.1 spawn으로 새로운 스레드 생성하기 449
__16.1.2 join 핸들을 사용하여 모든 스레드가 끝날 때까지 기다리기 450
__16.1.3 스레드에 move 클로저 사용하기 453
16.2 메시지 패싱을 사용하여 스레드 간 데이터 전송하기 456
__16.2.1 채널과 소유권 이동 460
__16.2.2 여러 값 보내기와 수신자가 기다리는지 알아보기 461
__16.2.3 송신자를 복제하여 여러 생산자 만들기 462
16.3 공유 상태 동시성 464
__16.3.1 뮤텍스를 사용하여 한 번에 하나의 스레드에서만 데이터 접근을 허용하기 464
__16.3.2 RefCell〈T〉/Rc〈T〉와 Mutex〈T〉/Arc〈T〉 간의 유사성 471
16.4 Sync와 Send 트레이트를 이용한 확장 가능한 동시성 472
__16.4.1 Send를 사용하여 스레드 사이에 소유권 이동을 허용하기 472
__16.4.2 Sync를 사용하여 여러 스레드로부터의 접근을 허용하기 473
__16.4.3 Send와 Sync를 손수 구현하는 것은 안전하지 않습니다 473
정리 474
CHAPTER 17 러스트의 객체 지향 프로그래밍 기능 475
17.1 객체 지향 언어의 특성 476
__17.1.1 객체는 데이터와 동작을 담습니다 476
__17.1.2 상세 구현을 은닉하는 캡슐화 476
__17.1.3 타입 시스템과 코드 공유로서의 상속 478
17.2 트레이트 객체를 사용하여 다른 타입의 값 허용하기 480
__17.2.1 공통된 동작을 위한 트레이트 정의하기 481
__17.2.2 트레이트 구현하기 483
__17.2.3 트레이트 객체는 동적 디스패치를 수행합니다 486
17.3 객체 지향 디자인 패턴 구현하기 487
__17.3.1 Post를 정의하고 초안 상태의 새 인스턴스 생성하기 489
__17.3.2 게시물 콘텐츠의 텍스트 저장하기 490
__17.3.3 초안 게시물의 내용이 비어 있음을 보장하기 491
__17.3.4 게시물에 대한 검토 요청이 게시물의 상태를 변경합니다 491
__17.3.5 content의 동작을 변경하는 approve 메서드 추가하기 493
__17.3.6 상태 패턴의 장단점 496
정리 502
CHAPTER 18 패턴과 매칭 503
18.1 패턴이 사용될 수 있는 모든 곳 504
__18.1.1 match 갈래 504
__18.1.2 if let 조건 표현식 505
__18.1.3 while let 조건 루프 506
__18.1.4 for 루프 507
__18.1.5 let 구문 508
__18.1.6 함수 매개변수 509
18.2 반박 가능성: 패턴이 매칭에 실패할지의 여부 510
18.3 패턴 문법 513
__18.3.1 리터럴 매칭 513
__18.3.2 명명된 변수 매칭 513
__18.3.3 다중 패턴 515
__18.3.4 ..=을 이용한 값의 범위 매칭 515
__18.3.5 값을 해체하여 분리하기 516
__18.3.6 패턴에서 값 무시하기 521
__18.3.7 매치 가드를 사용한 추가 조건 526
__18.3.8 @ 바인딩 528
정리 530
CHAPTER 19 고급 기능 531
19.1 안전하지 않은 러스트 532
__19.1.1 안전하지 않은 슈퍼파워 532
__19.1.2 원시 포인터 역참조하기 533
__19.1.3 안전하지 않은 함수 또는 메서드 호출하기 536
__19.1.4 가변 정적 변수의 접근 혹은 수정하기 541
__19.1.5 안전하지 않은 트레이트 구현하기 543
__19.1.6 유니언 필드에 접근하기 543
__19.1.7 unsafe 코드를 사용하는 경우 544
19.2 고급 트레이트 544
__19.2.1 연관 타입으로 트레이트 정의에서 자리표시자 타입 지정하기 544
__19.2.2 기본 제네릭 타입 매개변수와 연산자 오버로딩 546
__19.2.3 모호성 방지를 위한 완전 정규화 문법: 같은 이름의 메서드 호출하기 549
__19.2.4 슈퍼트레이트를 사용하여 한 트레이트에서 다른 트레이트의 기능을 요구하기 553
__19.2.5 뉴타입 패턴을 사용하여 외부 타입에 외부 트레이트 구현하기 556
19.3 고급 타입 557
__19.3.1 타입 안전성과 추상화를 위한 뉴타입 패턴 사용하기 557
__19.3.2 타입 별칭으로 타입의 동의어 만들기 558
__19.3.3 절대 반환하지 않는 부정 타입 561
__19.3.4 동적 크기 타입과 Sized 트레이트 563
19.4 고급 함수와 클로저 565
__19.4.1 함수 포인터 565
__19.4.2 클로저 반환하기 567
19.5 매크로 568
__19.5.1 매크로와 함수의 차이 569
__19.5.2 일반적인 메타프로그래밍을 위한 macro_rules!를 사용한 선언적 매크로 569
__19.5.3 속성에서 코드를 생성하기 위한 절차적 매크로 572
__19.5.4 커스텀 파생 매크로 작성 방법 573
__19.5.5 속성형 매크로 579
__19.5.6 함수형 매크로 580
정리 581
CHAPTER 20 최종 프로젝트: 멀티스레드 웹서버 구축하기 583
20.1 싱글스레드 웹서버 구축하기 584
__20.1.1 TCP 연결 수신 대기하기 585
__20.1.2 요청 읽기 587
__20.1.3 HTTP 요청 자세히 살펴보기 590
__20.1.4 응답 작성하기 591
__20.1.5 실제 HTML 반환하기 592
__20.1.6 요청의 유효성 검사와 선택적 응답 594
__20.1.7 리팩터링 596
20.2 싱글스레드 서버를 멀티스레드 서버로 바꾸기 597
__20.2.1 현재의 서버 구현에서 느린 요청 시뮬레이션 597
__20.2.2 스레드 풀로 처리량 개선하기 599
20.3 우아한 종료와 정리 618
__20.3.1 ThreadPool에 대한 Drop 트레이트 구현하기 618
__20.3.2 작업을 기다리는 스레드에게 정지 신호 보내기 621
정리 628
부록 A. 키워드 630
A.1 현재 사용 중인 키워드 630
A.2 미래에 사용하기 위해 예약된 키워드 632
A.3 원시 식별자 632
부록 B. 연산자와 기호 634
B.1 연산자 634
B.2 비연산자 기호 636
부록 C. 파생 가능한 트레이트 640
C.1 프로그래머 출력을 위한 Debug 641
C.2 동등 비교를 위한 PartialEq 및 Eq 641
C.3 순서 비교를 위한 PartialOrd 및 Ord 642
C.4 값을 복제하기 위한 Clone과 Copy 643
C.5 어떤 값을 고정 크기의 값으로 매핑하기 위한 Hash 644
C.6 기본값을 위한 Default 644
부록 D. 유용한 개발 도구 645
D.1 rustfmt로 자동 포매팅하기 645
D.2 rustfix로 코드 수정하기 646
D.3 Clippy로 더 많은 린트 사용하기 647
D.4 rust-analyzer를 사용한 IDE 통합 648
부록 E. 에디션 649
부록 F. 번역본 651
부록 G. 러스트가 만들어지는 과정과 ‘nightly 러스트’ 653
G.1 정체되지 않는 안정성 653
G.2 칙칙폭폭! 릴리스 채널과 기차 타기 653
G.3 불안정한 기능 656
G.4 rustup과 nightly 러스트의 역할 656
G.5 RFC 과정과 팀 657
찾아보기 658
펼쳐보기
접어보기',
        '러스트 공식 가이드북의 러스트 2021 버전의 한국어판이다. 초판과 달리, 한국 커뮤니티에서 문서 번역을 주도했던 권지용(rinthel)이 새로 번역했다. 함수 생성, 데이터 구조 선택, 변수 바인딩 같은 기본 개념을 확실히 익힌 후에 소유권, 트레이트, 스마트 포인터, 멀티스레딩, 카고, 문서화, 테스트, 패턴 매칭 등 좀 더 고급 개념들도 자세히 살펴본다.',
        '제이펍', '2024-02-23', 40000, 36000, 1, 'https://image.aladin.co.kr/product/33361/5/cover/k012938902_1.jpg', 10),
       ('9788966264254', '8966264255', '가상 면접 사례로 배우는 대규모 시스템 설계 기초 2', '목차
옮긴이의 글
서문
감사의 글
1장 근접성 서비스
2장 주변 친구
3장 구글 맵
4장 분산 메시지 큐
5장 지표 모니터링 및 경보 시스템
6장 광고 클릭 이벤트 집계
7장 호텔 예약 시스템
8장 분산 이메일 서비스
9장 S3와 유사한 객체 저장소
10장 실시간 게임 순위표
11장 결제 시스템
12장 전자 지갑
13장 증권 거래소
맺음말
찾아보기
펼쳐보기
접어보기',
        '시스템 설계를 시작하는 사람들을 위한 가이드이자 설계 안내서이다. 1권에서 다루지 않았던 금융 시스템을 비롯해 보다 다양한 시스템을 사례로 들며 설계를 위해 필요한 지식을 설명한다. 또한 각 장마다 단계적 접근을 통해 실전에서 쓸 수 있는 전략을 알려 준다.',
        '인사이트', '2024-01-02', 36000, 32400, 1, 'https://image.aladin.co.kr/product/33040/41/cover/8966264255_1.jpg',
        10),
       ('9788934955177', '8934955171', '양자컴퓨터의 미래 - 양자컴퓨터 혁명은 세상을 어떻게 바꿀 것인가', '목차
1부 양자컴퓨터의 부상
1장 실리콘 시대의 종말
2장 디지털 시대의 종말
3장 떠오르는 양자
4장 양자컴퓨터의 여명기
5장 불붙은 경쟁
2부 양자컴퓨터와 사회
6장 생명의 기원
7장 지구 녹화하기
8장 지구 먹여 살리기
9장 지구에 에너지 공급하기
3부 양자의학
10장 양자건강
11장 유전체 편집과 암 치료
12장 인공지능과 양자컴퓨터
13장 영생
4부 세상과 우주의 모델링
14장 지구온난화
15장 병 속의 태양
16장 우주 시뮬레이션
17장 2050년의 일상
에필로그 양자 수수께끼
감사의 글
옮긴이의 글
후주
더 읽을거리
찾아보기
펼쳐보기
접어보기', '저명한 이론물리학자이자 세계적인 베스트셀러 작가 미치오 카쿠가 양자컴퓨터의 역사와 원리, 힘과 가능성을 특유의 유려하고 명쾌한 문체로 흥미진진하게 풀어낸다.', '김영사', '2023-12-11',
        24800, 22320, 1, 'https://image.aladin.co.kr/product/33011/4/cover/8934955171_1.jpg', 10),
       ('9791192932385', 'K942936655', '처음 만나는 인공지능 - 개정3판', '목차
CHAPTER 01 인공지능 개요와 발달사
1.1 인공지능이란 무엇인가?
1.2 인공지능의 도전과 한계
1.3 인간 두뇌 능력의 근원
1.4 인간의 지능과 인공지능
1.5 인공지능의 시작과 발전
1.6 인간 두뇌 영역에 도전하는 인공지능
1.7 생성형 인공지능 ChatGPT의 등장
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 02 인공지능 기술과 최근 응용 동향
2.1 인공지능의 도우미와 소프트웨어 공개 동향
2.2 인공지능 기술 경쟁과 인공지능 교육
2.3 인공지능의 생활 속의 다양한 응용
2.4 인공지능의 타 학문 분야에의 응용
2.5 인공지능과 일자리 문제
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 03 인공지능 연구와 구현
3.1 인공지능의 분류 체계
3.2 인공지능의 연구 분야
3.3 인공지능의 시대별 연구 요약
3.4 혁신적인 6개의 인공지능 시스템
3.5 앨런 튜링과 인공지능 테스트
3.6 인공지능에서의 문제 해결과 코딩
3.7 인공지능과 소프트웨어
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 04 인공지능의 미래와 윤리
4.1 인공지능의 수준별 분류
4.2 약한 인공지능인 알파고와 ChatGPT
4.3 인공지능의 미래와 기술적 특이점
4.4 슈퍼 인공지능 시대의 도래와 지능의 폭발
4.5 인공지능 윤리 강령
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 05 인공지능과 4차 산업혁명
5.1 4차 산업혁명의 시작
5.2 인공지능과 4차 산업혁명
5.3 지능형 로봇과 인공지능
5.4 사물인터넷
5.5 자율주행차와 드론
5.6 4차 산업혁명의 미래 기술
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 06 규칙기반 인공지능
6.1 인공지능에 쓰이는 논리와 추론
6.2 인공지능에서의 탐색 기법
6.3 인공지능과 알고리즘
6.4 규칙기반 전문가 시스템
6.5 인공지능과 관련된 흥미로운 문제들
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 07 신경망 개념과 응용
7.1 신경망의 개요
7.2 초기의 신경망
7.3 다층 퍼셉트론
7.4 신경망을 이용한 문자인식과 음성인식
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 08 머신러닝의 학습과 분류
8.1 머신러닝의 개요
8.2 머신러닝의 학습 방법
8.3 머신러닝의 비지도 학습
8.4 강화 학습
8.5 베이지안 네트워크와 은닉 마르코프 모델
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 09 딥러닝 기반의 심층신경망과 활용
9.1 딥러닝과 심층신경망
9.2 딥러닝 심층신경망의 종류
9.3 딥러닝의 활용과 동향
9.4 딥러닝을 지원하는 하드웨어
9.5 머신러닝과 딥러닝을 지원하는 소프트웨어들
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 10 인공지능의 패턴인식
10.1 인공지능에서의 패턴인식
10.2 21세기의 황금어장 음성인식 기술
10.3 신경망과 딥러닝을 이용한 영상인식
10.4 인공지능의 자연어 처리
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 11 인공지능을 위한 기초 수학과 프로그래밍
11.1 인공지능을 위한 수학적 바탕
11.2 인공지능과 함수
11.3 미분과 델타 규칙
11.4 벡터의 개념과 표현
11.5 행렬과 행렬의 연산
11.6 확률, 통계, 회귀직선
11.7 인공지능용 프로그래밍 언어들
11.8 Python 다운로드 및 프로그램 실행 예
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
CHAPTER 12 인공지능과 데이터 사이언스
12.1 데이터 사이언스 개요
12.2 데이터의 수집, 관리, 분석, 보고
12.3 데이터 분석 단계 - 분류와 클러스터링
12.4 빅데이터
12.5 데이터 마이닝과 데이터 사이언스의 미래
가까운 곳에서 인공지능 경험하기
생각하고 토론하기
인공지능 실습하기
연습문제
참고문헌
펼쳐보기
접어보기',
        '인공지능과 관련된 알기 쉬운 설명과 다양한 응용을 포함한 종합적인 안내서에 대한 요구가 커졌으며, 인공지능과 같이 복잡하고 어려운 개념을 누구나 쉽게 이해할 수 있도록 해설한 책의 필요성에 따라 이 책이 기획되었다.',
        '생능', '2023-12-13', 27000, 27000, 1, 'https://image.aladin.co.kr/product/32993/8/cover/k942936655_1.jpg', 10),
       ('9791168621893', 'K652936041', '교양으로 읽는 반도체 상식 - 비즈니스로 보는 반도체의 과거, 현재, 미래', '목차
들어가며
Chapter 1 비즈니스 교양 상식이 된 반도체
반도체 없이 세계 경제를 논할 수 없는 시대
코로나 소용돌이 속 반도체의 비명
반도체를 둘러싼 총성 없는 전쟁
column ① 철강 회사들의 무모한 도전
Chapter 2 우리에게 없어서는 안 될 반도체
반도체란 도대체 무엇인가
사회 인프라의 중추가 된 반도체
한 번쯤 들어보았을 전공정, 후공정 이야기
반도체의 재료 이야기
반도체 제조사들의 성패를 가르는 비즈니스 모델
column ② 신소재 전력 반도체, SiC와 GaN이란?
Chapter 3 반도체 산업의 발전과 문명의 발달
세상의 가치관을 바꾼 반도체
반도체의 전신은 누구? 반도체 출현 이전의 세상
역사적 존재의 출현, 트랜지스터
막대한 부를 생산한 IC
전자계산기 전쟁과 LSI의 발전
범용 컴퓨터의 발전
DRAM으로 세계를 주도한 히노마루 반도체
일본 반도체 산업의 몰락을 가져온 미· 일 반도체 협정
개인용 컴퓨터 시대의 개막
개인 휴대전화, 1인 1기기의 시대
스마트폰의 보급과 SNS의 발달
column ③ 역사 속으로 사라진 ZnSe
Chapter 4 국제적 전략 물자인 반도체 업계 동향
활기가 넘치는 반도체 시장
앞으로의 반도체 시장은 세포 분열하듯 성장할 것이다
1,520억 달러에 달하는 반도체의 생산 설비 투자 규모
반도체 업계의 구조
‘실리콘 사이클’이란
반도체 공급은 갑자기 멈춘다
갑작스러운 수요 증가가 반갑지만은 않은 이유
세계적으로 중요도가 높아지고 있는 반도체 상사
중국, 대만, 미국… 세계 최고는 누구인가!
일본 반도체는 세계 시장에서 뒤처지고 있다!?
일본의 전자 부품 제조사와 반도체
세계 각국의 반도체 전략
column ④ 실리콘이라는 아성에 도전한 GaAs
Chapter 5 지칠 줄 모르는 반도체의 진화와 기업의 미래
반도체 시장 1조 달러 시대
일본 반도체의 미래
2030년을 대비하는 반도체 업계의 동향
향후 반도체의 가능성
우리의 일상을 바꿀 반도체
마치며
펼쳐보기
접어보기', '반도체라는 단어를 알아도 반도체가 무엇인지 정확히 설명하지 못하는 이들이 지적 대화가 필요한 상황이나 업무 현장에서 유용하게 활용할 수 있을 만한 내용을 담았다.', '시그마북스',
        '2023-12-11', 17000, 15300, 1, 'https://image.aladin.co.kr/product/32938/31/cover/k652936041_1.jpg', 10),
       ('9791191905557', 'K012936593',
        '코딩 테스트 합격자 되기 : 파이썬 편 - 자료구조, 알고리즘, 빈출 100 문제로 대비하는 코테 풀 패키지(모의고사, 엄친아 손노트, 온라인 학습 지원 제공)', '목차
첫째 마당 : 코딩 테스트 사전 준비
00장 코딩 테스트를 준비하기 전에
00-1 합격자가 꼭 되고 싶은 여러분
__타인의 풀이를 보면 사고를 넓힐 수 있다
__나만의 테스트 케이스를 추가하는 건
__좋은 알고리즘을 생각할 때 도움이 된다
00-2 아는 것과 모르는 것을 명확하게
__첫 번째 방법, 기록하라
__두 번째 방법, 시험 보듯 공부하라
__세 번째 방법, 짧은 시간 공부해서는 절대 코딩 테스트를 통과할 수 없다
__네 번째 방법, 나만의 언어로 요약하라
01장 코딩 테스트 효율적으로 준비하기
01-1 언어 선택하기
01-2 문제 분석 연습하기
__첫 번째, 문제를 쪼개서 분석하라
__두 번째, 제약 사항을 파악하고 테스트 케이스를 추가하라
__세 번째, 입력값을 분석하라
__네 번째, 핵심 키워드를 파악하라
__다섯 번째, 데이터 흐름이나 구성을 파악하라
01-3 의사 코드로 설계하는 연습하기
__첫 번째, 세부 구현이 아닌 동작 중심으로 작성하라
__두 번째, 문제 해결 순서로 작성하라
__세 번째, 충분히 테스트하라
02장 프로그래머스 완벽 활용 가이드
02-1 프로그래머스는 어떤 곳인가요?
02-2 프로그래머스 활용 가이드
__프로그래머스 살펴보기
__문제 풀이 과정 살펴보기
03장 알고리즘의 효율 분석
03-1 시간 복잡도란?
__1차원 배열 검색하기
__알고리즘 수행 시간을 측정하는 방법
__최악의 경우 시간 복잡도를 표현하는 빅오 표기법
__시간 복잡도를 코딩 테스트에 활용하는 방법
03-2 시간 복잡도 계산해보기
__별 찍기 문제
__박테리아 수명 문제
04장 코딩 테스트 필수 문법
04-1 빌트인 데이터 타입
__정수형
__부동소수형
04-2 컬렉션 데이터 타입
__뮤터블 객체
__이뮤터블 객체
__리스트
__딕셔너리
__튜플
__문자열
04-3 함수
__함수 정의
__함수 호출
__람다식
04-4 코딩 테스트 코드 구현 노하우
__조기 반환
__보호 구문
__합성 함수
둘째 마당 : 코딩 테스트 완전 정복
05장 배열
05-1 배열 개념
__배열 선언
__배열과 차원
05-2 배열의 효율성
__배열 연산의 시간 복잡도
__배열을 선택할 때 고려할 점
05-3 자주 활용하는 리스트 기법
__리스트에 데이터 추가
__리스트에서 데이터 삭제
__리스트 컴프리헨션으로 데이터에 특정 연산 적용
05-4 몸 풀기 문제
__문제 01 배열 정렬하기★
__문제 02 배열 제어하기★★
05-5 합격자가 되는 모의 테스트
__문제 03 두 개 뽑아서 더하기★
__문제 04 모의고사★
__문제 05 행렬의 곱셈★
__문제 06 실패율★★
__문제 07 방문 길이★★
06장 스택
06-1 스택 개념
__스택의 동작 원리 이해하기
06-2 스택의 정의
__스택의 ADT
06-3 몸 풀기 문제
__문제 08 괄호 짝 맞추기★★
__문제 09 10진수를 2진수로 변환하기★
06-4 합격자가 되는 모의 테스트
__문제 10 괄호 회전하기★
__문제 11 짝지어 제거하기★
__문제 12 주식 가격★★
__문제 13 크레인 인형 뽑기 게임★★
__문제 14 표 편집★★★★★
07장 큐
07-1 큐의 개념
__큐에서 데이터가 이동하는 과정 살펴보기
__큐의 특성을 활용하는 분야
__큐의 ADT
07-2 몸 풀기 문제
__문제 15 요세푸스 문제★★
07-3 합격자가 되는 모의 테스트
__문제 16 기능 개발★★
__문제 17 카드 뭉치★★
08장 해시
08-1 해시의 개념
__해시 자세히 알아보기
__해시의 특성을 활용하는 분야
08-2 해시 함수
__해시 함수를 구현할 때 고려할 내용
__자주 사용하는 해시 함수 알아보기
08-3 충돌 처리
__체이닝으로 처리하기
__개방 주소법으로 처리하기
08-4 몸 풀기 문제
__문제 18 두 개의 수로 특정값 만들기★
__문제 19 문자열 해싱을 이용한 검색 함수 만들기★★
08-5 합격자가 되는 모의 테스트
__문제 20 완주하지 못한 선수★
__문제 21 할인 행사★★
__문제 22 오픈 채팅방★★
__문제 23 베스트 앨범★★
__문제 24 신고 결과 받기★★
__문제 25 메뉴 리뉴얼★★★
09장 트리
09-1 트리 개념
__나무를 거꾸로 뒤집어 놓은 모양의 트리
09-2 이진 트리 표현하기
__배열로 표현하기
__이진 트리 순회하기
__포인터로 표현하기
09-3 이진 트리 탐색하기
__이진 탐색 트리 구축하기
__이진 탐색 트리 탐색하기
__이진 탐색 트리와 배열 탐색의 효율 비교
09-4 몸풀기 문제
__문제 26 트리 순회★
__문제 27 이진 탐색 트리 구현★
09-5 합격자가 되는 모의 테스트
__문제 28 예상 대진표★
__문제 29 다단계 칫솔 판매★★
__문제 30 미로 탈출★★
__문제 31 양과 늑대★★★★★
__문제 32 길 찾기 게임★★★★
10장 집합
10-1 집합과 상호배타적 집합의 개념
__집합의 개념
__상호배타적 집합의 특성을 활용하는 분야
10-2 집합의 연산
__배열을 활용한 트리로 집합 표현하기
__유니온-파인드 알고리즘
10-3 몸 풀기 문제
__문제 33 간단한 유니온-파인드 알고리즘 구현하기★★
10-4 합격자가 되는 모의 테스트
__문제 34 폰켓몬★
__문제 35 영어 끝말잇기★
__문제 36 전화번호 목록★★
__문제 37 섬 연결하기★★★
11장 그래프
11-1 그래프의 개념
__그래프 용어 정리
__그래프의 특징과 종류
__그래프 구현
11-2 그래프 탐색
__깊이 우선 탐색
__너비 우선 탐색
__깊이 우선 탐색과 너비 우선 탐색 비교
11-3 그래프 최단 경로 구하기
__다익스트라 알고리즘
__벨만-포드 알고리즘
11-4 몸풀기 문제
__문제 38 깊이 우선 탐색 순회★
__문제 39 너비 우선 탐색 순회★
__문제 40 다익스트라 알고리즘★★★
__문제 41 벨만-포드 알고리즘★★★
11-5 합격자가 되는 모의 테스트
__문제 42 게임 맵 최단 거리★★
__문제 43 네트워크★★
__문제 44 배달★★★
__문제 45 경주로 건설★★★★★
__문제 46 전력망을 둘로 나누기★★
12장 백트래킹
12-1 백트래킹과 백트래킹 알고리즘
__백트래킹이란?
__백트래킹 알고리즘이란?
__유망 함수란?
__백트래킹 알고리즘 문제에 적용해보기
__N-퀸 문제
12-2 몸풀기 문제
__문제 47 1부터 N까지 숫자 중 합이 10이 되는 조합 구하기★
__문제 48 스도쿠 퍼즐★★★
12-3 합격자가 되는 모의 테스트
__문제 49 피로도★
__문제 50 N-퀸★
__문제 51 양궁 대회★★
__문제 52 외벽 점검★★★★★
__문제 53 사라지는 발판★★★★★
13장 정렬
13-1 정렬 알아보기
__정렬이 필요한 이유
__삽입 정렬
__병합 정렬
__힙 정렬
__우선순위 큐
__위상 정렬
__계수 정렬
13-2 몸풀기 문제
__문제 54 계수 정렬 구현하기★
__문제 55 정렬이 완료된 두 배열 합치기
13-3 합격자가 되는 모의 테스트
__문제 56 문자열 내 마음대로 정렬하기★
__문제 57 정수 내림차순으로 배치하기★
__문제 58 K번째 수★
__문제 59 가장 큰 수★★★
__문제 60 튜플★★
__문제 61 지형 이동★★★★
14장 시뮬레이션
14-1 시뮬레이션 문제 풀이 노하우
__시뮬레이션 문제를 푸는 방법
__행렬 연산
__좌표 연산
__대칭, 회전 연산
14-2 몸 풀기 문제
__문제 62 배열 회전하기★★
__문제 63 두 행렬을 곱한 후 전치 행렬 만들기★
__문제 64 달팽이 수열 만들기
14-3 합격자가 되는 모의 테스트
__문제 65 이진 변환★★
__문제 66 롤케이크 자르기★★
__문제 67 카펫★★
__문제 68 점프와 순간 이동★★
__문제 69 캐릭터의 좌표
15장 동적 계획법
15-1 동적 계획법이란?
__점화식 세우기와 동적 계획법
__재귀 호출의 횟수를 줄여주는 메모이제이션
__최장 증가 부분 수열
__최장 공통 부분 수열
15-2 몸풀기 문제
__문제 70 LCS 길이 계산하기★★★
__문제 71 LIS 길이 계산하기★★★
__문제 72 조약돌 문제★★★
15-3 합격자가 되는 모의 테스트
__문제 73 피보나치 수★
__문제 74 2 x n 타일링★
__문제 75 정수 삼각형★★
__문제 76 땅따먹기★★
__문제 77 도둑질★★★★★
__문제 78 가장 큰 정사각형 찾기★★★
__문제 79 단어 퍼즐★★★★
16장 그리디
16-1 그리디 개념
__그리디 알고리즘으로 거스름돈 내어주기
__그리디 알고리즘이 최적해를 보장하려면?
16-2 최소 신장 트리
__신장 트리란?
__최소 신장 트리란?
16-3 배낭 문제
__짐을 쪼갤 수 있는 부분 배낭 문제
__짐을 쪼갤 수 없는 0/1 배낭 문제
16-4 몸 풀기 문제
__문제 80 거스름돈 주기★★
__문제 81 부분 배낭 문제★★
16-5 합격자가 되는 모의 테스트
__문제 82 예산★
__문제 83 구명보트★
__문제 84 귤 고르기★★
__문제 85 기지국 설치★★
부록 1 : 코딩 테스트 모의고사
01회 문제 86 미로 탈출 명령어
__문제 87 택배 배달과 수거하기
__문제 88 개인정보 수집 유효기간
02회 문제 89 110 옮기기
__문제 90 쿼드압축 후 개수 세기
__문제 91 없는 숫자 더하기
03회 문제 92 불량 사용자
__문제 93 k진수에서 소수 개수 구하기
__문제 94 거리두기 확인하기
04회 문제 95 코딩 테스트 공부
__문제 96 두 큐 합 같게 만들기
__문제 97 숫자 게임
05회 문제 98 보석 쇼핑
__문제 99 파괴되지 않은 건물
__문제 100 로또의 최고 순위와 최저 순위
부록 2 : 손 요약 노트
펼쳐보기
접어보기',
        '신입 사원 코딩 테스트 합격에 딱 맞는 빈출문제를 선정하고 풀이하기 위해 저자와 전문 교강사진이 오랜 시간을 들여 고민해 만들었다. 문제의 맥을 관통하는 자료구조와 알고리즘, 시간 복잡도 분석까지 완벽하게 풀이했다.',
        '골든래빗(주)', '2023-11-15', 40000, 36000, 1, 'https://image.aladin.co.kr/product/32792/0/cover/k012936593_1.jpg',
        10),
       ('9791169211451', 'K112935820', '개발자를 위한 실전 선형대수학 - 파이썬 3.10 버전 대응, 구글 코랩 실습 가능 I  연습 문제 + 해답+ 해설 영상, 무료 샘플북 제공', '목차
Chapter 1 벡터, 파트 1: 벡터와 벡터의 기본 연산
1.1 NumPy로 벡터 생성 및 시각화하기
_1.1.1 벡터의 기하학적 해석
1.2 벡터 연산
_1.2.1 두 벡터의 덧셈
_1.2.2 벡터의 덧셈과 뺄셈의 기하학적 해석
_1.2.3 스칼라-벡터 곱셈
_1.2.4 스칼라-벡터 덧셈
_1.2.5 전치
_1.2.6 파이썬에서 벡터 브로드캐스팅
1.3 벡터 크기와 단위벡터
1.4 벡터-내적
_1.4.1 내적의 분배 법칙
_1.4.2 내적의 기하학적 해석
1.5 그 외 벡터 곱셈
_1.5.1 아다마르곱
_1.5.2 외적
_1.5.3 교차곱과 삼중곱
1.6 직교벡터 분해
1.7 마치며
연습 문제
Chapter 2 벡터, 파트 2: 벡터의 확장 개념
2.1 벡터 집합
2.2 선형 가중 결합
2.3 선형 독립성
_2.3.1 수학에서의 선형 독립성
_2.3.2 독립성과 영벡터
2.4 부분공간과 생성
2.5 기저
_2.5.1 기저 정의
2.6 마치며
연습 문제
Chapter 3 벡터 응용: 데이터 분석에서의 벡터
3.1 상관관계와 코사인 유사도
3.2 시계열 필터링과 특징 탐지
3.3 k-평균 클러스터링
연습 문제
Chapter 4 행렬, 파트 1: 행렬과 행렬의 기본 연산
4.1 NumPy에서 행렬 생성과 시각화
_4.1.1 행렬 시각화와 인덱싱, 슬라이싱
_4.1.2 특수 행렬
4.2 행렬 수학: 덧셈, 스칼라 곱셈, 아다마르곱
_4.2.1 덧셈과 뺄셈
_4.2.2 행렬 ‘이동’
_4.2.3 스칼라 곱셈과 아다마르곱
4.3 표준 행렬 곱셈
_4.3.1 행렬 곱셈 유효성에 관한 규칙
_4.3.2 행렬 곱셈
_4.3.3 행렬-벡터 곱셈
4.4 행렬 연산: 전치
_4.4.1 내적과 외적 표기법
4.5 행렬 연산: LIVE EVIL(연산 순서)
4.6 대칭 행렬
_4.6.1 비대칭 행렬로부터 대칭 행렬 생성하기
4.7 마치며
연습 문제
Chapter 5 행렬, 파트2: 행렬의 확장 개념
5.1 행렬 노름
_5.1.1 행렬의 대각합과 프로베니우스 노름
5.2 행렬 공간(열, 행, 영)
_5.2.1 열공간
_5.2.2 행공간
_5.2.3 영공간
5.3 계수
_5.3.1 특수 행렬의 계수
_5.3.2 덧셈 및 곱셈 행렬의 계수
_5.3.3 이동된 행렬의 계수
_5.3.4 이론과 실제
5.4 계수 응용
_5.4.1 벡터가 열공간에 존재하나요?
_5.4.2 벡터 집합의 선형 독립성
5.5 행렬식
_5.5.1 행렬식 계산
_5.5.2 선형 종속성과 행렬식
_5.5.3 특성 다항식
5.6 마치며
연습 문제
Chapter 6 행렬 응용: 데이터 분석에서의 행렬
6.1 다변량 데이터 공분산 행렬
6.2 행렬-벡터 곱셈을 통한 기하학적 변환
6.3 이미지 특징 탐지
6.4 마치며
연습 문제
Chapter 7 역행렬: 행렬 방정식의 만능 키
7.1 역행렬
7.2 역행렬의 유형과 가역성의 조건
7.3 역행렬 계산
_7.3.1 2×2 행렬의 역행렬
_7.3.2 대각 행렬의 역행렬
_7.3.3 임의의 정방 최대계수 행렬의 역행렬
_7.3.4 단방향 역행렬
7.4 역행렬의 유일성
7.5 무어-펜로즈 의사역행렬
7.6 역행렬의 수치적 안정성
7.7 역행렬의 기하학적 해석
7.8 마치며
연습 문제
Chapter 8 직교 행렬과 QR 분해: 선형대수학의 핵심 분해법 1
8.1 직교 행렬
8.2 그람-슈미트 과정
8.3 QR 분해
_8.3.1 Q와 R의 크기
_8.3.2 QR 분해와 역
8.4 마치며
연습 문제
Chapter 9 행 축소와 LU 분해: 선형대수학의 핵심 분해법 2
9.1 연립방정식
_9.1.1 연립방정식을 행렬로 변환하기
_9.1.2 행렬 방정식 다루기
9.2 행 축소
_9.2.1 가우스 소거법
_9.2.2 가우스-조던 소거법
_9.2.3 가우스-조던 소거법을 통한 역행렬 계산
9.3 LU 분해
_9.3.1 치환 행렬을 통한 행 교환
9.4 마치며
연습 문제
Chapter 10 일반 선형 모델 및 최소제곱법: 우주를 이해하기 위한 방법
10.1 일반 선형 모델
_10.1.1 용어
_10.1.2 일반 선형 모델 구축
10.2 GLM 풀이
_10.2.1 해법이 정확할까요?
_10.2.2 최소제곱법의 기하학적 관점
_10.2.3 최소제곱법은 어떻게 작동할까요?
10.3 GLM의 간단한 예
10.4 QR 분해를 통한 최소제곱법
10.5 마치며
연습 문제
Chapter 11 최소제곱법 응용: 실제 데이터를 활용한 최소제곱법
11.1 날씨에 따른 자전거 대여량 예측
_11.1.1 statsmodels을 사용한 회귀 분석 표
_11.1.2 다중공선성
_11.1.3 정규화
11.2 다항식 회귀
11.3 그리드 서치로 모델 매개변수 찾기
11.4 마치며
연습 문제
Chapter 12 고윳값 분해: 선형대수학의 진주
12.1 고윳값과 고유벡터의 해석
_12.1.1 고윳값과 고유벡터의 기하학적 해석
_12.1.2 통계(주성분 분석)
_12.1.3 잡음 감쇠
_12.1.4 차원 축소(데이터 압축)
12.2 고윳값 구하기
12.3 고유벡터 찾기
_12.3.1 고유벡터의 부호와 크기 불확정성
12.4 정방 행렬의 대각화
12.5 대칭 행렬의 특별함
_12.5.1 직교 고유벡터
_12.5.2 실수 고윳값
12.6 특이 행렬의 고윳값 분해
12.7 이차식, 정부호성 및 고윳값
_12.7.1 행렬의 이차식
_12.7.2 정부호성
_12.7.3 ATA 는 양의 (준)정부호
12.8 일반화된 고윳값 분해
12.9 마치며
연습 문제
Chapter 13 특잇값 분해: 고윳값 분해의 다음 단계
13.1 SVD 개요
_13.1.1 특잇값과 행렬의 계수
13.2 파이썬에서 SVD
13.3 행렬의 SVD와 계수-1 ‘계층’
13.4 EIG로부터 SVD
_13.4.1 ATA 의 SVD
_13.4.2 특잇값의 분산 변환과 설명
_13.4.3 행렬의 조건수
13.5 SVD와 MP 의사역행렬
13.6 마치며
연습 문제
Chapter 14 고윳값 분해와 SVD 응용: 선형대수학의 선물
14.1 고윳값 분해와 SVD를 사용한 주성분 분석(PCA)
_14.1.1 PCA의 수학
_14.1.2 PCA 수행 단계
_14.1.3 SVD를 통한 PCA
14.2 선형판별분석
14.3 SVD를 통한 낮은 계수 근사
_14.3.1 SVD를 이용한 잡음 제거
14.4 마치며
연습 문제
APPENDIX A 파이썬 튜토리얼
A.1 왜 파이썬을 사용하나요?
A.2 IDE(통합 개발 환경)
A.3 로컬 및 온라인에서 파이썬 사용하기
A.4 변수
A.5 함수
A.6 시각화
A.7 수식을 코드로 변환하기
A.8 출력 서식과 f-문자열
A.9 제어 흐름
A.10 실행 시간 측정
A.11 추가 학습
A.12 마치며
펼쳐보기
접어보기',
        '복잡한 증명 방식이 아닌 파이썬을 이용한 코드 구현으로 직관적으로 빠르게 선형대수학의 핵심을 빠르게 익힐 수 있다. 벡터와 행렬의 기본 개념부터 LU 분해, QR 분해, 고윳값 및 특잇값 분해, 주성분 분석까지 개발자 맞춤형 선형대수학 이론을 다룬다.',
        '한빛미디어', '2023-09-25', 28000, 25200, 1, 'https://image.aladin.co.kr/product/32510/6/cover/k112935820_1.jpg',
        10),
       ('9791169211475', 'K332935094', '핸즈온 머신러닝 - 전2권 - 사이킷런, 케라스, 텐서플로 2로 완벽 이해하는 머신러닝, 딥러닝 이론 & 실무, 3판', '목차
[1부 머신러닝]
1장 한눈에 보는 머신러닝
1.1 머신러닝이란?
1.2 왜 머신러닝을 사용하나요?
1.3 애플리케이션 사례
1.4 머신러닝 시스템의 종류
_1.4.1 훈련 지도 방식
__지도 학습
__비지도 학습
__준비도 학습
__자기 지도 학습
__강화 학습
_1.4.2 배치 학습과 온라인 학습
__배치 학습
__온라인 학습
_1.4.3 사례 기반 학습과 모델 기반 학습
__사례 기반 학습
__모델 기반 학습
1.5 머신러닝의 주요 도전 과제
_1.5.1 충분하지 않은 양의 훈련 데이터
_1.5.2 대표성 없는 훈련 데이터
_1.5.3 낮은 품질의 데이터
_1.5.4 관련없는 특성
_1.5.5 훈련 데이터 과대적합
_1.5.6 훈련 데이터 과소적합
_1.5.7 핵심 요약
1.6 테스트와 검증
_1.6.1 하이퍼파라미터 튜닝과 모델 선택
_1.6.2 데이터 불일치
연습문제
2장 머신러닝 프로젝트 처음부터 끝까지
2.1 실제 데이터로 작업하기
2.2 큰 그림 보기
_2.2.1 문제 정의
_2.2.2 성능 측정 지표 선택
_2.2.3 가정 검사
2.3 데이터 가져오기
_2.3.1 구글 코랩을 사용하여 예제 코드 실행하기
_2.3.2 코드와 데이터 저장하기
_2.3.3 대화식 환경의 편리함과 위험
_2.3.4 책의 코드와 노트북의 코드
_2.3.5 데이터 다운로드
_2.3.6 데이터 구조 훑어보기
_2.3.7 테스트 세트 만들기
2.4 데이터 이해를 위한 탐색과 시각화
_2.4.1 지리적 데이터 시각화하기
_2.4.2 상관관계 조사하기
_2.4.3 특성 조합으로 실험하기
2.5 머신러닝 알고리즘을 위한 데이터 준비
_2.5.1 데이터 정제
_2.5.2 텍스트와 범주형 특성 다루기
_2.5.3 특성 스케일과 변환
_2.5.4 사용자 정의 변환기
_2.5.5 변환 파이프라인
2.6 모델 선택과 훈련
_2.6.1 훈련 세트에서 훈련하고 평가하기
_2.6.2 교차 검증으로 평가하기
2.7 모델 미세 튜닝
_2.7.1 그리드 서치
_2.7.2 랜덤 서치
_2.7.3 앙상블 방법
_2.7.4 최상의 모델과 오차 분석
_2.7.5 테스트 세트로 시스템 평가하기
2.8 론칭, 모니터링, 시스템 유지 보수
2.9 직접 해보세요!
연습문제
3장 분류
3.1 MNIST
3.2 이진 분류기 훈련
3.3 성능 측정
_3.3.1 교차 검증을 사용한 정확도 측정
_3.3.2 오차 행렬
_3.3.3 정밀도와 재현율
_3.3.4 정밀도/재현율 트레이드오프
_3.3.5 ROC 곡선
3.4 다중 분류
3.5 오류 분석
3.6 다중 레이블 분류
3.7 다중 출력 분류
연습문제
4장 모델 훈련
4.1 선형 회귀
_4.1.1 정규 방정식
_4.1.2 계산 복잡도
4.2 경사 하강법
_4.2.1 배치 경사 하강법
_4.2.2 확률적 경사 하강법
_4.2.3 미니배치 경사 하강법
4.3 다항 회귀
4.4 학습 곡선
4.5 규제가 있는 선형 모델
_4.5.1 릿지 회귀
_4.5.2 라쏘 회귀
_4.5.3 엘라스틱넷
_4.5.4 조기 종료
4.6 로지스틱 회귀
_4.6.1 확률 추정
_4.6.2 훈련과 비용 함수
_4.6.3 결정 경계
_4.6.4 소프트맥스 회귀
연습문제
5장 서포트 벡터 머신
5.1 선형 SVM 분류
_5.1.1 소프트 마진 분류
5.2 비선형 SVM 분류
_5.2.1 다항식 커널
_5.2.2 유사도 특성
_5.2.3 가우스 RBF 커널
_5.2.4 계산 복잡도
5.3 SVM 회귀
5.4 SVM 이론
5.5 쌍대 문제
_5.5.1 커널 SVM
연습문제
6장 결정 트리
6.1 결정 트리 학습과 시각화
6.2 예측
6.3 클래스 확률 추정
6.4 CART 훈련 알고리즘
6.5 계산 복잡도
6.6 지니 불순도 또는 엔트로피?
6.7 규제 매개변수
6.8 회귀
6.9 축 방향에 대한 민감성
6.10 결정 트리의 분산 문제
연습문제
7장 앙상블 학습과 랜덤 포레스트
7.1 투표 기반 분류기
7.2 배깅과 페이스팅
_7.2.1 사이킷런의 배깅과 페이스팅
_7.2.2 OOB 평가
7.3 랜덤 패치와 랜덤 서브스페이스
7.4 랜덤 포레스트
_7.4.1 엑스트라 트리
_7.4.2 특성 중요도
7.5 부스팅
7.5.1 AdaBoost
_7.5.2 그레이디언트 부스팅
_7.5.3 히스토그램 기반 그레이디언트 부스팅
_7.6 스태킹
연습문제
8장 차원 축소
8.1 차원의 저주
8.2 차원 축소를 위한 접근법
_8.2.1 투영
_8.2.2 매니폴드 학습
8.3 주성분 분석
_8.3.1 분산 보존
_8.3.2 주성분
_8.3.3 d차원으로 투영하기
_8.3.4 사이킷런 사용하기
_8.3.5 설명된 분산의 비율
_8.3.6 적절한 차원 수 선택
_8.3.7 압축을 위한 PCA
_8.3.8 랜덤 PCA
_8.3.9 점진적 PCA
8.4 랜덤 투영
8.5 지역 선형 임베딩
8.6 다른 차원 축소 기법
연습문제
9장 비지도 학습
9.1 군집
_9.1.1 k-평균
__k-평균 알고리즘
__센트로이드 초기화 방법
__k-평균 속도 개선과 미니배치 k-평균
__최적의 클러스터 개수 찾기
_9.1.2 k-평균의 한계
_9.1.3 군집을 사용한 이미지 분할
_9.1.4 군집을 사용한 준지도 학습
_9.1.5 DBSCAN
_9.1.6 다른 군집 알고리즘
9.2 가우스 혼합
_9.2.1 가우스 혼합을 사용한 이상치 탐지
_9.2.2 클러스터 개수 선택
_9.2.3 베이즈 가우스 혼합 모델
_9.2.4 이상치 탐지와 특이치 탐지를 위한 알고리즘
연습문제
[2부 신경망과 딥러닝]
10장 케라스를 사용한 인공 신경망 소개
10.1 생물학적 뉴런에서 인공 뉴런까지
_10.1.1 생물학적 뉴런
_10.1.2 뉴런을 사용한 논리 연산
_10.1.3 퍼셉트론
_10.1.4 다층 퍼셉트론과 역전파
_10.1.5 회귀를 위한 다층 퍼셉트론
_10.1.6 분류를 위한 다층 퍼셉트론
10.2 케라스로 다층 퍼셉트론 구현하기
_10.2.1 시퀀셜 API로 이미지 분류기 만들기
__케라스로 데이터셋 적재하기
__시퀀셜 API로 모델 만들기
__모델 컴파일
__모델 훈련과 평가
__모델로 예측 만들기
_10.2.2 시퀀셜 API로 회귀용 다층 퍼셉트론 만들기
_10.2.3 함수형 API로 복잡한 모델 만들기
_10.2.4 서브클래싱 API로 동적 모델 만들기
_10.2.5 모델 저장과 복원하기
_10.2.6 콜백 사용하기
_10.2.7 텐서보드로 시각화하기
10.3 신경망 하이퍼파라미터 튜닝하기
_10.3.1 은닉 층 개수
_10.3.2 은닉 층의 뉴런 개수
_10.3.3 학습률, 배치 크기 그리고 다른 하이퍼파라미터
연습문제
11장 심층 신경망 훈련
11.1 그레이디언트 소실과 폭주 문제
_11.1.1 글로럿과 He 초기화
_11.1.2 고급 활성화 함수
__LeakyReLU
__ELU와 SELU
__GELU, Swish, Mish
_11.1.3 배치 정규화
__케라스로 배치 정규화 구현하기
_11.1.4 그레이디언트 클리핑
11.2 사전 훈련된 층 재사용하기
_11.2.1 케라스를 사용한 전이 학습
_11.2.2 비지도 사전 훈련
_11.2.3 보조 작업에서 사전 훈련
11.3 고속 옵티마이저
_11.3.1 모멘텀 최적화
_11.3.2 네스테로프 가속 경사
_11.3.3 AdaGrad
_11.3.4 RMSProp
_11.3.5 Adam
_11.3.6 AdaMax
_11.3.7 Nadam
_11.3.8 AdamW
_11.3.9 학습률 스케줄링
11.4 규제를 사용해 과대적합 피하기
_11.4.1 l1과 l2 규제
_11.4.2 드롭아웃
_11.4.3 몬테 카를로 드롭아웃
_11.4.4 맥스-노름 규제
11.5 요약 및 실용적인 가이드라인
연습문제
12장 텐서플로를 사용한 사용자 정의 모델과 훈련
12.1 텐서플로 훑어보기
12.2 넘파이처럼 텐서플로 사용하기
_12.2.1 텐서와 연산
_12.2.2 텐서와 넘파이
_12.2.3 타입 변환
_12.2.4 변수
_12.2.5 다른 데이터 구조
12.3 사용자 정의 모델과 훈련 알고리즘
_12.3.1 사용자 정의 손실 함수
_12.3.2 사용자 정의 요소를 가진 모델을 저장하고 로드하기
_12.3.3 활성화 함수, 초기화, 규제, 제한을 커스터마이징하기
_12.3.4 사용자 정의 지표
_12.3.5 사용자 정의 층
_12.3.6 사용자 정의 모델
_12.3.7 모델 구성 요소에 기반한 손실과 지표
_12.3.8 자동 미분으로 그레이디언트 계산하기
_12.3.9 사용자 정의 훈련 반복
12.4 텐서플로 함수와 그래프
_12.4.1 오토그래프와 트레이싱
_12.4.2 텐서플로 함수 사용법
연습문제
13장 텐서플로를 사용한 데이터 적재와 전처리
13.1 데이터 API
_13.1.1 연쇄 변환
_13.1.2 데이터 셔플링
_13.1.3 여러 파일에서 한 줄씩 번갈아 읽기
_13.1.4 데이터 전처리
_13.1.5 데이터 적재와 전처리 합치기
_13.1.6 프리페치
_13.1.7 케라스와 데이터셋 사용하기
13.2 TFRecord 포맷
_13.2.1 압축된 TFRecord 파일
_13.2.2 프로토콜 버퍼 개요
_13.2.3 텐서플로 프로토콜 버퍼
_13.2.4 Example 프로토콜 버퍼 읽고 파싱하기
_13.2.5 SequenceExample 프로토콜 버퍼로 리스트의 리스트 다루기
13.3 케라스의 전처리 층
_13.3.1 Normalization 층
_13.3.2 Discretization 층
_13.3.3 CategoryEncoding 층
_13.3.4 StringLookup 층
_13.3.5 Hashing 층
_13.3.6 임베딩을 사용해 범주형 특성 인코딩하기
_13.3.7 텍스트 전처리
_13.3.8 사전 훈련된 언어 모델 구성 요소 사용하기
_13.3.9 이미지 전처리 층
13.5 텐서플로 데이터셋 프로젝트
연습문제
14장 합성곱 신경망을 사용한 컴퓨터 비전
14.1 시각 피질 구조
14.2 합성곱 층
_14.2.1 필터
_14.2.2 여러 가지 특성 맵 쌓기
_14.2.3 케라스로 합성곱 층 구현하기
_14.2.4 메모리 요구 사항
14.3 풀링 층
14.4 케라스로 풀링 층 구현하기
14.5 CNN 구조
_14.5.1 LeNet-5
_14.5.2 AlexNet
_14.5.3 GoogLeNet
_14.5.4 VGGNet
_14.5.5 ResNet
_14.5.6 Xception
_14.5.7 SENet
_14.5.8 주목할 만한 다른 구조
_14.5.9 올바른 CNN 구조 선택
14.6 케라스로 ResNet-34 CNN 구현하기
14.7 케라스의 사전 훈련 모델 사용하기
14.8 사전 훈련된 모델을 사용한 전이 학습
14.9 분류와 위치 추정
14.10 객체 탐지
_14.10.1 완전 합성곱 신경망
_14.10.2 YOLO
14.11 객체 추적
14.12 시맨틱 분할
연습문제
15장 RNN과 CNN을 사용한 시퀀스 처리
15.1 순환 뉴런과 순환 층
_15.1.1 메모리 셀
_15.1.2 입력과 출력 시퀀스
15.2 RNN 훈련하기
15.3 시계열 예측하기
_15.3.1 ARMA 모델
_15.3.2 머신러닝 모델을 위한 데이터 준비하기
_15.3.3 선형 모델로 예측하기
_15.3.4 간단한 RNN으로 예측하기
_15.3.5 심층 RNN으로 예측하기
_15.3.6 다변량 시계열 예측하기
_15.3.7 여러 타임 스텝 앞 예측하기
_15.3.8 시퀀스-투-시퀀스 모델로 예측하기
15.4 긴 시퀀스 다루기
_15.4.1 불안정한 그레이디언트 문제와 싸우기
_15.4.2 단기 기억 문제 해결하기
__LSTM 셀
__GRU 셀
__1D 합성곱 층으로 시퀀스 처리하기
__WaveNet
연습문제
16장 RNN과 어텐션을 사용한 자연어 처리
16.1 Char-RNN으로 셰익스피어 문체 생성하기
_16.1.1 훈련 데이터셋 만들기
_16.1.2 Char-RNN 모델 만들고 훈련하기
_16.1.3 가짜 셰익스피어 텍스트 생성하기
_16.1.4 상태가 있는 RNN
16.2 감성 분석
_16.2.1 마스킹
_16.2.2 사전 훈련된 임베딩과 언어 모델 재사용하기
16.3 신경망 기계 번역을 위한 인코더-디코더 네트워크
_16.3.1 양방향 RNN
_16.3.2 빔 서치
16.4 어텐션 메커니즘
_16.4.1 트랜스포머 구조: 어텐션만 있으면 된다
__위치 인코딩
__멀티 헤드 어텐션
16.5 언어 모델 분야의 최근 혁신
16.6 비전 트랜스포머
16.7 허깅 페이스의 트랜스포머스 라이브러리
연습문제
17장 오토인코더, GAN 그리고 확산 모델
17.1 효율적인 데이터 표현
17.2 과소완전 선형 오토인코더로 PCA 수행하기
17.3 적층 오토인코더
_17.3.1 케라스로 적층 오토인코더 구현하기
_17.3.2 재구성 시각화
_17.3.3 패션 MNIST 데이터셋 시각화
_17.3.4 적층 오토인코더를 사용한 비지도 사전 훈련
_17.3.5 가중치 묶기
_17.3.6 오토인코더 한 개씩 훈련하기
17.4 합성곱 오토인코더
17.5 잡음 제거 오토인코더
17.6 희소 오토인코더
17.7 변이형 오토인코더
_17.7.1 패션 MNIST 이미지 생성하기
17.8 생성적 적대 신경망
_17.8.1 GAN 훈련의 어려움
_17.8.2 심층 합성곱 GAN
_17.8.3 ProGAN
__미니배치 표준 편차 층
__동일한 학습 속도
__픽셀별 정규화 층
_17.8.4 StyleGAN
__매핑 네트워크
__합성 네트워크
17.9 확산 모델
연습문제
18장 강화 학습
18.1 보상을 최적화하기 위한 학습
18.2 정책 탐색
18.3 OpenAI Gym
18.4 신경망 정책
18.5 행동 평가: 신용 할당 문제
18.6 정책 그레이디언트
18.7 마르코프 결정 과정
18.8 시간차 학습
18.9 Q-러닝
_18.9.1 탐험 정책
_18.9.2 근사 Q-러닝과 심층 Q-러닝
18.10 심층 Q-러닝 구현
18.11 심층 Q-러닝의 변형
_18.11.1 고정 Q-가치 타깃
_18.11.2 더블 DQN
_18.11.3 우선 순위 기반 경험 재생
_18.11.4 듀얼링 DQN
18.12 다른 강화 학습 알고리즘
연습문제
19장 대규모 텐서플로 모델 훈련과 배포
19.1 텐서플로 모델 서빙
_19.1.1 텐서플로 서빙 사용하기
__SavedModel로 내보내기
__텐서플로 서빙 설치하고 시작하기
__REST API로 TF 서빙에 쿼리하기
__gRPC API로 TF 서빙에 쿼리하기
__새로운 버전의 모델 배포하기
_19.1.2 버텍스 AI에서 예측 서비스 만들기
_19.1.3 버텍스 AI에서 배치 예측 작업 실행하기
19.2 모바일 또는 임베디드 디바이스에 모델 배포하기
19.3 웹 페이지에서 모델 실행하기
19.4 계산 속도를 높이기 위해 GPU 사용하기
_19.4.1 GPU 구매하기
_19.4.2 GPU RAM 관리하기
_19.4.3 디바이스에 연산과 변수 할당하기
_19.4.4 다중 장치에서 병렬 실행하기
19.5 다중 장치에서 모델 훈련하기
_19.5.1 모델 병렬화
_19.5.2 데이터 병렬화
__미러드 전략을 사용한 데이터 병렬화
__중앙 집중적인 파라미터를 사용한 데이터 병렬화
__대역폭 포화
_19.5.3 분산 전략 API를 사용한 대규모 훈련
_19.5.4 텐서플로 클러스터에서 모델 훈련하기
_19.5.5 버텍스 AI에서 대규모 훈련 작업 실행하기
_19.5.6 버텍스 AI의 하이퍼파라미터 튜닝
연습문제
마치며
[3부 부록]
부록 A 연습문제 정답
부록 B 머신러닝 프로젝트 체크리스트
B.1 문제를 정의하고 큰 그림을 그립니다
B.2 데이터를 수집합니다
B.3 데이터를 탐색합니다
B.4 데이터를 준비합니다
B.5 가능성 있는 몇 개의 모델을 고릅니다
B.6 모델을 미세 튜닝합니다
B.7 솔루션을 출시합니다
B.8 시스템을 론칭합니다!
부록 C 자동 미분
C.1 수동 미분
C.2 유한 차분 근사
C.3 전진 모드 자동 미분
C.4 후진 모드 자동 미분
부록 D 특수한 데이터 구조
D.1 문자열
D.2 래그드 텐서
D.3 희소 텐서
D.4 텐서 배열
D.5 집합
D.6 큐
부록 E 텐서플로 그래프
E.1 TF 함수와 콘크리트 함수
E.2 함수 정의와 함수 그래프 탐험하기
E.3 트레이싱 자세히 보기
E.4 오토그래프로 제어 흐름 표현하기
E.5 TF 함수에서 변수와 다른 리소스 다루기
E.6 케라스로 TF 함수 사용하기(또는 사용하기 않기)
펼쳐보기
접어보기',
        '‘실제로 머신러닝을 구현하면서 학습한다’는 목표를 더욱 효과적으로 달성할 수 있도록 복잡한 주제를 구조화하고 난이도에 따라 순차적으로 학습할 수 있게 개선했다. 또한 누구나 쉽게 이해할 수 있도록 기존 설명을 더 친절하고 명확하게 다듬고 보완했다.',
        '한빛미디어', '2023-09-29', 60000, 54000, 1, 'https://image.aladin.co.kr/product/32427/88/cover/k332935094_2.jpg',
        10),
       ('9791157846405', 'K412831575', 'AI 2041 - 10개의 결정적 장면으로 읽는 인공지능과 인류의 미래', '목차
서문
인공지능에 관한 진짜 이야기_리카이푸
상상력이 현실의 세상을 만든다_천치우판
1장 황금 코끼리
기술분석 딥러닝의 부정적 외부효과와 해법
2장 가면 뒤의 신
기술분석 악의적 딥페이크에 맞서는 또 다른 기술
3장 쌍둥이 참새
기술분석 자연어 기반 인공지능의 현재와 미래
4장 접촉 없는 사랑
기술분석 보건의료 분야에서의 인공지능
5장 유령이 된 아이돌 스타
기술분석 확장현실의 윤리적·사회적 문제
6장 거룩한 드라이버
기술분석 완전 자율주행차의 시대는 도래할까?
7장 양자 대학살
기술분석 양자컴퓨팅과 자율무기의 위험한 미래
8장 구원자 이야기
기술분석 인공지능에 의한 일자리 퇴출의 해법
9장 행복의 섬
기술분석 인공지능이 던지는 행복에 대한 질문들
10장 풍요를 꿈꾸다
기술분석 새로운 경제 모델과 풍요로움의 미래
감사의 말
펼쳐보기
접어보기',
        '인공지능은 우리의 오늘과 미래를 과연 얼마나 바꿔놓았을까? 인공지능이 계속 발전하고 지금보다 더 많은 곳에 적용되면 어떤 미래가 펼쳐질까? 신선한 접근 방식과 대담한 분석으로 출간 전부터 전 세계 리더들과 독자들이 주목한 《AI 2041》의 두 저자는 이 책을 통해 미래에 대한 우리의 호기심과 두려움을 모두 해결하며 인공지능에 대한 비전을 정밀하게 보여준다.',
        '한빛비즈', '2023-01-09', 29800, 26820, 1, 'https://image.aladin.co.kr/product/30864/83/cover/k412831575_2.jpg',
        10),
       ('9791162245552', 'K362837939', '혼자 공부하는 얄팍한 코딩 지식 - 비전공자도 1:1 과외하듯 배우는 IT 지식 입문서', '목차
Chapter 01 개발자 이해하기: 개발과 개발자 용어 알기
01-1 개발자는 대체 뭐하는 사람인가요?
__개발자는 누구인가요?: 개발자 vs 작가 easy
__웹사이트를 만드는 개발자: 웹 개발자 easy
__손 안의 앱을 만드는 개발자: 모바일 개발자 easy
__게임을 만드는 개발자: 게임 개발자 easy
__컴퓨터 프로그램을 만드는 개발자: 응용 소프트웨어 개발자 easy
__하드웨어를 제어하는 개발자: 임베디드 개발자 easy
__빈틈없는 정보 파수꾼: 정보 보안 전문가 easy
__기계를 가르치는 개발자: AI 개발자 easy
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
01-2 코딩과 프로그래밍, 앱과 프로그램
__프로그래밍 언어로 코드 작성하기: 코딩 easy
__컴퓨터가 할 일 설계하기: 프로그래밍 easy
__소프트웨어를 만들고 운영하는 과정: 개발 medium
__컴퓨터의 보이지 않는 요소: 소프트웨어 vs 프로그램 vs 애플리케이션 medium
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
01-3 프로그래밍 언어도 외국어인가요?
__컴퓨터에 명령을 내릴 때 사용하는 언어: 프로그래밍 언어 easy
__배우기 쉬운 언어는 없을까?: 프로그래밍 언어가 다양한 이유 easy
__프로그래밍 언어의 계층: 고수준 언어와 저수준 언어 medium
__개발자들의 워드 프로세서: IDE easy
[8가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
01-4 디버깅 중인데, 빌드 해보고 이상 없으면 릴리스할게요
__프로그램의 간 보기: 디버깅 easy
__소스 코드를 프로그램으로 포장하기: 빌드 easy
__몇 번 테스트하고 몇 번 업그레이드했는지 확인하기: 빌드 번호와 버전 번호 medium
__프로그램을 사용자에게 서빙하기: 배포 easy
__출시했다고 끝이 아닙니다!: 유지 보수 easy
__맛은 같게, 레시피는 다르게: 리팩토링 easy
__함께 맛보고 피드백하기: 코드 리뷰 easy
__레시피 정리해 두기: 문서화 easy
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 02 개발자와 소통하기: IT 업계 용어 알기
02-1 서버는 뭐고 AWS는 뭔가요?
__주는 컴퓨터와 받는 컴퓨터 : 서버와 클라이언트 easy
__서버들이 모여 있는 곳: 데이터 센터 easy
__AWS는 기존 호스팅과 어떻게 다를까: 클라우드 컴퓨팅 medium
__알아 두어야 할 클라우드 서비스 종류: 인프라 vs 플랫폼 vs 소프트웨어 hard
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인 문제]
02-2 웹사이트는 어떻게 만들어지나요?
__웹사이트 열람에 사용되는 소프트웨어: 웹 브라우저 easy
__요소를 가져다 놓는 마크업 언어: HTML easy
__요소를 꾸미는 언어: CSS easy
__일을 시키는 프로그래밍 언어: 자바스크립트 easy
__브라우저 간 약속: 웹 표준 medium
__웹 페이지의 다양한 화면 크기L: 반응형 vs 적응형 hard
[6가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-3 쿠키, 토큰, 캐시는 일상에서 쓰는 그 단어인가요?
__브라우저에 저장되는 정보: 쿠키 easy
__서버가 나를 알아보는 방법: 세션 easy
__세션과는 또 다른 로그인 유지 방식: 토큰 medium
__전송량은 줄이고 속도는 높이고: 캐시 easy
__서버 부담은 줄이고 사용자와는 가깝게: CDN hard
[5가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인 문제]
02-4 스마트폰 앱인데 웹사이트라고요?
__플랫폼별로 애플리케이션 맞춤 제작이 가능한: 네이티브 앱 easy
__안드로이드와 iOS, 두 마리 토끼 다 잡는: 크로스 플랫폼 easy
__모바일 앱의 모습을 한 웹사이트: 웹 앱 easy
__네이티브 앱과 웹 앱의 장점을 합친: 하이브리드 앱 medium
__모바일 브라우저의 발전: PWA easy
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-5 웹의 보이는 곳과 보이지 않는 곳
__사용자의 컴퓨터에서 동작하는 부분: 프론트엔드 easy
__서버에서 동작하는 부분: 백엔드 easy
__편리한 개발을 위한 프로그램 제작 키트: 프레임워크 medium
__소프트웨어끼리 소통하는 법: API medium
__컴퓨터에 정보를 전달하는 방법: XML, JSON, YAML, AJAX hard
__ [좀 더 알아보기] HTML이라는 설계도의 결과물, 돔
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-6 IP는 뭐고 HTTPS은 뭐죠?
__내 컴퓨터의 주소: IP 주소 easy
__IP 주소를 담은 전화번호부: 도메인과 DNS medium
__정보를 주고받기 위해 약속된 방식: WWW, HTTP medium
__HTTP를 보다 안전하게: HTTPS medium
__클라이언트와 서버의 소통 방법: 요청 메소드와 응답 코드 hard
__ [좀 더 알아보기] DNS에서 네이버 IP를 찾는 과정
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-7 디지털 시대, 데이터와 데이터베이스의 이해
__정보를 구성하는 자료: 데이터와 데이터베이스 easy
__데이터 창고를 관리하는 프로그램: DBMS easy
__데이터베이스계의 오랜 대세: 관계형 데이터베이스 medium
__관계형 데이터베이스의 언어: SQL medium
__관계형 데이터베이스를 제외한 DBMS: NoSQL medium
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
02-8 개발자들은 왜 리눅스를 그렇게 좋아하나요?
__컴퓨터를 사용할 수 있도록 해 주는 소프트웨어: 운영 체제 easy
__컴퓨터를 사용하는 두 가지 방식: GUI vs CLI easy
__개발자가 많이 사용하는 운영체제: 리눅스 easy
__운영 체제의 심장: 커널 medium
__누구나 참여할 수 있는 소프트웨어: 오픈 소스 medium
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
Chapter 03 개발자의 길로 들어서기: 프로그래밍 용어 알기
03-1 컴퓨터는 어떻게 일하나요?
__컴퓨터 시스템을 통제하는 핵심 장치: CPU easy
__CPU의 성능 지표: 코어, 스레드, 클럭 medium
__데이터를 저장하는 기억 장치: 메모리 easy
__CPU가 멀티태스킹을 하는 방법: 프로세스와 스레드 hard
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
03-2 바이트는 뭐고 자료형은 왜 쓰나요?
__컴퓨터의 데이터 단위: 비트와 바이트 easy
__컴퓨터가 데이터를 저장하는 방식: 자료형 hard
__비트로 문자를 나타내는 방법: 문자 인코딩, 유니코드 hard
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
03-3 프로그래밍 언어의 분류
__번역되는 언어와 통역되는 언어: 컴파일 언어, 인터프리터 언어 medium
__프로그래밍의 흐름 차이: 절차 지향, 객체 지향 프로그래밍 hard
__변수는 위험해!: 함수형 프로그래밍 hard
__메모리, 직접 관리하시게요?: 매니지드 언어, 언매니지드 언어 hard
__[좀 더 알아보기] 자바와 자바 가상 머신과의 관계
[7가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
03-4 오류라는 위험에 대비하기
__집에서 새는 바가지와 밖에서 새는 바가지: 컴파일 오류, 런타임 오류 medium
__잘 된다고 안심은 금물!: 논리 오류 medium
__오류를 우아하게 받아내는 방법: 예외처리 hard
__다 썼으면 치워주세요: 메모리 누수, 가비지 컬렉션 hard
[6가지 키워드로 정리하는 핵심 포인트]
[표로 정리하는 핵심 포인트]
[확인 문제]
03-5 개발에 필요한 여러가지 도구
__개발자의 앱 마켓: 패키지 매니저 easy
__프로그램이 작동할 곳에 지정된 값: 환경 변수 medium
__프로그램 실행을 돕는: 런타임 환경 hard
__소프트웨어를 만드는 키트: SDK hard
__생산성 있는 개발을 돕는: 라이브러리, 프레임워크 hard
[5가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
03-6 타임머신을 타고 평행우주를 누비는 개발자
__이제 압축 백업은 그만!: VCS medium
__가장 인기있는 VCS: 깃 medium
__깃 사용자의 클라우드: 깃 호스팅 서비스 medium
[3가지 키워드로 정리하는 핵심 포인트]
[확인 문제]
펼쳐보기
접어보기',
        '독학으로 IT 지식을 배우는 입문자가 ‘꼭 필요한 내용을 제대로 학습’할 수 있도록 구성했다. 뭘 모르는지조차 모르는 입문자의 막연한 마음에 십분 공감하여 과외 선생님이 알려주듯 친절하게, 핵심 내용만 콕콕 집어 준다.',
        '한빛미디어', '2022-05-25', 18000, 16200, 1, 'https://image.aladin.co.kr/product/29446/54/cover/k362837939_2.jpg',
        10),
       ('9791156644972', 'K482631034', '딥러닝을 위한 선형대수학', '목차
CHAPTER 01 자료구조와 알고리즘
1.1 자료구조
자료구조란?
자료구조의 분류
1.2 알고리즘
알고리즘이란?
프로그램 = 자료구조 + 알고리즘
알고리즘 기술 방법
1.3 추상 자료형
추상화란?
추상 자료형이란?
추상 자료형과 C++
1.4 알고리즘의 성능 분석
실행 시간 측정 방법
알고리즘의 복잡도 분석 방법
시간 복잡도 함수
빅오 표기법
빅오 표기법 이외의 표기법
최선, 평균, 최악의 경우
1.5 자료구조 표기법
ADT ? Class Diagram ? C++
UML Diagram
C++
표준 템플릿 라이브러리(STL)
연습문제
프로그래밍 프로젝트
CHAPTER 02 배열과 클래스
2.1 배열
배열의 개념
배열의 추상 자료형
1차원 배열
2차원 배열
함수의 파라미터로서의 배열
2.2 클래스
구조체의 개념
클래스와 C++ 문법
교재에서 거의 사용하지 않는 C++ 문법
2.3 배열과 클래스의 응용: 다항식 프로그램
다항식의 추상 자료형
다항식의 표현 방법
다항식 프로그램의 구현
희소 다항식의 표현
연습문제
프로그래밍 프로젝트
CHAPTER 03 스택
3.1 스택의 추상 자료형
스택이란?
스택의 추상 자료형
스택의 활용 예
스택의 구현 방법
3.2 스택의 구현
배열을 이용한 스택의 표현
배열을 이용한 스택의 구현
복잡한 구조의 항목에 대한 스택의 구현
연결 리스트를 이용한 스택
3.3 스택의 응용: 괄호 검사
괄호 검사와 스택
괄호 검사 알고리즘
괄호 검사 프로그램 구현
3.4 스택의 응용: 수식의 계산
수식의 계산과 스택
후위 표기 수식의 계산
후위 표기 수식 계산 프로그램 구현
중위 표기 수식의 후위 표기 변환 알고리즘
중위 표기 수식의 후위 표기 변환 프로그램 구현
3.5 미로 탐색 문제와 표준템플릿 라이브러리(STL)
미로 탐색 문제
미로 탐색 알고리즘
표준 템플릿 라이브러리(STL)
STL을 이용한 미로 탐색 프로그램 구현
연습문제
프로그래밍 프로젝트
CHAPTER 04 큐
4.1 큐의 추상 자료형
큐(Queue)란?
큐의 추상 자료형
큐의 활용
4.2 큐의 구현
선형 큐
원형 큐
삽입과 삭제 알고리즘
원형 큐의 구현
연결 리스트로 구현한 큐
4.3 덱
덱의 소개
덱 추상 자료형
배열을 이용한 원형 덱의 구현
연결된 덱의 구현
4.4 큐의 응용: 은행 시뮬레이션
시뮬레이션
은행 서비스 시뮬레이션 문제
4.5 덱의 응용: 미로 탐색 프로그램
깊이 우선 탐색과 너비 우선 탐색
STL의 큐를 이용한 미로 탐색
STL의 덱을 이용한 DFS 탐색
STL의 덱을 이용한 BFS 탐색
연습문제
프로그래밍 프로젝트
CHAPTER 05 포인터와 연결 리스트
5.1 포인터
포인터의 개념
함수와 포인터
배열과 포인터
객체와 포인터
자체 참조 클래스
함수 포인터
포인터에 대한 연산
포인터 사용 시 주의점
5.2 동적 메모리 할당
동적 메모리 할당의 개념
동적 메모리 할당과 해제를 위한 연산자
2차원 배열의 동적 할당
5.3 연결 리스트
연결 리스트란?
연결 리스트의 구조
연결 리스트의 종류
5.4 연결 리스트로 구현한 스택
연결 리스트로 구현한 스택의 구조
연결된 스택의 동작
연결 리스트로 구현한 스택: 학생 정보 스택
5.5 포인터의 응용: 연결 리스트로 구현한 큐
연결 리스트로 구현한 큐의 구조
연결된 큐의 연산
연결된 큐의 구현
복잡한 구조 항목에 대한 연결된 큐 구현: 학생 정보 큐
연습문제
프로그래밍 프로젝트
CHAPTER 06 리스트
6.1 리스트 추상 자료형
리스트란?
리스트의 추상 자료형
6.2 배열로 구현한 리스트
데이터 멤버
주요 연산
배열을 이용한 리스트 구현
6.3 연결 리스트로 구현된 리스트
연결 리스트로 구현된 리스트
시작 노드 표현 방법: 헤드 포인터와 헤드 노드
단순 연결 리스트를 이용한 리스트의 구현
6.4 다양한 형태의 연결 리스트
원형 연결 리스트(circular linked list)
이중 연결 리스트(doubly linked list)
이중 연결 리스트로 구현된 리스트
이중 연결 리스트로 구현한 덱
6.5 연결 리스트의 응용: 라인 편집기
라인 편집기란?
라인 편집기의 구현
연습문제
프로그래밍 프로젝트
CHAPTER 07 순환
7.1 순환의 소개
순환이란?
순환 호출의 내부적인 구현
순환 알고리즘의 구조
순환↔반복
순환의 원리
순환 알고리즘의 성능
7.2 거듭제곱 값 계산
7.3 피보나치수열의 계산
7.4 하노이 탑 문제
반복적인 형태로 바꾸기 어려운 순환
7.5 다중 순환
다중 순환이란?
영역 채색 문제
미로 탐색 문제
연습문제
프로그래밍 프로젝트
CHAPTER 08 트리
8.1 트리의 개념
트리의 용어들
트리의 표현
8.2 이진트리 소개
이진트리란?
이진트리의 성질
이진트리의 추상 자료형
8.3 이진트리의 표현
배열 표현법
링크 표현법
8.4 링크 표현법을 이용한 이진트리의 구현
8.5 이진트리의 순회
이진트리 순회 방법
전위, 중위, 후위 순회 구현
레벨 순회
8.6 이진트리 연산
트리의 노드 개수 구하기
단말 노드 개수 구하기
높이 구하기
8.7 이진트리 응용
수식 트리
디렉터리 용량 계산
8.8 스레드 이진트리
연습문제
프로그래밍 프로젝트
CHAPTER 09 이진 탐색 트리
9.1 이진 탐색 트리
탐색이란?
이진 탐색 트리란?
이진 탐색 트리의 추상 자료형
이진 탐색 트리의 기본 틀 설계
9.2 이진 탐색 트리의 연산
탐색 연산
삽입 연산
삭제 연산
9.3 이진 탐색 트리 프로그램
9.4 이진 탐색 트리의 성능 분석
9.5 이진 탐색 트리의 응용: 영어 사전
연습문제
프로그래밍 프로젝트
CHAPTER 10 우선순위 큐
10.1 우선순위 큐
우선순위 큐란?
우선순위 큐 추상 자료형
10.2 우선순위 큐의 구현 방법
배열을 사용하는 방법
연결 리스트를 사용하는 방법
힙을 사용하는 방법
10.3 힙(Heap)
힙의 개념
힙의 구현 방법
힙의 기본 틀 설계
삽입 연산
삭제 연산
힙의 복잡도 분석
10.4 힙의 응용: 힙 정렬
힙을 사용한 정렬
STL의 우선순위 큐를 사용한 정렬
10.5 힙의 응용: 허프만 코드
허프만 코드란?
허프만 코드 생성 방법
허프만 코드 구현
연습문제
프로그래밍 프로젝트
CHAPTER 11 그래프
11.1 그래프란?
그래프의 역사
그래프의 종류
그래프의 용어
그래프의 추상 자료형
11.2 그래프의 표현
인접 행렬을 이용한 그래프의 표현
인접 행렬을 이용한 그래프 클래스의 구현
인접 리스트를 이용한 그래프의 표현
인접 리스트를 이용한 그래프 클래스의 구현
11.3 그래프의 탐색
깊이 우선 탐색
깊이 우선 탐색의 구현
너비 우선 탐색
너비 우선 탐색의 구현
11.4 연결 성분
11.5 신장 트리
11.6 위상 정렬
연습문제
프로그래밍 프로젝트
CHAPTER 12 가중치 그래프
12.1 가중치 그래프란?
12.2 가중치 그래프의 표현
가중치의 표현
인접 행렬을 이용한 가중치 그래프 구현
12.3 최소 비용 신장 트리
최소 비용 신장 트리란?
Kruskal의 MST 알고리즘
Kruskal 알고리즘의 구현
Prim의 MST 알고리즘
Prim 알고리즘의 구현
12.4 최단 경로
최단 경로 문제란?
Dijkstra의 최단 경로 알고리즘
Dijkstra 알고리즘의 구현
Floyd의 최단 경로 알고리즘
Floyd 알고리즘의 구현
연습문제
프로그래밍 프로젝트
CHAPTER 13 정렬
13.1 정렬이란?
정렬 알고리즘의 분류
13.2 선택 정렬
선택 정렬의 원리
선택 정렬 알고리즘
선택 정렬의 구현
전체 프로그램
선택 정렬의 시간 복잡도 분석
13.3 삽입 정렬
삽입 정렬의 원리
삽입 정렬의 알고리즘
삽입 정렬의 구현
삽입 정렬의 시간 복잡도 분석
함수 포인터를 사용한 정렬 알고리즘의 구현
13.4 버블 정렬
버블 정렬의 원리
버블 정렬의 알고리즘
버블 정렬의 구현
버블 정렬의 시간 복잡도 분석
13.5 셸 정렬
셸 정렬의 원리
셸 정렬의 구현
셸 정렬의 분석
13.6 합병 정렬
합병 정렬의 개념
합병 정렬 알고리즘
합병 정렬의 구현
합병 정렬의 복잡도 분석
13.7 퀵 정렬
퀵 정렬의 개념
퀵 정렬 알고리즘
partition 알고리즘
전체 프로그램
퀵 정렬의 복잡도 분석
퀵 정렬 라이브러리 함수의 사용
13.8 힙 정렬
힙 정렬의 개념
힙 정렬의 복잡도 분석
13.9 기수 정렬
기수 정렬의 원리
기수 정렬의 알고리즘
기수 정렬의 구현
기수 정렬의 분석
13.10 정렬 알고리즘의 비교
연습문제
프로그래밍 프로젝트
CHAPTER 14 탐색
14.1 탐색이란?
맵 이란?
14.2 정렬되지 않은 배열에서의 탐색
순차 탐색
14.3 정렬된 배열에서의 탐색
정렬된 배열에서의 개선된 순차 탐색
정렬된 배열에서의 이진 탐색
색인 순차 탐색
보간 탐색
14.4 균형 이진 탐색 트리
AVL 트리란?
AVL 트리의 삽입 연산
AVL 트리의 구현
14.5 해싱을 이용한 탐색
해싱이란?
이상적인 해싱과 실제의 해싱
해시 함수
14.6 해싱의 오버플로우 처리 방법
선형 조사법
이차 조사법
이중 해싱법
체이닝
해싱의 성능 분석
해싱과 다른 탐색 방법의 비교
14.7 STL 맵 클래스의 활용: 영어 단어장
연습문제
프로그래밍 프로젝트
펼쳐보기
접어보기',
        'MIT의 길버트 스트랭 교수가 선형대수학과 딥러닝을 강의한 내용을 고스란히 담았다. 선형대수학을 비롯해 최적화, 확률과 통계 등  딥러닝과 신경망을 이해하는 데 필요한 수학 이론을 제대로 다질 수 있다.',
        '한빛아카데미(교재)', '2020-08-05', 38000, 34200, 1,
        'https://image.aladin.co.kr/product/24823/34/cover/k482631034_1.jpg', 10),
       ('9788970508757', '8970508759', 'C++로 쉽게 풀어쓴 자료구조', '목차
1장 자연어 분석 준비
1.1 실습 환경 준비
1.1.1 konlpy 설치
1.1.2 주피터 노트북 설치
1.1.3 주피터 노트북 사용법 익히기
1.1.4 분석에 필요한 라이브러리 설치
1.2 파이썬
1.2.1 변수와 데이터 타입
1.2.2 자료 구조
1.2.3 조건문
1.2.4 반복문
1.2.5 함수
1.2.6 변수 범위
1.3 판다스
1.3.1 데이터 프레임 생성
1.3.2 데이터 프레임 형태 조절
1.3.3 데이터 추출
1.3.4 논리 연산자
1.3.5 데이터 요약
1.3.6 결측치 처리
1.3.7 열 생성
1.3.8 데이터 그룹화
1.3.9 데이터 병합
1.4 경기도 인구 데이터 분석
1.5 국민건강보험공단 진료 내역 정보 전처리
1.5.1 설정 및 데이터 가져오기
1.5.2 데이터 연결 및 필요한 열만 추출
1.5.3 다른 데이터와 데이터 합치기 1
1.5.4 다른 데이터와 데이터 합치기 2
1.5.5 함수를 사용한 데이터 처리
2장 스크래퍼로 데이터 수집
2.1 스크래퍼란
2.2 스크래퍼 첫걸음
2.2.1 클라이언트와 서버의 개념
2.2.2 알아야 할 HTML 기초 지식
2.2.3 HTML 파일 생성
2.2.4 간단한 스크래퍼 만들기
2.3 requests 라이브러리를 활용한 커뮤니티 정보 수집
2.3.1 스크래퍼 제작 첫 단계는 URL 찾기부터
2.3.2 HTML 수집과 파싱
2.3.3 정보 수집하기
2.3.4 데이터 전처리: 정규 표현식
2.3.5 결과 저장
2.4 무엇이든 수집하는 selenium 라이브러리
2.4.1 가상 웹 브라우저 사용 준비
2.4.2 양질의 정보가 있는 네이버 카페
2.4.3 생생한 고객 의견을 들을 수 있는 쇼핑몰 리뷰 수집
3장 수집한 데이터로 자연어 분석
3.1 내가 그 편의점만 가는 이유
3.1.1 커뮤니티 데이터 불러오기
3.1.2 데이터 전처리 1: 정규 표현식
3.1.3 데이터 전처리 2: 형태소 분석
3.1.4 데이터 분석 1: 많이 등장한 단어를 찾아 주는 다빈도 단어 분석
3.1.5 데이터 분석 2: 자주 등장하는 짝꿍 단어를 찾아 주는 nGram 분석
3.1.6 데이터 분석 3: 편의점 주력 제품 찾기
3.1.7 데이터 분석 4: TFIDF로 편의점 주요 키워드 찾기
3.1.8 편의점에는 어떤 제품이 반응이 좋을까요: 결과 1차 정리
3.2 어떤 떡볶이가 맛있을까?
3.2.1 데이터 불러오기: 쇼핑몰 데이터
3.2.2 데이터 전처리: 가중치 구하기
3.2.3 데이터 분석: 자주 등장하는 떡볶이 해시태그 찾기
3.2.4 데이터 불러오기: 떡볶이 제품 리뷰 데이터
3.2.5 데이터 전처리: 정규 표현식
3.2.6 데이터 전처리: 형태소 분석
3.2.7 데이터 분석: 다빈도 표현 분석
3.2.8 데이터 분석: 떡볶이 소비 환경 분석
3.2.9 어떤 떡볶이를 기획하면 좋을까?
3.3 2040 여성들의 건강 고민 살피기
3.3.1 데이터 불러오기: 여성 건강 커뮤니티 데이터
3.3.2 데이터 분석: 게시물 날짜 정보 구하기
3.3.3 데이터 분석: 포스팅 랭킹 구하기
3.3.4 데이터 분석: 주요 주제 찾기
3.3.5 형태소 분석: 명사 추출
3.3.6 데이터 불러오기: 트위터
3.3.7 데이터 전처리: 맞춤법 교정
3.3.8 데이터 전처리: 명사 추출
3.3.9 데이터 분석: nGram
3.3.10 국민건강보험공단에서 제공하는 진료 내역 정보 데이터 분석
3.3.11 2040 여성에게 어떤 건강 서비스를 제공하면 좋을까?
3.4 내 여자친구 최애 쿠션 찾아 주기
3.4.1 데이터 가져오기
3.4.2 제품 기본 정보 데이터 전처리
3.4.3 해시태그 전처리
3.4.4 해시태그 분석으로 제품 트렌드 변화 관찰
3.4.5 Rank( ) 함수로 해시태그에 가중치 더하기
3.4.6 해시태그 빈도 및 기울기 구하기
3.4.7 주요 제품 열 개 찾아보기
3.4.8 리뷰 데이터 불러오기
3.4.9 형태소 분석을 이용하여 리뷰에서 의도 찾기
3.4.10 nGram으로 키워드 파악
3.4.11 표현의 숨겨진 의미 찾기
3.4.12 머신 러닝을 활용하여 중요한 내용 찾기
3.4.13 쿠션에 어떤 기능을 강화하면 좋을까?
3.5 자연어 분석 심화편
3.5.1 편의점 데이터 분석: 유튜브 댓글 데이터 불러오기
3.5.2 데이터 전처리 1: 필요한 데이터만 남기는 데이터 압축 방법
3.5.3 데이터 전처리 2: 형태소 분석
3.5.4 데이터 분석 1: 다빈도 단어
3.5.5 데이터 분석 2: nGram
3.5.6 토픽 모델링
3.5.7 데이터 전처리: LDA로 계산할 데이터 준비
3.5.8 데이터 분석: LDA로 유튜브에서 보이는 편의점 토픽 살펴보기
3.5.9 편의점 제품과 서비스 제안
4장 자연어 분석에 필요한 통계 공부
4.1 자주 사용되는 통계 개념
부록 A GPT-3.5로 자연어 분석하기
부록 B 코랩 시작하기
부록 C GPU 사용 설정하기
펼쳐보기
접어보기',
        'C++의 문법적인 측면보다는 Java와 같은 대부분의 객체지향언어에서 공통적으로 사용하는 유용한 기법들을 위주로 예제 코드를 작성하였다. 따라서 이 책의 독자들이 책의 내용들을 Java와 같은 다른 객체지향언어에도 쉽게 적용할 수 있도록 노력하였다.',
        '생능', '2016-08-09', 27000, 27000, 1, 'https://image.aladin.co.kr/product/8883/0/cover/8970508759_1.jpg', 10),
       ('9791140709328', 'K792930166', '고객 니즈가 보이는 데이터 분석 with 파이썬 - 트렌드 분석자가 알려주는 실무 데이터 분석!', '목차
1장 자연어 분석 준비
1.1 실습 환경 준비
1.1.1 konlpy 설치
1.1.2 주피터 노트북 설치
1.1.3 주피터 노트북 사용법 익히기
1.1.4 분석에 필요한 라이브러리 설치
1.2 파이썬
1.2.1 변수와 데이터 타입
1.2.2 자료 구조
1.2.3 조건문
1.2.4 반복문
1.2.5 함수
1.2.6 변수 범위
1.3 판다스
1.3.1 데이터 프레임 생성
1.3.2 데이터 프레임 형태 조절
1.3.3 데이터 추출
1.3.4 논리 연산자
1.3.5 데이터 요약
1.3.6 결측치 처리
1.3.7 열 생성
1.3.8 데이터 그룹화
1.3.9 데이터 병합
1.4 경기도 인구 데이터 분석
1.5 국민건강보험공단 진료 내역 정보 전처리
1.5.1 설정 및 데이터 가져오기
1.5.2 데이터 연결 및 필요한 열만 추출
1.5.3 다른 데이터와 데이터 합치기 1
1.5.4 다른 데이터와 데이터 합치기 2
1.5.5 함수를 사용한 데이터 처리
2장 스크래퍼로 데이터 수집
2.1 스크래퍼란
2.2 스크래퍼 첫걸음
2.2.1 클라이언트와 서버의 개념
2.2.2 알아야 할 HTML 기초 지식
2.2.3 HTML 파일 생성
2.2.4 간단한 스크래퍼 만들기
2.3 requests 라이브러리를 활용한 커뮤니티 정보 수집
2.3.1 스크래퍼 제작 첫 단계는 URL 찾기부터
2.3.2 HTML 수집과 파싱
2.3.3 정보 수집하기
2.3.4 데이터 전처리: 정규 표현식
2.3.5 결과 저장
2.4 무엇이든 수집하는 selenium 라이브러리
2.4.1 가상 웹 브라우저 사용 준비
2.4.2 양질의 정보가 있는 네이버 카페
2.4.3 생생한 고객 의견을 들을 수 있는 쇼핑몰 리뷰 수집
3장 수집한 데이터로 자연어 분석
3.1 내가 그 편의점만 가는 이유
3.1.1 커뮤니티 데이터 불러오기
3.1.2 데이터 전처리 1: 정규 표현식
3.1.3 데이터 전처리 2: 형태소 분석
3.1.4 데이터 분석 1: 많이 등장한 단어를 찾아 주는 다빈도 단어 분석
3.1.5 데이터 분석 2: 자주 등장하는 짝꿍 단어를 찾아 주는 nGram 분석
3.1.6 데이터 분석 3: 편의점 주력 제품 찾기
3.1.7 데이터 분석 4: TFIDF로 편의점 주요 키워드 찾기
3.1.8 편의점에는 어떤 제품이 반응이 좋을까요: 결과 1차 정리
3.2 어떤 떡볶이가 맛있을까?
3.2.1 데이터 불러오기: 쇼핑몰 데이터
3.2.2 데이터 전처리: 가중치 구하기
3.2.3 데이터 분석: 자주 등장하는 떡볶이 해시태그 찾기
3.2.4 데이터 불러오기: 떡볶이 제품 리뷰 데이터
3.2.5 데이터 전처리: 정규 표현식
3.2.6 데이터 전처리: 형태소 분석
3.2.7 데이터 분석: 다빈도 표현 분석
3.2.8 데이터 분석: 떡볶이 소비 환경 분석
3.2.9 어떤 떡볶이를 기획하면 좋을까?
3.3 2040 여성들의 건강 고민 살피기
3.3.1 데이터 불러오기: 여성 건강 커뮤니티 데이터
3.3.2 데이터 분석: 게시물 날짜 정보 구하기
3.3.3 데이터 분석: 포스팅 랭킹 구하기
3.3.4 데이터 분석: 주요 주제 찾기
3.3.5 형태소 분석: 명사 추출
3.3.6 데이터 불러오기: 트위터
3.3.7 데이터 전처리: 맞춤법 교정
3.3.8 데이터 전처리: 명사 추출
3.3.9 데이터 분석: nGram
3.3.10 국민건강보험공단에서 제공하는 진료 내역 정보 데이터 분석
3.3.11 2040 여성에게 어떤 건강 서비스를 제공하면 좋을까?
3.4 내 여자친구 최애 쿠션 찾아 주기
3.4.1 데이터 가져오기
3.4.2 제품 기본 정보 데이터 전처리
3.4.3 해시태그 전처리
3.4.4 해시태그 분석으로 제품 트렌드 변화 관찰
3.4.5 Rank( ) 함수로 해시태그에 가중치 더하기
3.4.6 해시태그 빈도 및 기울기 구하기
3.4.7 주요 제품 열 개 찾아보기
3.4.8 리뷰 데이터 불러오기
3.4.9 형태소 분석을 이용하여 리뷰에서 의도 찾기
3.4.10 nGram으로 키워드 파악
3.4.11 표현의 숨겨진 의미 찾기
3.4.12 머신 러닝을 활용하여 중요한 내용 찾기
3.4.13 쿠션에 어떤 기능을 강화하면 좋을까?
3.5 자연어 분석 심화편
3.5.1 편의점 데이터 분석: 유튜브 댓글 데이터 불러오기
3.5.2 데이터 전처리 1: 필요한 데이터만 남기는 데이터 압축 방법
3.5.3 데이터 전처리 2: 형태소 분석
3.5.4 데이터 분석 1: 다빈도 단어
3.5.5 데이터 분석 2: nGram
3.5.6 토픽 모델링
3.5.7 데이터 전처리: LDA로 계산할 데이터 준비
3.5.8 데이터 분석: LDA로 유튜브에서 보이는 편의점 토픽 살펴보기
3.5.9 편의점 제품과 서비스 제안
4장 자연어 분석에 필요한 통계 공부
4.1 자주 사용되는 통계 개념
부록 A GPT-3.5로 자연어 분석하기
부록 B 코랩 시작하기
부록 C GPU 사용 설정하기
펼쳐보기
접어보기',
        '우리가 자주 사용하는 커뮤니티나 네이버 카페, 유튜브, 트위터 등에서 데이터를 수집해 다양한 기법으로 분석한다. 주제마다 분석이 모두 끝나면, 여기서 어떤 정보를 얻을 수 있는지, 비즈니스에 어떻게 활용할 수 있는지를 생각해본다.',
        '길벗', '2024-04-19', 33000, 29700, 1, 'https://image.aladin.co.kr/product/33768/71/cover/k792930166_1.jpg', 10),
       ('9791169212113', 'K362938652', '실무로 통하는 인과추론 with 파이썬 - 데이터 분석에서 정책 수립까지, 이론과 사례 연구를 통한 실용적인 학습법', '목차
[PART 1 인과추론 기초]
1장 인과추론 소개
_1.1 인과추론의 개념
_1.2 인과추론의 목적
_1.3 머신러닝과 인과추론
_1.4 연관관계와 인과관계
_1.5 편향
_1.6 인과효과 식별하기
_1.7 요약
2장 무작위 실험 및 기초 통계 리뷰
_2.1 무작위 배정으로 독립성 확보하기
_2.2 A/B 테스트 사례
_2.3 이상적인 실험
_2.4 가장 위험한 수식
_2.5 추정값의 표준오차
_2.6 신뢰구간
_2.7 가설검정
_2.8 p 값
_2.9 검정력
_2.10 표본 크기 계산
_2.11 요약
3장 그래프 인과모델
_3.1 인과관계에 대해 생각해보기
_3.2 그래프 모델 집중 훈련
_3.3 식별 재해석
_3.4 조건부 독립성 가정과 보정 공식
_3.5 양수성 가정
_3.6 구체적인 식별 예제
_3.7 교란편향
_3.8 선택편향
_3.9 요약
[PART 2 편향 보정]
4장 유용한 선형회귀
_4.1 선형회귀의 필요성
_4.2 회귀분석 이론
_4.3 프리슈-워-로벨 정리와 직교화
_4.4 결과 모델로서의 회귀분석
_4.5 양수성과 외삽
_4.6 선형회귀에서의 비선형성
_4.7 더미변수를 활용한 회귀분석
_4.8 누락 변수 편향
_4.9 중립 통제변수
_4.10 요약
5장 성향점수
_5.1 관리자 교육의 효과
_5.2 회귀분석과 보정
_5.3 성향점수
_5.4 디자인 vs. 모델 기반 식별
_5.5 이중 강건 추정
_5.6 연속형 처치에서의 일반화 성향점수
_5.7 요약
[PART 3 이질적 효과와 개인화]
6장 이질적 처치효과
_6.1 ATE에서 CATE로
_6.2 예측이 답이 아닌 이유
_6.3 회귀분석으로 CATE 구하기
_6.4 CATE 예측 평가하기
_6.5 모델 분위수에 따른 효과
_6.6 누적 효과 곡선
_6.7 누적 이득 곡선
_6.8 목표 변환
_6.9 예측 모델이 효과 정렬에 좋을 때
_6.10 의사결정을 위한 CATE
_6.11 요약
7장 메타러너
_7.1 이산형 처치 메타러너
_7.2 연속형 처치 메타러너
_7.3 요약
[PART 4 패널데이터]
8장 이중차분법
_8.1 패널데이터
_8.2 표준 이중차분법
_8.3 식별 가정
_8.4 시간에 따른 효과 변동
_8.5 이중차분법과 공변량
_8.6 이중 강건 이중차분법
_8.7 처치의 시차 도입
_8.8 요약
9장 통제집단합성법
_9.1 온라인 마케팅 데이터셋
_9.2 행렬 표현
_9.3 통제집단합성법과 수평 회귀분석
_9.4 표준 통제집단합성법
_9.5 통제집단합성법과 공변량
_9.6 통제집단합성법과 편향 제거
_9.7 추론
_9.8 합성 이중차분법
_9.9 요약
[PART 5 대안적 실험 설계]
10장 지역 실험과 스위치백 실험
_10.1 지역 실험
_10.2 통제집단합성법 설계
_10.3 스위치백 실험
_10.4 요약
11장 불응과 도구변수
_11.1 불응
_11.2 잠재적 결과 확장
_11.3 도구변수 식별 가정
_11.4 1단계
_11.5 2단계
_11.6 2단계 최소제곱법
_11.7 표준오차
_11.8 통제변수와 도구변수 추가
_11.9 불연속 설계
_11.10 요약
12장 더 배울 내용
_12.1 인과관계 발견
_12.2 순차적 의사결정
_12.3 인과적 강화학습
_12.4 인과 예측
_12.5 도메인 적응
_12.6 요약
에필로그  실무에 인과추론 적용하기
찾아보기
펼쳐보기
접어보기',
        '관리자, 데이터 과학자, 데이터 분석가를 위한 A/B 테스트, 선형회귀, 성향점수, 통제집단합성법, 이중차분법과 같은 고전적 인과추론 방법과, 이질적 효과 추정을 위한 머신러닝 도입과 같은 현대적 접근법을 실제 응용 사례와 함께 다룬다.',
        '한빛미디어', '2024-03-05', 38000, 34200, 1, 'https://image.aladin.co.kr/product/33517/78/cover/k362938652_1.jpg',
        10),
       ('9788966264353', '8966264352', '가상 면접 사례로 배우는 머신러닝 시스템 설계 기초', '목차
옮긴이의 글
지은이의 글
1장 소개 및 개요
2장 시각 검색 시스템
3장 구글 스트리트 뷰 블러링 시스템
4장 유튜브 동영상 검색
5장 유해 콘텐츠 감지
6장 동영상 추천 시스템
7장 이벤트 추천 시스템
8장 소셜 플랫폼 광고 클릭 예측
9장 여행 예약 플랫폼의 유사 상품 추천
10장 맞춤형 뉴스 피드
11장 친구 추천
후기
펼쳐보기
접어보기',
        '실제 서비스되고 있는 머신러닝 사례, 7가지 설계 접근법, 실제 시스템 설계에 참여한 엔지니어들과 저자의 노하우라는 세 가지 축으로 입체감 있게 설계 지식을 전달한다. 또한 복잡하고 어려운 이론은 걷어 내고 모두에게 익숙한 실제 시스템을 사례로 소개하고 있어, 머신러닝 엔지니어가 아니더라도 시스템의 원리가 궁금한 독자라면 누구나 흥미롭게 읽을 수 있다.',
        '인사이트', '2024-02-23', 27000, 24300, 1, 'https://image.aladin.co.kr/product/33375/15/cover/8966264352_1.jpg',
        10),
       ('9791192987873', 'K662938695', '키워드로 완성하는 AI 아트 테크닉 with 미드저니, 니지저니 - 게임, 그림책, 웹소설, 디자인 소품에 인공지능 그림 활용하기', '목차
추천사 vii
머리말 x
들어가며: 인공지능의 활용 xi
CHAPTER 1 미드저니와 니지저니 1
1.1 다른 인공지능과의 차이점 5
장점 5 / 단점 6
1.2 어떤 사람에게 필요할까? 6
배경삽화가 필요한가요? 6 / 새로운 로고가 필요한가요? 8 / 소설 책에 나오는 주인공의 이미지를 그려보고 싶나요? 8 / 집이나 사무실의 액자에 들어갈 명화가 필요한가요? 10 / 자신이 쓴 일기에 그림을 넣어볼까요? 11 / 상상 속에서만 그렸던 이미지를 눈으로 보고 싶나요? 12
CHAPTER 02 미드저니와 니지저니 시작하기 15
2.1 니지저니 사용 준비하기 17
2.2 디스코드에서 니지저니로 그림 만들기 20
2.3 다양한 옵션 사용하기 27
버전에 따른 결과물 28 / 니지저니의 스타일 30 / Stylize 35 / public mode와 private mode 37 / 스케일 변환 38 / 작업 속도에 따른 GPU 사용 옵션 40 / Remix mode 42 / 이미지 선택 후 편집 44
2.4 미드저니와 니지저니를 서버에 초대하기 60
CHAPTER 03 키워드의 마법 63
3.1 키워드 예시 65
3.2 아티스트의 활용 67
아티스트를 활용하는 예제 68 / 아티스트를 활용한 예제 그림 71
CHAPTER 04 고급 옵션 사용 75
4.1 매개변수 77
미드저니 버전 77 / 니지저니 알고리즘 80
4.2 다양한 출력 매개변수 81
품질 81 / 혼돈 81 / 중단 82 / 제외(네거티브 프롬프트) 83 / seed 84 / 가중치 85 / 음수 가중치 87 / seed를 이용하여 원하는 결과를 얻을 확률 높이기 88 / 프레임 비율 88
CHAPTER 05 AI 아트 테크닉 91
5.1 이미지를 원하는 대로 수정하는 방법 93
원하는 이미지를 만드는 과정 93 / 캐릭터의 그림체를 비슷하게 만드는 방법 100 / 캐릭터 배경을 투명하게 만들기 108 / 캐릭터와 다른 이미지의 합성 110
5.2 배경이 포함된 캐릭터를 만들기 위한 프롬프트 115
5.3 프롬프트로 다양한 그림체 구현하기 120
5.4 원하는 그림을 얻은 후 조금씩 변화를 주는 방법 128
그림을 올려 프롬프트를 받는 방법 129
5.5 배경을 잘 만드는 방법 135
5.6 카메라 세팅을 이용하는 방법 145
화각 145 / 조리개 149 / 로앵글, 하이앵글 151 / 실루엣 152 / 비행기 뷰, 조감도 153 / 기타 카메라 키워드 155
5.7 미드저니를 이용한 독특한 이미지 만들기 157
문신 157 / 종이 인형 158 / 유리 공예 159 / 네온사인 스타일 160 / 모스 부호 161 / 예술가 혼합 162 / 16비트 그림 163 / 나이브 아트 164 / 매크로 165 / 아련한 이미지 166 / 아르누보 167 / 생동감 168 / ASCII art 169 / 미니어처 170 / 파노라마 171 / 지도 172
5.8 다양한 스타일 적용 173
Pixar movie style 173 / Disney animation style 174 / Studio Ghibli cell style 174 / Blue lighting 175 / Long exposure 175 / Iridescent 176 / Time loop 176 / Maximum texture 177 / Music album art 177
5.9 포커스 효과 178
Sharp focus, Soft focus 178 / Deep depth of field 179 / Out-of-focus, Bokeh 181
CHAPTER 06 이미지 활용 방법 183
6.1 게임에 접목하기 185
6.2 그림책 만들기 193
6.3 실생활에 필요한 이미지 만들기 198
물건 및 이미지 디자인 198 / 앱에 적용하기 204 / 애플리케이션 아이콘 210
APPENDIX 키워드 도감 211
펼쳐보기
접어보기',
        'AI 콘텐츠 생성의 무궁무진한 길이 열렸다. 키워드만 입력하면 전문가 수준의 그림이 순식간에 만들어지는 요즘, 필요한 것은 어떤 키워드를 어떻게 입력해야 하는지 아는 것이다. 그럴싸한 한 장의 이미지를 만들었다면, 다음은 콘텐츠에 활용하기 위해 일관성 있는 여러 장의 이미지를 만들 수 있어야 한다.',
        '제이펍', '2024-02-15', 25000, 22500, 1, 'https://image.aladin.co.kr/product/33338/4/cover/k662938695_1.jpg', 10),
       ('9788966264285', '896626428X', 'CODE 코드 (화이트 에디션) - 하드웨어와 소프트웨어에 숨어 있는 언어, 2판', '목차
Chapter 1 친한 친구와의 대화
Chapter 2 부호와 조합
Chapter 3 점자와 이진 부호
Chapter 4 전등을 분해해 봅시다
Chapter 5 가까운 거리에서 이야기하기
Chapter 6 논리와 스위치
Chapter 7 전신과 릴레이
Chapter 8 릴레이와 논리 게이트
Chapter 9 우리가 사용하는 열 개의 숫자들
Chapter 10 십진수 이외의 것
Chapter 11 비트, 비트, 비트
Chapter 12 바이트와 16진수
Chapter 13 ASCII에서 유니코드까지
Chapter 14 논리 게이트로 덧셈하기
Chapter 15 실제로도 그럴까?
Chapter 16 그렇다면 뺄셈은 어떨까요?
Chapter 17 피드백과 플립플롭
Chapter 18 시계를 만들어 봅시다
Chapter 19 메모리를 만들어 봅시다
Chapter 20 연산을 자동화시키기
Chapter 21 산술 논리 장치
Chapter 22 레지스터와 버스
Chapter 23 CPU의 제어 신호들
Chapter 24 루프, 분기, 그리고 호출
Chapter 25 주변 장치들
Chapter 26 운영체제
Chapter 27 코딩
Chapter 28 월드 브레인
펼쳐보기
접어보기',
        '20년이 넘는 세월 동안 컴퓨터 공학 분야의 필독서로서 많은 독자를 열광하게 만든 《CODE》가 새로운 컴퓨팅 시대에 맞춰 개정되었다. 컴퓨터 내부의 비밀스러운 이야기들을 담은 이 책은 잘 짜인 일러스트와 이해하기 쉬운 설명을 통해서 컴퓨터에 대한 수수께끼를 풀어낸다.',
        '인사이트', '2023-12-22', 35000, 31500, 1, 'https://image.aladin.co.kr/product/33030/17/cover/896626428x_2.jpg',
        10),
       ('9791169210034', 'K022838932', '이것이 자료구조+알고리즘이다 with C 언어 - 문제 해결 능력을 키워주는 자료구조+알고리즘 입문서', '목차
__지은이의 말
__이 책의 구성
__학습 로드맵
Chapter 00 알아두면 쓸 데 있는 자료구조와 알고리즘
_0.1 자료구조
_0.2 알고리즘
_0.3 C 언어로 메모리를 다루는 방법
__0.3.1 포인터 복습
__0.3.2 구조체 복습
__0.3.3 메모리 레이아웃 복습
__0.3.4 스택에서 데이터를 다루는 방법
__0.3.5 힙에서 데이터를 다루는 방법
Part 01 자료구조
Chapter 01 리스트
_1.1 리스트 ADT
__1.1.1 리스트의 개념
__1.1.2 리스트와 배열 비교
_1.2 링크드 리스트
__1.2.1 링크드 리스트의 노드 표현
__1.2.2 링크드 리스트의 주요 연산
___Vitamin Quiz 1-1
__1.2.3 링크드 리스트 예제 프로그램
__1.2.4 링크드 리스트의 장단점
___Vitamin Quiz 1-2
_1.3 더블 링크드 리스트
__1.3.1 더블 링크드 리스트의 주요 연산
__1.3.2 더블 링크드 리스트 예제 프로그램
___Vitamin Quiz 1-3
_1.4 환형 링크드 리스트
__1.4.1 환형 더블 링크드 리스트의 주요 연산
__1.4.2 환형 더블 링크드 리스트 예제 프로그램
_연습문제
Chapter 02 스택
_2.1 스택 ADT
__2.1.1 스택의 개념
___Vitamin Quiz 2-1
__2.1.2 스택의 핵심 기능: 삽입과 제거 연산
_2.2 배열로 구현하는 스택
__2.2.1 배열 기반 스택과 스택의 노드 표현
__2.2.2 배열 기반 스택의 기본 연산
__2.2.3 배열 기반 스택 예제 프로그램
___Vitamin Quiz 2-2
_2.3 링크드 리스트로 구현하는 스택
__2.3.1 링크드 리스트 기반 스택과 스택의 노드 표현
__2.3.2 링크드 리스트 기반 스택의 기본 연산
__2.3.3 링크드 리스트 기반 스택 예제 프로그램
_2.4 스택의 응용: 사칙 연산 계산기
__2.4.1 수식의 중위 표기법과 후위 표기법
__2.4.2 후위 표기식을 계산하는 알고리즘
__2.4.3 중위 표기식을 후위 표기식으로 바꾸는 알고리즘
__2.4.4 사칙 연산 계산기 예제 프로그램
_연습문제
Chapter 03 큐
_3.1 큐 ADT
__3.1.1 큐의 개념
__3.1.2 큐 ADT의 핵심 기능: 삽입과 제거 연산
_3.2 순환 큐
__3.2.1 공백 상태와 포화 상태
__3.2.2 순환 큐의 기본 연산
__3.2.3 순환 큐 예제 프로그램
_3.3 링크드 큐
__3.3.1 링크드 큐의 기본 연산
__3.3.2 링크드 큐 예제 프로그램
_연습문제
Chapter 04 트리
_4.1 트리 ADT
__4.1.1 트리의 개념
__4.1.2 트리의 구성 요소
__4.1.3 트리 표현 방법
__4.1.4 노드 표현 방법
__4.1.5 트리의 기본 연산
__4.1.6 트리 예제 프로그램
___Vitamin Quiz 4-1
_4.2 이진 트리
__4.2.1 이진 트리의 종류
__4.2.2 이진 트리의 순회
__4.2.3 이진 트리의 기본 연산
__4.2.4 이진 트리 예제 프로그램
_4.3 수식 트리
__4.3.1 수식 트리 구축 방법
__4.3.2 수식 트리의 구현
__4.3.3 수식 트리 예제 프로그램
_4.4 분리 집합
__4.4.1 분리 집합 표현
__4.4.2 분리 집합의 기본 연산
__4.4.3 분리 집합 예제 프로그램
_연습문제
Part 02 알고리즘
Chapter 05 정렬
_5.1 정렬 알고리즘의 개요
_5.2 버블 정렬
__5.2.1 버블 정렬의 성능 측정
__5.2.2. 버블 정렬 예제 프로그램
___Vitamin Quiz 5-1
_5.3 삽입 정렬
__5.3.1 삽입 정렬의 성능 측정
__5.3.2 삽입 정렬 예제 프로그램
_5.4 퀵 정렬
__5.4.1 퀵 정렬 사용 전 해결해야 하는 2가지 문제
__5.4.2 퀵 정렬 예제 프로그램
__5.4.3 퀵 정렬의 성능 측정
_5.5 C 언어 표준 라이브러리의 퀵 정렬 함수: qsort( )
__5.5.1 qsort( ) 함수 예제 프로그램
___Vitamin Quiz 5-2
__5.5.2 qsort( ) 응용 문제
_연습문제
Chapter 06 탐색
_6.1 탐색 알고리즘의 개요
_6.2 순차 탐색
__6.2.1 전진 이동법
___Vitamin Quiz 6-1
__6.2.2 전위법
___Vitamin Quiz 6-2
__6.2.3 계수법
___Vitamin Quiz 6-3
_6.3 이진 탐색
__6.3.1 이진 탐색의 성능 측정
__6.3.2 이진 탐색의 구현
__6.3.3 이진 탐색 예제 프로그램: 두 번째 최종 시험 문제
__6.3.4 C 언어 표준 라이브러리의 이진 탐색 함수: bsearch( )
__6.3.5 bsearch( ) 함수 예제 프로그램
_6.4 이진 탐색 트리
__6.4.1 이진 탐색 트리 표현
__6.4.2 이진 탐색 트리의 기본 연산
__6.4.3 이진 탐색 트리 예제 프로그램
__6.4.4 이진 탐색 트리의 문제점
_6.5 레드 블랙 트리
__6.5.1 레드 블랙 트리의 구현 규칙
__6.5.2 레드 블랙 트리의 기본 연산
__6.5.3 레드 블랙 트리 예제 프로그램
_연습문제
Chapter 07 우선순위 큐와 힙
_7.1 우선순위 큐
__7.1.1 우선순위 큐의 삽입/제거 연산
__7.1.2 우선순위 큐의 구현
_7.2 힙
__7.2.1 힙의 삽입 연산
__7.2.2 힙의 최솟값 삭제 연산
__7.2.3 힙의 구현
__7.2.4 힙 예제 프로그램
_7.3 힙 기반 우선순위 큐의 구현
_연습문제
Chapter 08 해시 테이블
_8.1 해시 테이블의 개요
__8.1.1 해시
__8.1.2 해시 테이블
_8.2 해시 함수
__8.2.1 나눗셈법
__8.2.2 자릿수 접기
__8.2.3 해시 함수의 한계: 충돌
_8.3 충돌 해결 기법
__8.3.1 체이닝
__8.3.2 개방 주소법
_연습문제
Chapter 09 그래프
_9.1 그래프의 개요
__9.1.1 그래프의 탄생 배경: 오일러의 문제 해결 도구
__9.1.2 그래프의 정의
___Vitamin Quiz 9-1
_9.2 그래프 표현 방법
__9.2.1 인접 행렬
__9.2.2 인접 리스트
___Vitamin Quiz 9-2
_9.3 그래프 순회 기법
__9.3.1 깊이 우선 탐색
__9.3.2 너비 우선 탐색
__9.3.3 그래프 순회 예제 프로그램
_9.4 위상 정렬
__9.4.1 위상 정렬의 동작 방식
__9.4.2 위상 정렬 예제 프로그램
_9.5 최소 신장 트리
__9.5.1 프림 알고리즘
__9.5.2 크루스칼 알고리즘
__9.5.3 최소 신장 트리 예제 프로그램
_9.6 최단 경로 탐색: 데이크스트라 알고리즘
__9.6.1 데이크스트라 알고리즘의 개념
__9.6.2 데이크스트라 알고리즘 예제 프로그램
_연습문제
Chapter 10 문자열 탐색
_10.1 문자열 탐색 알고리즘의 개요
_10.2 고지식한 탐색 알고리즘
__10.2.1 고지식한 탐색의 동작 방식
__10.2.2 고지식한 탐색 알고리즘 예제 프로그램
_10.3 카프-라빈 알고리즘
__10.3.1 카프-라빈 알고리즘의 동작 방식
__10.3.2 카프-라빈 알고리즘 예제 프로그램
_10.4 KMP 알고리즘
__10.4.1 KMP 알고리즘의 동작 방식
__10.4.2 경계 정보 사전 계산 방법
__10.4.3 KMP 알고리즘 예제 프로그램
_10.5 보이어-무어 알고리즘
__10.5.1 나쁜 문자 이동
__10.5.2 착한 접미부 이동
__10.5.3 보이어-무어 알고리즘의 전처리 과정
__10.5.4 보이어-무어 알고리즘 예제 프로그램
_연습문제
Part 03 알고리즘 설계 기법
Chapter 11 알고리즘 성능 분석
_11.1 알고리즘 성능 측정 기준과 수행 시간
__11.1.1 알고리즘 성능 측정 기준
__11.1.2 알고리즘 수행 시간 분석
_11.2 점근 표기법
__11.2.1 O 표기법
__11.2.2 Ω 표기법
__11.2.3 Θ 표기법
_11.3 재귀 알고리즘 성능 분석
__11.3.1 재귀 방정식과 재귀 알고리즘
__11.3.2 퀵 정렬의 성능 분석
__11.3.3 마스터 정리
_연습문제
Chapter 12 분할 정복
_12.1 분할 정복 기법의 개요
__12.1.1 분할 정복 전술의 탄생 배경: 아우스터리츠 전투
__12.1.2 분할 정복 알고리즘의 개념
_12.2 병합 정렬
__12.2.1 병합 정렬 동작 방식
__12.2.2 병합 정렬 알고리즘의 구현
_12.3 거듭 제곱 계산
__12.3.1 거듭 제곱 계산법
__12.3.2 거듭 제곱 계산 알고리즘의 구현
_12.4 분할 정복 기반 피보나치 수 구하기
__12.4.1 피보나치 수를 구하는 방법
__12.4.2 분할 정복으로 피보나치 수를 구하는 방법
__12.4.3 분할 정복 기반 피보나치 수 구하기 알고리즘의 구현
연습문제
Chapter 13 동적 계획법
_13.1 동적 계획법의 개요
__13.1.1 동적 계획법의 탄생 배경
__13.1.2 동적 계획법의 개념
_13.2 동적 계획법 기반 피보나치 수 구하기
__13.2.1 동적 계획법으로 피보나치 수를 구하는 방법
__13.2.2 동적 계획법 기반 피보나치 수 구하기 알고리즘의 구현
_13.3 최장 공통 부분 수열
__13.3.1 LCS 알고리즘
__13.3.2 동적 계획법 기반 LCS 알고리즘의 구현
_연습문제
Chapter 14 탐욕 알고리즘
_14.1 탐욕 알고리즘의 개요
_14.2 거스름돈 줄이기 문제
__14.2.1 거스름돈 계산 예제 프로그램
__14.2.2 탐욕 알고리즘의 중요한 속성
_14.3 크루스칼 알고리즘 다시 보기
_14.4 데이크스트라 알고리즘 다시 보기
_14.5 허프만 코딩
__14.5.1 고정 길이 코드와 접두어 코드
__14.5.2 허프만 트리 구축
__14.5.3 데이터 압축
__14.5.4 데이터 압축 해제
__14.5.5 허프만 코딩 예제 프로그램
_연습문제
Chapter 15 백트래킹
_15.1 백트래킹의 개요
__15.1.1 백트래킹의 사례: 테세우스 이야기
__15.1.2 백트래킹의 개념
_15.2 미로 탈출로 찾기
__15.2.1 재귀 호출 기반 백트래킹
__15.2.2 미로 탈출 알고리즘의 구현
__15.2.3 미로 탈출 알고리즘 예제 프로그램
_15.3 8개의 퀸 문제
__15.3.1 8개의 퀸이 만드는 해공간과 백트래킹
__15.3.2 N개의 퀸 문제 풀이 알고리즘의 구현
__15.3.3 N개의 퀸 문제 풀이 예제 프로그램
_연습문제
__찾아보기
펼쳐보기
접어보기',
        '처음 배우는 사람의 눈높이에 맞춰 리스트부터 백트래킹까지 자주 사용되는 자료구조와 알고리즘 개념을 위트 넘치는 이야기로 쉽게 설명한다. 보기만 해도 헉 소리가 나는 복잡한 수식은 최소화하고 이해에 꼭 필요한 수식만 담았다.',
        '한빛미디어', '2022-08-03', 34000, 30600, 1, 'https://image.aladin.co.kr/product/29897/14/cover/k022838932_1.jpg',
        10),
       ('9788994711027', '8994711023', '문제로 배우는 소프트웨어 테스팅 II - 국제 소프트웨어 테스팅 자격증 대비서, 개정2판', '목차
서언
이 책의 특징
ISTQB 소개
Chapter 1 소프트웨어 테스팅의 기초
1.1 소프트웨어 테스팅이 왜 필요한가?
1.2 테스팅이란 무엇인가?
1.3 테스팅의 일곱 가지 원리
1.4 기본 테스트 프로세스
1.5 테스팅의 심리학
Chapter 2 소프트웨어 수명주기와 테스팅
2.1 소프트웨어 개발 모델
2.2 테스트 레벨
2.3 테스트 유형
2.4 유지보수 테스팅
Chapter 3 정적 기법
3.1 정적 기법과 테스트 프로세스
3.2 리뷰 프로세스
3.3 도구에 의한 정적 분석
Chapter 4 테스트 설계 기법
4.1 테스트 개발 프로세스
4.2 테스트 설계 기법의 종류
4.3 명세 기반 또는 블랙박스 기법
4.4 구조 기반 또는 화이트박스 기법
4.5 경험 기반 기법
4.6 테스트 기법의 선택
Chapter 5 테스트 관리
5.1 테스트 조직
5.2 테스트 계획과 추정
5.3 테스트 진행 모니터링과 제어
5.4 형상 관리
5.5 리스크와테스팅
5.6 인시던트 관리
Chapter 6 테스팅 지원 도구
6.1 테스트 도구의 종류
6.2 효과적인 도구의 사용 : 잠재적인 도구 가치와 위험
6.3 도구 도입
모의고사
참고문헌
저자소개
정답 및 해설
펼쳐보기
접어보기',
        '문제풀이를 하면서 테스팅의 이론과실무, ISTQB 지식체계를 정확하게 습득하도록 문제해설을 구성했다. 책과교육에서 체득하기 어려운 내용을 문제를 풀어보면서 보완할 수 있다. 특히 문제해설은 실무관점의 해설을 많이 담아 이론과실무의 균형을 유지하고 깊이있게 이해 하도록 돕는다.',
        'STA(소프트웨어테스팅연구소)', '2021-04-30', 23000, 20700, 1,
        'https://image.aladin.co.kr/product/27141/85/cover/k152731444_1.jpg', 10),
       ('9791163031727', 'K892631393', 'Do it! 자료구조와 함께 배우는 알고리즘 입문 : 파이썬 편', '목차
-----------------
01장 알고리즘 기초
-----------------
__01-1 알고리즘이란?
____세 정수의 최댓값 구하기
____조건문과 분기
____순서도 기호 살펴보기
__01-2 반복하는 알고리즘
____1부터 n까지 정수의 합 구하기
____연속하는 정수의 합을 구하기 위해 값 정렬하기
____반복 과정에서 조건 판단하기 1
____반복 과정에서 조건 판단하기 2
____반복 과정에서 조건 판단하기 3
____양수만 입력받기
____직사각형 넓이로 변의 길이 구하기
____반복문 건너뛰기와 여러 범위 스캔하기
____다중 루프 알아보기
-----------------
02장 기본 자료구조와 배열
-----------------
__02-1 자료구조와 배열
____배열 개념 알아보기
____리스트와 튜플 알아보기
____인덱스로 원소에 접근하기
____슬라이스식으로 원소에 접근하기
____자료구조의 개념 알아보기
__02-2 배열이란?
____배열 원소의 최댓값 구하기
____배열 원소의 최댓값을 구하는 함수 구현하기
____주석과 자료형 힌트
____재사용할 수 있는 모듈 작성하기
____모듈 테스트하기
____배열 원소를 역순으로 정렬하기
____기수 변환하기(n진수 구하기)
____소수 나열하기
-----------------
03장 검색 알고리즘
-----------------
__03-1 검색 알고리즘이란?
____검색과 키
____검색의 종류
__03-2 선형 검색
____선형 검색
____보초법
__03-3 이진 검색
____이진 검색
____복잡도
__03-4 해시법
____정렬된 배열에서 원소 추가하기
____해시법
____해시 충돌
____체인법
____오픈 주소법
-----------------
04장 스택과 큐
-----------------
__04-1 스택이란?
____스택 알아보기
____스택 구현하기
____스택 프로그램 만들기
__04-2 큐란?
____큐 알아보기
____배열로 큐 구현하기
____링 버퍼로 큐 구현하기
____링 버퍼로 큐 프로그램 만들기
-----------------
05장 재귀 알고리즘
-----------------
__05-1 재귀 알고리즘의 기본
____재귀 알아보기
____팩토리얼 알아보기
____유클리드 호제법 알아보기
__05-2 재귀 알고리즘 분석
____재귀 알고리즘의 2가지 분석 방법
____재귀 알고리즘의 비재귀적 표현
__05-3 하노이의 탑
____하노이의 탑 알아보기
__05-4 8퀸 문제
____8퀸 문제 알아보기
____퀸 배치하기
____분기 작업으로 문제 해결하기
____한정 작업과 분기 한정법
____8퀸 문제 해결 프로그램 만들기
-----------------
06장 정렬 알고리즘
-----------------
__06-1 정렬 알고리즘
____정렬이란?
__06-2 버블 정렬
____버블 정렬 알아보기
____셰이커 정렬 알아보기
__06-3 단순 선택 정렬
____단순 선택 정렬 알아보기
__06-4 단순 삽입 정렬
____단순 삽입 정렬 알아보기
__06-5 셸 정렬
____단순 삽입 정렬의 문제
____셸 정렬 알아보기
__06-6 퀵 정렬
____퀵 정렬 알아보기
____배열을 두 그룹으로 나누기
____퀵 정렬 만들기
____비재귀적인 퀵 정렬 만들기
____피벗 선택하기
____퀵 정렬의 시간 복잡도
__06-7 병합 정렬
____정렬을 마친 배열의 병합
____병합 정렬 만들기
__06-8 힙 정렬
____힙 정렬 알아보기
____힙 정렬의 특징
____루트를 삭제한 힙의 재구성
____힙 정렬 알고리즘 알아보기
____배열을 힙으로 만들기
____힙 정렬의 시간 복잡도
__06-9 도수 정렬
____도수 정렬 알아보기
-----------------
07장 문자열 검색
-----------------
__07-1 브루트 포스법
____문자열 검색이란?
____브루트 포스법 알아보기
__07-2 KMP법
____KMP법 알아보기
__07-3 보이어·무어법
____보이어·무어법 알아보기
____문자열 검색 알고리즘의 시간 복잡도
-----------------
08장 리스트
-----------------
__08-1 연결 리스트
____연결 리스트 알아보기
____배열로 연결 리스트 만들기
__08-2 포인터를 이용한 연결 리스트
____포인터로 연결 리스트 만들기
____포인터로 연결 리스트 프로그램 만들기
__08-3 커서를 이용한 연결 리스트
____커서로 연결 리스트 만들기
____배열 안에 비어 있는 원소 처리하기
____프리 리스트
____커서로 연결 리스트 프로그램 만들기
__08-4 원형 이중 연결 리스트
____원형 리스트 알아보기
____이중 연결 리스트
____원형 이중 연결 리스트
____원형 이중 연결 리스트 만들기
____원형 이중 연결 리스트 프로그램 만들기
-----------------
09장 트리
-----------------
__09-1 트리 구조
____트리의 구조와 관련 용어
____순서 트리와 무순서 트리
____순서 트리의 검색
__09-2 이진 트리와 이진 검색 트리
____이진 트리 알아보기
____완전 이진 트리 알아보기
____이진 검색 트리 알아보기
____이진 검색 트리 만들기
____이진 검색 트리 프로그램 만들기
찾아보기
펼쳐보기
접어보기',
        '213개의 그림과 함께 저자의 친절한 설명으로 개념을 쉽게 이해할 수 있다. 이를 바탕으로 136개의 파이썬 실습 예제로 직접 코딩하며 개발 능력을 키울 수 있다. 눈으로 읽고, 코드를 한 줄씩 입력하다 보면 어느새 자료구조와 알고리즘은 여러분의 것이 될 것이다.',
        '이지스퍼블리싱', '2020-07-20', 22000, 19800, 1, 'https://image.aladin.co.kr/product/24643/56/cover/k892631393_1.jpg',
        10),
       ('9791185475578', 'K372638921', '운영체제 - 제10판', '목차
Part 1 개관
Part 2 프로세스 관리
Part 3 프로세스 동기화
Part 4 메모리 관리
Part 5 저장장치 관리
Part 6 파일 시스템
Part 7 보안과 보호
Part 8 진보된 주제
Part 9 사례 검토
Part 10 부록
찾아보기
펼쳐보기
접어보기', '', '퍼스트북', '2020-02-28', 39000, 39000, 1, 'https://image.aladin.co.kr/product/23536/6/cover/k372638921_1.jpg',
        10);

-- 컴퓨터 공학 bestseller 50~100

INSERT INTO `books`
(`book_isbn13`, `book_isbn10`, `book_title`, `book_contents`, `book_description`, `book_publisher`, `book_date`,
 `book_price`, `book_sale_price`, `book_is_packed`, `book_thumbnail_url`, `book_stock`)
VALUES ('9791191905618', 'K272937158', 'Must Have 코드팩토리의 플러터 프로그래밍 2판 - 다트 & 플러터 입문부터 실전 앱 개발10가지와 인증 / 광고 / 배포까지', '목차
00장 개발 환경 구축
__0.1 윈도우 개발 환경 구축하기
__0.2 macOS 개발 환경 구축하기
__0.3 안드로이드 스튜디오 설치하기
__0.4 설치 문제 해결하기
__0.5 깃허브에서 예제 코드 내려받기
[1단계] 다트 언어 마스터하기
01장 다트 마스터하기
__1.1 다트 소개
__1.2 문법 공부 환경 안내
__1.3 기초 문법
__1.4 컬렉션
__1.5 연산자
__1.6 제어문
__1.7 함수와 람다
__1.8 try...catch
__학습 마무리
02장 다트 객체지향 프로그래밍
__2.1 객체지향 프로그래밍의 필요성
__2.2 객체지향 프로그래밍의 시작, 클래스
__2.3 상속
__2.4 오버라이드
__2.5 인터페이스
__2.6 믹스인
__2.7 추상
__2.8 제네릭
__2.9 스태틱
__2.10 캐스케이드 연산자
__학습 마무리
03장 다트 비동기 프로그래밍
__3.1 동기 vs. 비동기 프로그래밍
__3.2 Future
__3.3 async와 await
__3.4 Stream
__학습 마무리
04장 다트 3.0 신규 문법
__4.1 레코드
__4.2 구조 분해
__4.3 switch문
__4.4 클래스 제한자
__학습 마무리
[2단계] 플러터 기본 다지기
05장 플러터 입문하기
__5.1 플러터 소개
__5.2 Hello Flutter 앱 만들기
__5.3 실제 단말 테스트 환경 구축
__학습 마무리
06장 기본 위젯 알아보기
__6.1 위젯 소개
__6.2 위젯 실습용 템플릿 작성
__6.3 텍스트 관련 위젯
__6.4 제스처 관련 위젯
__6.5 디자인 관련 위젯
__6.6 배치 관련 위젯
__학습 마무리
07장 앱을 만들려면 알아야 하는 그 밖의 지식
__7.1 앱 만들기 프로세스
__7.2 플러그인 추가 방법
__7.3 주변 장치 종류
__7.4 연습용 앱 만들기 : 스프레드 플래시 앱
__학습 마무리
[3단계] 앱을 만들며 유용한 기능 익히기
08장 [Project] 블로그 웹 앱
__8.1 사전 지식 : 콜백 함수·웹뷰 위젯·안드로이드와 iOS 네이티브 설정
__8.2 사전 준비
__8.3 레이아웃 구상하기
__8.4 구현하기
__8.5 테스트하기
__학습 마무리
09장 [Project] 전자액자
__9.1 사전 지식 : 위젯 생명주기·타이머
__9.2 사전 준비
__9.3 레이아웃 구상하기
__9.4 구현하기
__9.5 테스트하기
__학습 마무리
10장 [Project] 만난 지 며칠 U&I
__10.1 사전 지식 : setState() 함수·showCupertinoDialog() 함수
__10.2 사전 준비
__10.3 레이아웃 구상하기
__10.4 구현하기
__10.5 테스트하기
__학습 마무리
11장 [Project] 디지털 주사위
__11.1 사전 지식 : 가속도계·자이로스코프·Sensor_Plus 패키지
__11.2 사전 준비
__11.3 레이아웃 구상하기
__11.4 구현하기
__11.5 테스트하기
__학습 마무리
12장 [Project] 동영상 플레이어
__12.1 사전 지식 : iOS 시뮬레이터 화면 회전하기·안드로이드 에뮬레이터 화면 회전하기·시간 변환 및 String 패딩
__12.2 사전 준비
__12.3 레이아웃 구상하기
__12.4 구현하기
__12.5 테스트하기
__학습 마무리
13장 [Project] 영상 통화
__13.1 사전 지식 : 카메라 플러그인·WebRTC·iOS 시뮬레이터와 안드로이드 에뮬레이터에서의 카메라 사용·내비게이션
__13.2 사전 준비
__13.3 레이아웃 구상하기
__13.4 구현하기
__13.5 테스트하기
__학습 마무리
14장 [Project] 오늘도 출첵
__14.1 사전 지식 : Geolocator 플러그인
__14.2 사전 준비
__14.3 레이아웃 구상하기
__14.4 구현하기
__14.5 테스트하기
__학습 마무리
15장 [Project] 포토 스티커
__15.1 사전 지식 : GestureDetector와 제스처
__15.2 사전 준비
__15.3 레이아웃 구상하기
__15.4 구현하기
__15.5 테스트하기
__학습 마무리
16장 [Project] 코팩튜브
__16.1 사전 지식 : HTTP 요청·REST API·JSON
__16.2 사전 준비
__16.3 레이아웃 구상하기
__16.4 구현하기
__16.5 테스트하기
__학습 마무리
[4단계] 실전! 일정 관리 앱 개발 & 인증 & 배포하기
17장 [Project #1] 일정 관리 앱 만들기
__17.1 사전 지식 : table_calendar 플러그인
__17.2 사전 준비
__17.3 레이아웃 구상하기
__17.4 구현하기
__17.5 테스트하기
__학습 마무리
18장 [Project #2] 데이터베이스 적용하기
__18.1 사전 지식 : SQL, SQLite·드리프트 플러그인·Dismissible 위젯
__18.2 구현하기
__18.3 테스트하기
__학습 마무리
19장 [Project #3] 서버와 연동하기
__19.1 사전 지식 : 상태 관리·캐시와 긍정적 응답
__19.2 사전 준비
__19.3 구현하기
__19.4 테스트하기
__학습 마무리
20장 [Project #4] 파이어베이스 연동하기
__20.1 사전 지식 : 파이어베이스·파이어스토어
__20.2 사전 준비
__20.3 구현하기
__20.4 테스트하기
__학습 마무리
21장 [Project #5] JWT를 이용한 인증하기
__21.1 사전 지식 : 인증·JWT란?·엑세스 토큰과 리프레시 토큰·JWT를 이용한 인증 절차
__21.2 사전 준비
__21.3 구현하기
__21.4 테스트하기
__학습 마무리
22장 [Project #6] 소셜 로그인과 파이어베이스 인증하기
__22.1 사전 지식 : 소셜 로그인과 OAuth 2.0·파이어베이스 인증·구글 로그인 세팅
__22.2 사전 준비
__22.3 레이아웃 구상하기
__22.4 구현하기
__22.5 테스트하기
__학습 마무리
23장 [Project #7] 슈파베이스 연동하기
__23.1 사전 지식 : 슈파베이스란?·행 수준 보안·슈파베이스 인증
__23.2 사전 준비
__23.3 레이아웃 구상하기
__23.4 구현하기
__23.5 테스트하기
__학습 마무리
24장 [Project #8] 광고 및 배포하기
__24.1 사전 지식 : 구글 애드몹
__24.2 사전 준비
__24.3 구현하기
__24.4 배포하기 : 구글 스토어 & 애플 앱스토어
__학습 마무리
[부록]
__A 데이터베이스 종류와 하이브
__B 앱 이름과 아이콘 설정 방법
__C 코딩이 편해지는 안드로이드 스튜디오 편의 기능
__D 흔히 마주하는 에러
펼쳐보기
접어보기',
        '플러터 시작을 위한 다트 언어를 기초부터 객체지향, 비동기 프로그래밍, 신규 3.0 문법까지 4개 장에 걸쳐 다룬다. 독자가 꼭 필요한 내용을 학습할 수 있도록 플러터 기본 위젯부터 현업에 유용한 기능을 담은 10가지 앱을 배울 수 있도록 구성했다.',
        '골든래빗(주)', '2024-02-01', 44000, 39600, 1, 'https://image.aladin.co.kr/product/33227/0/cover/k272937158_1.jpg',
        10),
       ('9791191905694', 'K242938457',
        '코딩 테스트 합격자 되기 : 자바 편 - 자료구조, 알고리즘, 빈출 97 문제로 대비하는 코테 풀 패키지 (모의고사, 엄친아 손노트, 온라인 학습 지원 제공)', '목차
[첫째 마당 : 코딩 테스트 사전 준비]
00장 코딩 테스트를 준비하기 전에
__00-1 합격자가 꼭 되고 싶은 여러분
__타인의 풀이를 보면 사고를 넓힐 수 있다
__나만의 테스트 케이스를 추가하는 건 좋은 알고리즘을 생각할 때 도움이 된다
__00-2 아는 것과 모르는 것을 명확하게
__첫 번째, 기록하라
__두 번째, 시험 보듯 공부하라
__세 번째, 짧은 시간 공부해서는 절대 코딩 테스트를 통과할 수 없다
__네 번째, 나만의 언어로 요약하라
01장 코딩 테스트 효율적으로 준비하기
__01-1 언어 선택하기
__01-2 문제 분석 연습하기
__첫 번째, 문제를 쪼개서 분석하라
__두 번째, 제약 사항을 파악하고 테스트 케이스를 추가하라
__세 번째, 입력값을 분석하라
__네 번째, 그리디하게 접근할 때는 근거를 명확히 해라
__다섯 번째, 데이터 흐름이나 구성을 파악하라
__01-3 의사 코드로 설계하는 연습하기
__첫 번째, 세부 구현이 아닌 동작 중심으로 작성하라
__두 번째, 문제 해결 순서로 작성하라
__세 번째, 충분히 테스트하라
02장 프로그래머스 완벽 활용 가이드
__02-1 프로그래머스는 어떤 곳인가요?
__02-2 프로그래머스 활용 가이드
__프로그래머스 살펴보기
__문제 풀이 과정 살펴보기
03장 알고리즘의 효율 분석
__03-1 시간 복잡도란?
__1차원 배열 검색하기
__알고리즘 수행 시간을 측정하는 방법
__최악의 경우 시간 복잡도를 표현하는 빅오 표기법
__시간 복잡도를 코딩 테스트에 활용하는 방법
__03-2 시간 복잡도 계산해보기
__별 찍기 문제
__박테리아 수명 문제
04장 코딩 테스트 필수 문법
__04-1 프리미티브 타입과 레퍼런스 타입
__정수형
__부동소수형
__04-2 컬렉션 프레임워크
__배열
__리스트
__해시맵
__문자열
__04-3 메서드
__메서드 정의
__메서드 호출
__람다식
__04-4 코딩 테스트 코드 구현 노하우
__조기 반환
__보호 구문
__제네릭
[둘째 마당 : 코딩 테스트 완전 정복]
05장 배열
__05-1 배열 개념
__배열 선언
__배열과 차원
__05-2 ArrayList 사용법
__ArrayList에 데이터 추가
__05-3 ArrayList의 효율성
__배열 연산의 시간 복잡도
__배열을 선택할 때 고려할 점
__05-4 몸풀기 문제
__[문제 01] 배열 정렬하기★
__[문제 02] 배열 제어하기★★
__05-5 합격자가 되는 모의 테스트
__[문제 03] 두 개 뽑아서 더하기★
__[문제 04] 모의고사★
__[문제 05] 행렬의 곱셈★
__[문제 06] 실패율★★
__[문제 07] 방문 길이★★
06장 스택
__06-1 스택 개념
__스택의 동작 원리 이해하기
__06-2 스택의 정의
__스택의 ADT
__Stack 클래스 사용하기
__06-3 몸풀기 문제
__[문제 08] 올바른 괄호★★
__[문제 09] 10진수를 2진수로 변환하기★
__06-4 합격자가 되는 모의 테스트
__[문제 10] 괄호 회전하기★
__[문제 11] 짝지어 제거하기★
__[문제 12] 주식 가격★★
__[문제 13] 크레인 인형 뽑기 게임★★
__[문제 14] 표 편집★★★★★
07장 큐
__07-1 큐의 개념
__큐에서 데이터가 이동하는 과정 살펴보기
__큐의 특성을 활용하는 분야
__큐의 ADT
__07-2 몸풀기 문제
__[문제 15] 요세푸스 문제★★
__07-3 합격자가 되는 모의 테스트
__[문제 16] 기능 개발★★
__[문제 17] 카드 뭉치★★
08장 해시
__08-1 해시의 개념
__해시 자세히 알아보기
__해시의 특성을 활용하는 분야
__08-2 해시 함수
__해시 함수를 구현할 때 고려할 내용
__자주 사용하는 해시 함수 알아보기
__08-3 충돌 처리
__체이닝으로 처리하기
__개방 주소법으로 처리하기
__해시맵
__HashMap 클래스 사용하기
__08-4 몸풀기 문제
__[문제 18] 두 개의 수로 특정값 만들기★
__08-5 합격자가 되는 모의 테스트
__[문제 19] 완주하지 못한 선수★
__[문제 20] 할인 행사★★
__[문제 21] 오픈 채팅방★★
__[문제 22] 베스트 앨범★★
__[문제 23] 신고 결과 받기★★
__[문제 24] 메뉴 리뉴얼★★★
09장 트리
__09-1 트리 개념
__나무를 거꾸로 뒤집어 놓은 모양의 트리
__09-2 이진 트리 표현하기
__배열로 표현하기
__이진 트리 순회하기
__포인터로 표현하기
__인접 리스트로 표현하기
__09-3 이진 트리 탐색하기
__이진 탐색 트리 구축하기
__이진 탐색 트리 탐색하기
__이진 탐색 트리와 배열 탐색의 효율 비교
__09-4 몸풀기 문제
__[문제 25] 트리 순회★
__09-5 합격자가 되는 모의 테스트
__[문제 26] 예상 대진표★
__[문제 27] 다단계 칫솔 판매★★
__[문제 28] 양과 늑대★★★★★
__[문제 29] 길 찾기 게임★★★★
10장 집합
__10-1 집합과 상호배타적 집합의 개념
__집합의 개념
__상호배타적 집합의 특성을 활용하는 분야
__10-2 집합의 연산
__배열을 활용한 트리로 집합 표현하기
__유니온-파인드 알고리즘
__10-3 몸풀기 문제
[문제 30] 간단한 유니온-파인드 알고리즘 구현하기★★
__10-4 합격자가 되는 모의 테스트
__[문제 31] 폰켓몬★
__[문제 32] 영어 끝말잇기★
__[문제 33] 섬 연결하기★★★
11장 그래프
__11-1 그래프의 개념
__그래프 용어 정리
__그래프의 특징과 종류
__그래프 구현
__11-2 그래프 탐색
__깊이 우선 탐색
__너비 우선 탐색
__깊이 우선 탐색과 너비 우선 탐색 비교
__11-3 그래프 최단 경로 구하기
__다익스트라 알고리즘
__벨만-포드 알고리즘
__11-4 몸풀기 문제
__[문제 34] 깊이 우선 탐색 순회★
__[문제 35] 너비 우선 탐색 순회★
__[문제 36] 다익스트라 알고리즘★★★
__11-5 합격자가 되는 모의 테스트
__[문제 37] 게임 맵 최단 거리★★
__[문제 38] 네트워크★★
__[문제 39] 미로 탈출★★
__[문제 40] 배달★★★
__[문제 41] 경주로 건설★★★★★
__[문제 42] 전력망을 둘로 나누기★★
12장 백트래킹
__12-1 백트래킹과 백트래킹 알고리즘 개념
__백트래킹이란?
__백트래킹 알고리즘이란?
__유망 함수란?
__백트래킹 알고리즘 문제에 적용해보기
__N-퀸 문제
__12-2 몸풀기 문제
__[문제 43] 1부터 N까지 숫자 중 합이 10이 되는 조합 구하기★
__[문제 44] 스도쿠 퍼즐★★★
__12-3 합격자가 되는 모의 테스트
__[문제 45] 피로도★
__[문제 46] N-퀸★
__[문제 47] 양궁 대회★★
__[문제 48] 외벽 점검★★★★★
__[문제 49] 사라지는 발판★★★★★
13장 정렬
__13-1 정렬 개념
__정렬이 필요한 이유
__삽입 정렬
__병합 정렬
__힙 정렬
__우선순위 큐
__계수 정렬
__위상 정렬
__13-2 몸풀기 문제
__[문제 50] 계수 정렬 구현하기★
__[문제 51] 정렬이 완료된 두 배열 합치기★
__13-3 합격자가 되는 모의 테스트
__[문제 52] 문자열 내 마음대로 정렬하기★
__[문제 53] 정수 내림차순으로 배치하기★
__[문제 54] K번째 수★
__[문제 55] 가장 큰 수★★★
__[문제 56] 튜플★★
__[문제 57] 지형 이동★★★★
__[문제 58] 전화번호 목록★★
14장 시뮬레이션
__14-1 시뮬레이션 문제 풀이 노하우
__시뮬레이션 문제를 푸는 방법
__행렬 연산
__좌표 연산
__대칭, 회전 연산
__14-2 몸풀기 문제
__[문제 59] 배열 회전하기★★
__[문제 60] 두 행렬을 곱한 후 전치 행렬 만들기★
__[문제 61] 달팽이 수열 만들기★★
__14-3 합격자가 되는 모의 테스트
__[문제 62] 이진 변환 반복하기★★
__[문제 63] 롤케이크 자르기★★
__[문제 64] 카펫★★
__[문제 65] 점프와 순간 이동★★
__[문제 66] 캐릭터의 좌표★★
15장 동적 계획법
__15-1 동적 계획법 개념
__점화식 세우기와 동적 계획법
__재귀 호출의 횟수를 줄여주는 메모이제이션
__최장 증가 부분 수열
__최장 공통 부분 수열
__15-2 몸풀기 문제
__[문제 67] LCS 길이 계산하기★★★
__[문제 68] LIS 길이 계산하기★★★
__[문제 69] 조약돌 문제★★★
__15-3 합격자가 되는 모의 테스트
__[문제 70] 피보나치 수★
__[문제 71] 2 × n 타일링★
__[문제 72] 정수 삼각형★★
__[문제 73] 땅따먹기★★
__[문제 74] 도둑질★★★★★
__[문제 75] 가장 큰 정사각형 찾기★★★
__[문제 76] 단어 퍼즐★★★★
16장 그리디
__16-1 그리디 개념
__그리디 알고리즘으로 거스름돈 내어주기
__그리디 알고리즘이 최적해를 보장하려면?
__16-2 최소 신장 트리
__신장 트리란?
__최소 신장 트리란?
__16-3 배낭 문제
__짐을 쪼갤 수 있는 부분 배낭 문제
__짐을 쪼갤 수 없는 0/1 배낭 문제
__16-4 몸풀기 문제
__[문제 77] 거스름돈 주기★★
__[문제 78] 부분 배낭 문제★★
__16-5 합격자가 되는 모의 테스트
__[문제 79] 예산★
__[문제 80] 구명보트★
__[문제 81] 귤 고르기★★
__[문제 82] 기지국 설치★★
[부록 1 : 모의고사]
_01회 모의고사
__[문제 83] 미로 탈출 명령어
__[문제 84] 택배 배달과 수거하기
__[문제 85] 개인 정보 수집 유효기간
_02회 모의고사
__[문제 86] 110 옮기기
__[문제 87] 쿼드 압축 후 개수 세기
__[문제 88] 없는 숫자 더하기
_03회 모의고사
__[문제 89] 불량 사용자
__[문제 90] k진수에서 소수 개수 구하기
__[문제 91] 거리두기 확인하기
_04회 모의고사
__[문제 92] 코딩 테스트 공부
__[문제 93] 두 큐 합 같게 만들기
__[문제 94] 숫자 게임
_05회 모의고사
__[문제 95] 보석 쇼핑
__[문제 96] 파괴되지 않은 건물
__[문제 97] 로또의 최고 순위와 최저 순위
[부록 2 : 엄친아 요약 노트]
펼쳐보기
접어보기',
        '신입 사원 코딩 테스트 합격에 딱 맞는 빈출문제를 선정하고 풀이하기 위해 저자와 전문 교강사진이 오랜 시간을 들여 고민해 만들었다. 문제의 맥을 관통하는 자료구조와 알고리즘, 시간 복잡도 분석까지 완벽하게 풀이했다.',
        '골든래빗(주)', '2024-03-01', 42000, 37800, 1, 'https://image.aladin.co.kr/product/33510/96/cover/k242938457_1.jpg',
        10),
       ('9791140708765', 'K222939705', '읽고 나면 진짜 쉬워지는 자료 구조 - 더 빠르고 효율적인 코드를 위해 꼭 알아야 할 CS 기초!', '목차
1장 메모리 안 정보
1.1 변수
1.2 복합 자료 구조
1.3 배열
1.4 문자열
1.5 변수와 배열이 중요한 이유
2장 이진 탐색
2.1 문제 정의
2.2 선형 스캔
2.3 이진 탐색 알고리즘
2.4 이진 탐색 적용하기
2.5 실행 시간 045
2.6 이진 탐색이 중요한 이유
3장 동적 자료 구조
3.1 배열의 한계
3.2 포인터와 참조
3.3 연결 리스트
3.4 연결 리스트에 대한 연산
3.5 이중 연결 리스트
3.6 항목들의 배열과 연결 리스트
3.7 연결 리스트가 중요한 이유
4장 스택과 큐
4.1 스택
4.2 큐
4.3 순서의 중요성
4.4 스택과 큐가 중요한 이유
5장 이진 탐색 트리
5.1 이진 탐색 트리 구조
5.2 이진 탐색 트리에서 탐색하기
5.3 이진 탐색 트리 변경하기
5.4 균형이 맞지 않는 트리의 위험성
5.5 이진 탐색 트리 대량 구축
5.6 이진 탐색 트리가 중요한 이유
6장 트라이와 적응형 자료 구조
6.1 문자열로 이뤄진 이진 탐색 트리
6.2 트라이 118
6.3 트라이가 중요한 이유
7장 우선순위 큐와 힙
7.1 우선순위 큐
7.2 최대 힙
7.3 우선순위 갱신하기
7.4 최소 힙
7.5 힙 정렬
7.6 힙이 중요한 이유
8장 격자
8.1 최근접 이웃 탐색 소개
8.2 격자
8.3 격자에 대한 탐색
8.4 격자 크기의 중요성
8.5 2차원을 넘어
8.6 공간 데이터를 넘어
8.7 격자가 중요한 이유
9장 공간 트리
9.1 쿼드 트리
9.2 k-d 트리
9.3 쿼드 트리와 k-d 트리가 중요한 이유
10장 해시 테이블
10.1 키를 사용한 저장과 탐색
10.2 해시 테이블
10.3 해시 함수
10.4 해시 테이블이 중요한 이유
11장 캐시
11.1 캐시 소개
11.2 만료와 캐시
11.3 다른 만료 전략들
11.4 캐시가 중요한 이유
12장 B-트리
12.1 B-트리 구조
12.2 B-트리 탐색하기
12.3 키 삽입하기
12.4 키 제거하기
12.5 B-트리가 중요한 이유
13장 블룸 필터
13.1 블룸 필터 소개
13.2 블룸 필터 매개변수 튜닝하기
13.3 블룸 필터와 해시 테이블의 비교
13.4 블룸 필터가 중요한 이유
14장 스킵 리스트
14.1 무작위적 구조와 결정적인 구조의 비교
14.2 스킵 리스트 소개
14.3 실행 시간
14.4 스킵 리스트가 중요한 이유
15장 그래프
15.1 그래프 소개
15.2 데이크스트라 알고리즘을 사용해 최단 경로 찾기
15.3 프림의 알고리즘을 사용해 최소 스패닝 트리 찾기
15.4 칸의 알고리즘을 이용한 위상 정렬
15.5 그래프가 중요한 이유
16장 결론
16.1 데이터의 구조가 미치는 영향은 무엇인가?
16.2 동적 자료 구조가 필요한가?
16.3 분할 상환 비용이 무엇인가?
16.4 어떻게 자료 구조를 구체적인 문제에 맞게 적응시킬 수 있을까?
16.5 메모리와 실행 시간 사이의 트레이드오프란 무엇인가?
16.6 자료 구조를 어떻게 튜닝할까?
16.7 무작위화가 기대 동작에 미치는 영향은 어떤가?
16.7 16장이 중요한 이유
펼쳐보기
접어보기', '단순히 자료 구조의 종류를 나열하고 소개하는 것이 아니라 핵심 자료 구조 15개에 초점을 맞추고 어떻게 동작하는지, 왜 이 자료 구조가 중요한지 알려준다.', '길벗', '2024-03-19',
        30000, 27000, 1, 'https://image.aladin.co.kr/product/33605/68/cover/k222939705_1.jpg', 10),
       ('9788966260959', '8966260950', '클린 코드 Clean Code - 애자일 소프트웨어 장인 정신', '목차
1장 깨끗한 코드
코드가 존재하리라
나쁜 코드
나쁜 코드로 치르는 대가
__ 원대한 재설계의 꿈
__ 태도
__ 원초적 난제
__ 깨끗한 코드라는 예술?
__ 깨끗한 코드란?
우리들 생각
우리는 저자다
보이스카우트 규칙
프리퀄과 원칙
결론
참고 문헌
2장 의미 있는 이름
들어가면서
의도를 분명히 밝혀라
그릇된 정보를 피하라
의미 있게 구분하라
발음하기 쉬운 이름을 사용하라
검색하기 쉬운 이름을 사용하라
인코딩을 피하라
__ 헝가리식 표기법
__ 멤버 변수 접두어
__ 인터페이스 클래스와 구현 클래스
자신의 기억력을 자랑하지 마라
클래스 이름
메서드 이름
기발한 이름은 피하라
한 개념에 한 단어를 사용하라
말장난을 하지 마라
해법 영역에서 가져온 이름을 사용하라
문제 영역에서 가져온 이름을 사용하라
의미 있는 맥락을 추가하라
불필요한 맥락을 없애라
마치면서
3장 함수
작게 만들어라!
__ 블록과 들여쓰기
한 가지만 해라!
__ 함수 내 섹션
함수 당 추상화 수준은 하나로!
__ 위에서 아래로 코드 읽기: 내려가기 규칙
Switch 문
서술적인 이름을 사용하라!
함수 인수
__ 많이 쓰는 단항 형식
__ 플래그 인수
__ 이항 함수
__ 삼항 함수
__ 인수 객체
__ 인수 목록
__ 동사와 키워드
부수 효과를 일으키지 마라!
__ 출력 인수
명령과 조회를 분리하라!
오류 코드보다 예외를 사용하라!
__ Try/Catch 블록 뽑아내기
__ 오류 처리도 한 가지 작업이다.
__ Error.java 의존성 자석
반복하지 마라!
구조적 프로그래밍
함수를 어떻게 짜죠?
결론
참고 문헌
4장 주석
주석은 나쁜 코드를 보완하지 못한다
코드로 의도를 표현하라!
좋은 주석
__ 법적인 주석
__ 정보를 제공하는 주석
__ 의도를 설명하는 주석
__ 의미를 명료하게 밝히는 주석
__ 결과를 경고하는 주석
__ TODO 주석
__ 중요성을 강조하는 주석
__ 공개 API에서 Javadocs
나쁜 주석
__ 주절거리는 주석
__ 같은 이야기를 중복하는 주석
__ 오해할 여지가 있는 주석
__ 의무적으로 다는 주석
__ 이력을 기록하는 주석
__ 있으나 마나 한 주석
__ 무서운 잡음
__ 함수나 변수로 표현할 수 있다면 주석을 달지 마라
__ 위치를 표시하는 주석
__ 닫는 괄호에 다는 주석
__ 공로를 돌리거나 저자를 표시하는 주석
__ 주석으로 처리한 코드
__ HTML 주석
__ 전역 정보
__ 너무 많은 정보
__ 모호한 관계
__ 함수 헤더
__ 비공개 코드에서 Javadocs
__ 예제
참고 문헌
5장 형식 맞추기
형식을 맞추는 목적
적절한 행 길이를 유지하라
__ 신문 기사처럼 작성하라
__ 개념은 빈 행으로 분리하라
__ 세로 밀집도
__ 수직 거리
__ 세로 순서
가로 형식 맞추기
__ 가로 공백과 밀집도
__ 가로 정렬
__ 들여쓰기
가짜 범위
팀 규칙
밥 아저씨의 형식 규칙
6장 객체와 자료 구조
자료 추상화
자료/객체 비대칭
디미터 법칙
__ 기차 충돌
__ 잡종 구조
__ 구조체 감추기
자료 전달 객체
__ 활성 레코드
결론
참고 문헌
7장 오류 처리
오류 코드보다 예외를 사용하라
Try-Catch-Finally 문부터 작성하라
미확인unchecked 예외를 사용하라
예외에 의미를 제공하라
호출자를 고려해 예외 클래스를 정의하라
정상 흐름을 정의하라
null을 반환하지 마라
null을 전달하지 마라
결론
참고문헌
8장 경계
외부 코드 사용하기
경계 살피고 익히기
log4j 익히기
학습 테스트는 공짜 이상이다
아직 존재하지 않는 코드를 사용하기
깨끗한 경계
참고 문헌
9장 단위 테스트
TDD 법칙 세 가지
깨끗한 테스트 코드 유지하기
__ 테스트는 유연성, 유지보수성, 재사용성을 제공한다
깨끗한 테스트 코드
__ 도메인에 특화된 테스트 언어
__ 이중 표준
테스트 당 assert 하나
__ 테스트 당 개념 하나
F.I.R.S.T.
결론
참고 문헌
10장 클래스
클래스 체계
__ 캡슐화
클래스는 작아야 한다!
__ 단일 책임 원칙
__ 응집도Cohesion
__ 응집도를 유지하면 작은 클래스 여럿이 나온다
변경하기 쉬운 클래스
__ 변경으로부터 격리
참고 문헌
11장 시스템
도시를 세운다면?
시스템 제작과 시스템 사용을 분리하라
__ Main 분리
__ 팩토리
__ 의존성 주입
확장
__ 횡단(cross-cutting) 관심사
자바 프록시
순수 자바 AOP 프레임워크
AspectJ 관점
테스트 주도 시스템 아키텍처 구축
의사 결정을 최적화하라
명백한 가치가 있을 때 표준을 현명하게 사용하라
시스템은 도메인 특화 언어가 필요하다
결론
참고 문헌
12장 창발성(創發性)
창발적 설계로 깔끔한 코드를 구현하자
단순한 설계 규칙 1: 모든 테스트를 실행하라
단순한 설계 규칙 2~4: 리팩터링
중복을 없애라
표현하라
클래스와 메서드 수를 최소로 줄여라
결론
참고 문헌
13장 동시성
동시성이 필요한 이유?
__ 미신과 오해
난관
동시성 방어 원칙
__ 단일 책임 원칙Single Responsibility Principle, SRP
__ 따름 정리corollary: 자료 범위를 제한하라
__ 따름 정리: 자료 사본을 사용하라
__ 따름 정리: 스레드는 가능한 독립적으로 구현하라
라이브러리를 이해하라
__ 스레드 환경에 안전한 컬렉션
실행 모델을 이해하라
__ 생산자-소비자Producer-Consumer
__ 읽기-쓰기Readers-Writers
__ 식사하는 철학자들Dining Philosophers
동기화하는 메서드 사이에 존재하는 의존성을 이해하라
동기화하는 부분을 작게 만들어라
올바른 종료 코드는 구현하기 어렵다
스레드 코드 테스트하기
__ 말이 안 되는 실패는 잠정적인 스레드 문제로 취급하라
__ 다중 스레드를 고려하지 않은 순차 코드부터 제대로 돌게 만들자
__ 다중 스레드를 쓰는 코드 부분을 다양한 환경에 쉽게 끼워 넣을 수 있게 스레드 코드를 구현하라
__ 다중 스레드를 쓰는 코드 부분을 상황에 맞게 조율할 수 있게 작성하라
__ 프로세서 수보다 많은 스레드를 돌려보라
__ 다른 플랫폼에서 돌려보라
__ 코드에 보조 코드instrument를 넣어 돌려라. 강제로 실패를 일으키게 해보라
__ 직접 구현하기
__ 자동화
결론
참고 문헌
14장 점진적인 개선
Args 구현
__ 어떻게 짰느냐고?
Args: 1차 초안
__ 그래서 멈췄다
__ 점진적으로 개선하다
String 인수
결론
15장 JUnit 들여다보기
JUnit 프레임워크
결론
16장 SerialDate 리팩터링
첫째, 돌려보자
둘째, 고쳐보자
결론
참고 문헌
17장 냄새와 휴리스틱
주석
__ C1: 부적절한 정보
__ C2: 쓸모 없는 주석
__ C3: 중복된 주석
__ C4: 성의 없는 주석
__ C5: 주석 처리된 코드
환경
__ E1: 여러 단계로 빌드해야 한다
__ E2: 여러 단계로 테스트해야 한다
함수
__ F1: 너무 많은 인수
__ F2: 출력 인수
__ F3: 플래그 인수
__ F4: 죽은 함수
일반
__ G1: 한 소스 파일에 여러 언어를 사용한다
__ G2: 당연한 동작을 구현하지 않는다
__ G3: 경계를 올바로 처리하지 않는다
__ G4: 안전 절차 무시
__ G5: 중복
__ G6: 추상화 수준이 올바르지 못하다
__ G7: 기초 클래스가 파생 클래스에 의존한다
__ G8: 과도한 정보
__ G9: 죽은 코드
__ G10: 수직 분리
__ G11: 일관성 부족
__ G12: 잡동사니
__ G13: 인위적 결합
__ G14: 기능 욕심
__ G15: 선택자 인수
__ G16: 모호한 의도
__ G17: 잘못 지운 책임
__ G18: 부적절한 static 함수
__ G19: 서술적 변수
__ G20: 이름과 기능이 일치하는 함수
__ G21: 알고리즘을 이해하라
__ G22: 논리적 의존성은 물리적으로 드러내라
__ G23: If/Else 혹은 Switch/Case 문보다 다형성을 사용하라
__ G24: 표준 표기법을 따르라
__ G25: 매직 숫자는 명명된 상수로 교체하라
__ G26: 정확하라
__ G27: 관례보다 구조를 사용하라
__ G28: 조건을 캡슐화하라
__ G29: 부정 조건은 피하라
__ G30: 함수는 한 가지만 해야 한다
__ G31: 숨겨진 시간적인 결합
__ G32: 일관성을 유지하라
__ G33: 경계 조건을 캡슐화하라
__ G34: 함수는 추상화 수준을 한 단계만 내려가야 한다
__ G35: 설정 정보는 최상위 단계에 둬라
__ G36: 추이적 탐색을 피하라
자바
__ J1: 긴 import 목록을 피하고 와일드카드를 사용하라
__ J2: 상수는 상속하지 않는다
__ J3: 상수 대 Enum
이름
__ N1: 서술적인 이름을 사용하라
__ N2: 적절한 추상화 수준에서 이름을 선택하라
__ N3: 가능하다면 표준 명명법을 사용하
__ N4: 명확한 이름
__ N5: 긴 범위는 긴 이름을 사용하라
__ N6: 인코딩을 피하라
__ N7: 이름으로 부수 효과를 설명하라
테스트
__ T1: 불충분한 테스트
__ T2: 커버리지 도구를 사용하라!
__ T3: 사소한 테스트를 건너뛰지 마라
__ T4: 무시한 테스트는 모호함을 뜻한다
__ T5: 경계 조건을 테스트하라
__ T6: 버그 주변은 철저히 테스트하라
__ T7: 실패 패턴을 살펴라
__ T8: 테스트 커버리지 패턴을 살펴라
__ T9: 테스트는 빨라야 한다
결론
참고 문헌
부록A 동시성 II
클라이언트/서버 예제
__ 서버
__ 스레드 추가하기
__ 서버 살펴보기
__ 결론
가능한 실행 경로
__ 경로 수
__ 가능한 순열 수 계산하기
__ 심층 분석
__ 결론
라이브러리를 이해하라
__ Executor 프레임워크
__ 스레드를 차단하지 않는non blocking 방법
__ 다중 스레드 환경에서 안전하지 않은 클래스
메서드 사이에 존재하는 의존성을 조심하라
__ 실패를 용인한다
__ 클라이언트-기반 잠금
__ 서버-기반 잠금
작업 처리량 높이기
__ 작업 처리량 계산 - 단일스레드 환경
__ 작업 처리량 계산 - 다중 스레드 환경
데드락
__ 상호 배제Mutual Exclusion
__ 잠금 & 대기Lock & Wait
__ 선점 불가No Preemption
__ 순환 대기Circular Wait
__ 상호 배제 조건 깨기
__ 잠금 & 대기 조건 깨기
__ 선점 불가 조건 깨기
__ 순환 대기 조건 깨기
__ 다중 스레드 코드 테스트
__ 스레드 코드 테스트를 도와주는 도구
결론
자습서: 전체 코드 예제
__ 클라이언트/서버 - 단일스레드 버전
__ 클라이언트/서버 - 다중 스레드 버전
부록B org.jfree.date.SerialDate
부록C 휴리스틱의 교차 참조 목록
에필로그
용어 대역표
약어 목록
찾아보기
펼쳐보기
접어보기',
        '로버트 마틴은 이 책에서 혁명적인 패러다임을 제시한다. 그는 오브젝트 멘토(Object Mentor)의 동료들과 힘을 모아 ‘개발하며’ 클린 코드를 만드는 최상의 애자일 기법을 정제해 책 한 권에 담았다.',
        '인사이트', '2013-12-24', 33000, 29700, 1, 'https://image.aladin.co.kr/product/3408/36/cover/8966260950_2.jpg', 10),
       ('9788970506678', '8970506675', '쉽게 풀어쓴 C언어 Express - 개정4판', '목차
Chapter 01 프로그래밍의 개념
1.1 프로그래밍이란?
1.2 프로그래밍 언어
1.3 C언어의 소개
1.4 알고리즘이란?
[LAB] 프린터 고장 수리 알고리즘
[LAB] 성적 평균 계산기
[Mini Project] 숫자 리스트에서 최대값 찾는 알고리즘
Q&A
ㆍExercise
Chapter 02 프로그램 작성 과정
2.1 프로그램 개발 과정
2.2 통합 개발 환경
2.3 비주얼 스튜디오 설치
2.4 비주얼 스튜디오 사용하기
2.5 예제 프로그램의 간략한 설명
2.6 예제 프로그램의 응용
[LAB] 간단한 계산을 해보자
[LAB] 구구단을 출력해보자
2.7 오류 수정
[Mini Project] 오류를 처리해보자
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 03 C 프로그램 구성요소
3.1 덧셈 프로그램 #1
3.2 주석
3.3 전처리기
3.4 함수
3.5 변수
3.6 수식과 연산
3.7 printf()
[LAB] 사칙 연산
3.8 scanf()
3.9 덧셈 프로그램 #2
[LAB] 원의 면적 구하기 프로그램
[LAB] 환율계산 프로그램
[LAB] 평균 계산하기 프로그램
[Mini Project] 사각형의 둘레와 면적
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 04 변수와 자료형
4.1 변수와 상수
4.2 자료형
4.3 정수형
4.4 부동 소수점형
4.5 문자형
[LAB] 변수의 초기값
[Mini Project] 태양빛 도달 시간 계산
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 05 수식과 연산자
5.1 수식과 연산자
5.2 산술 연산자
[LAB] 거스름돈 계산하기
5.3 대입 연산자
5.4 관계 연산자
5.5 논리 연산자
[LAB] 윤년 판단
5.6 조건 연산자
5.7 콤마 연산자
5.8 비트 연산자
[LAB] 십진수를 이진수로 출력하기
[LAB] XOR를 이용한 암호화
5.9 형변환
5.10 연산자의 우선 순위와 결합 규칙
[LAB] 화씨 온도를 섭씨로 바꾸기
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 06 조건문
6.1 제어문
6.2 if 문
6.3 if-else 문
6.4 다중 if 문
[LAB] 이차 방정식
[LAB] 산술 계산기
6.5 switch 문
[LAB] 산술 계산기(switch 버전)
6.6 goto 문
[Mini Project] 소득세 계산기 만들기
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 07 반복문
7.1 반복의 개념
7.2 while 문
7.3 반복 루프에서 보초값 사용하기
[LAB] 최대 공약수 찾기
[LAB] 반감기
7.4 do…while 문
[LAB] 숫자 추측 게임
7.5 for 문
7.6 중첩 반복문
[LAB] 직각 삼각형 찾기
7.7 무한 루프와 break, continue
[LAB] 파이 구하기
[LAB] 복리 이자 계산
[LAB] 자동으로 수학문제 생성하기
[LAB] 도박사의 확률
ㆍQ&A
ㆍExercise
ㆍProgramming
Chapter 08 함수
8.1 함수란?
8.2 함수 정의
8.3 매개 변수와 반환값
[LAB] 생일 축하 함수
[LAB] 정수를 입력받는 get_integer() 함수
[LAB] 정수의 합을 계산하는 add() 함수
[LAB] 팩토리얼 계산 함수
[LAB] 온도 변환 프로그램
[LAB] 조합 계산하기
[LAB] 소수 찾기
8.4 함수 원형
8.5 표준 라이브러리 함수(난수)
[LAB] 동전던지기 게임
[LAB] 자동차 경주 프로그램
8.6 표준 라이브러리 함수(수학 함수)
[LAB] 시간 맞추기 게임
[LAB] 나무 높이 측정
[LAB] 삼각함수 그리기
8.7 함수를 사용하는 이유
[Mini Project] 공학용 계산기 프로그램 작성
ㆍAdvanced Topic
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 09 변수 범위와 순환 호출
9.1 변수의 속성
9.2 지역 변수
9.3 전역 변수
9.4 생존 시간
[LAB] 은행 계좌 구현하기
[LAB] 한 번만 초기화하기
9.5 연결
9.6 어떤 저장 유형을 사용하여 하는가?
[LAB] 난수 발생기 작성(Linear Congruential Generator)
9.7 가변 매개 변수 함수
9.8 순환 호출
[Mini Project] 하노이 탑
ㆍAdvanced Topic
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 10 배열
10.1 배열이란?
10.2 배열의 초기화
[LAB] 주사위 던지기
[LAB] 극장 예약 시스템
[LAB] 최소값 찾기
10.3 배열과 함수
10.4 정렬
10.5 탐색
10.6 2차원 배열
[LAB] 영상 처리
[Mini Project] TIC-TAC-TOE 게임
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 11 포인터
11.1 포인터란?
11.2 간접 참조 연산자 ?
[LAB] 임베디드 프로그래밍 체험 #1
11.3 포인터 사용시 주의할 점
11.4 포인터 연산
11.5 포인터와 함수
11.6 포인터와 배열
[LAB] 영상 처리
11.7 포인터 사용의 장점
[Mini Project] 자율 주행 자동차
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 12 문자와 문자열
12.1 문자와 문자열
12,2 문자 입출력 라이브러리
12.3 문자열 입출력 라이브러리
12.4 문자 처리 라이브러리
[LAB] 단어 세기
[LAB] 유효한 암호 확인
12.5 문자열 처리 라이브러리 함수
[LAB] 단답형 퀴즈
12.6 문자열 수치 변환
[LAB] 영상 파일 이름 자동 생성
12.7 문자열 여러 개를 저장하는 방법
[LAB] 한영 사전의 구현
[LAB] 메시지 암호화
[Mini Project] 행맨 게임
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 13 구조체
13.1 구조체란 무엇인가?
13.2 구조체의 선언, 초기화, 사용
[LAB] 2차원 공간 상의 점을 구조체로 표현하기
[LAB] 사각형을 point 구조체로 나타내기
13.3 구조체의 배열
13.4 구조체와 포인터
13.5 구조체와 함수
[LAB] 벡터 연산
13.6 공용체
13.7 열거형
13.8 typedef
[LAB] 2차원 공간 상의 점을 POINT 타입으로 정의하기
[Mini Project] 4지 선다 퀴즈 프로그램
ㆍQ&A
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 14 포인터 활용
14.1 이중 포인터
14.2 포인터 배열
14.3 배열 포인터
14.4 함수 포인터
14.5 다차원 배열과 포인터
14.6 const 포인터와 volatile 포인터
14.7 void 포인터
14.8 main 함수의 인수
[LAB] 프로그램 인수 사용하기
[LAB] qsort() 함수 사용하기
[Mini Project] 이분법으로 근 구하기
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 15 스트림과 파일 입출력
15.1 스트림
15.2 파일의 기초
15.3 텍스트 파일 읽기와 쓰기
[LAB] 파일에서 특정 문자열 탐색
15.4 이진 파일 읽기와 쓰기
[LAB] 이진 파일에 학생 정보 저장하기
[LAB] 이미지 파일 복사하기
[LAB] 파일 압축 (RLE)
[LAB] 파일 암호화 (XOR)
15.5 임의 접근
[Mini Project] 주소록 만들기
ㆍSummary
ㆍQ&A
ㆍExercise
ㆍProgramming
Chapter 16 전처리 및 다중 소스 파일
16.1 전처리기란?
16.2 단순 매크로
16.3 함수 매크로
[LAB] ASSERT 매크로
[LAB] 비트 매크로 작성
16.4 #ifdef, #endif
[LAB] 여러 가지 버전 정의하기
[LAB] 리눅스 버전과 윈도우 버전 분리
16.5 #if, #else, #endif
16.6 다중 소스 파일
[LAB] 헤더 파일 중복 포함 막기
16.7 비트 필드 구조체
[LAB] 비트 필드와 공용체를 이용한 하드웨어 제어
[Mini Project] 전처리기 사용하기
ㆍSummary
ㆍExercise
ㆍProgramming
Chapter 17 동적 메모리
17.1 동적 할당 메모리란?
17.2 동적 메모리 할당의 기본
[LAB] 동적 배열을 이용한 성적 처리
17.3 calloc()과 realloc()
[LAB] 어떤 문자열이라도 저장하는 동적 메모리
17.4 구조체를 동적 생성해보자
17.5 연결 리스트란?
[Mini Project] 영화 관리 프로그램
ㆍAdvanced Topic
ㆍSummary
ㆍExercise
ㆍProgramming
ㆍ찾아보기
펼쳐보기
접어보기
',
        '적절한 그림을 가능한 많이 사용하여 보다 친숙하고, 지루하지 않으며 독자들이 이해하기 쉽도록 구성하였다. 입문자들은 그림을 통하여 보다 쉽게 관련 개념들을 빠르게 이해할 수 있다.각각의 주제에 대하여 개념과 원리를 자세하게 설명하였다.',
        '생능', '2023-01-17', 32000, 32000, 1, 'https://image.aladin.co.kr/product/30841/63/cover/8970506675_1.jpg', 10),
       ('9791158394721', 'K852935245', '진짜 챗GPT 활용법 - 엑셀 활용법부터 블로그 자동화, 유튜브 콘텐츠 생성, 미드저니와 주식/부동산 데이터분석까지, 개정판', '목차
1장: ChatGPT 개요
ChatGPT의 전문 분야: 자연어 처리란?
트랜스포머의 등장
___인공 신경망
___트랜스포머
___인코더와 디코더
OpenAI와 언어 모델 GPT
GPT 시리즈의 발전
ChatGPT의 등장 (GPT-3.5)
GPT의 오해와 한계
2장: ChatGPT와 GPT-3 시작하기
회원 가입
ChatGPT 무료 버전 사용하기
접속되지 않는 경우
OpenAI의 다른 GPT 모델 사용해보기
___플레이그라운드 사용하기
___다양한 예제 참고하기
___다른 GPT 모델 사용해보기
___최대 길이(Maximum length)
___온도 조절(Temperature)
___빈도수 페널티와 존재 페널티
ChatGPT 플러스 사용하기
___GPT-4 모델 사용 가능
___Advanced Data Analysis 기능 사용 가능
___플러그인 기능 사용 가능
03장: ChatGPT 튜토리얼
한/영 번역 크롬 확장 프로그램: 프롬프트 지니
___프롬프트 지니 설치 방법
___프롬프트 지니 사용 방법
ChatGPT를 위한 프롬프트 가이드
___프롬프트 엔지니어링
___답변의 형태를 구체적으로 요청하세요
___정보, 맥락, 예시를 추가로 제공하세요
___역할극을 요청하세요
___영어를 사용해보세요
___추가 답변을 요청하세요
ChatGPT로 할 수 있는 것들
___다양한 장르의 콘텐츠 작성
___프로그래밍 도우미
___번역
___텍스트 요약하기
___정보 또는 설명 요청하기
___아이디어 얻기
___마케팅 준비하기
4장: 블로그 글을 대신써주는 블로거 ChatGPT
ChatGPT와 대화하며 블로그 글 작성하기
___블로그 글 주제 선정하기
___콘텐츠 작성하기
___해시태그/키워드 선정하기
___Meta Description 작성하기
___이미지 삽입하기
___최종 블로그 글 포스팅하기
크롬 확장 프로그램을 통해 1분만에 블로그 글 작성하기
___AIPRM for ChatGPT 설치하기
___키워드를 활용한 SEO 최적화 주제 한 번에 생성하기
___Title을 활용한 SEO 최적화 글 작성하기
___다른 사이트 글을 벤치마킹하여 나만의 SEO 최적화 글 생성하기
구글 스프레드시트와 ChatGPT를 활용한 블로그 글 작성 자동화
___자동화 프로그램 맛보기
___준비 작업 1 - OpenAI API 키 발급하기
___준비 작업 2 - 구글 스프레드시트에 확장 프로그램 설치하기
___자동화 시스템의 구조
___자동화 프로그램의 테이블 구성
___자동화에 필요한 구글 스프레드시트 함수
___입력 받은 주제를 영어로 번역하기
___ChatGPT에게 블로그 글 작성 요청하기
___한글로 번역하기
___활용 방법 및 정리
___구글 스프레드시트를 통한 블로그 글 자동화의 한계
___에러가 발생한다면?
5장: 유튜브 동영상을 만들어주느 크리에이터 ChatGPT
ChatGPT를 활용하여 유튜브 주제 정하기
___ChatGPT와 대화를 통해 주제 구체화하기
___ChatGPT를 활용하여 경쟁 유튜브 영상 벤치마킹하기
ChatGPT를 활용하여 유튜브 스크립트 작성하기
픽토리 AI와 클로바더빙을 활용하여 동영상 제작하기
___픽토리 AI 내 스크립트 넣기
___동영상 템플릿 설정하기
___자막 편집하기
___배경음악 선택하기
___스크립트 음성 더빙하기
___텍스트 넣기
___동영상 생성
동영상 생성 AI 플랫폼 사이트 추천
6장: 사진을 이용해 글을 써주는 글 작가 ChatGPT
Imagga를 활용한 사진 키워드 추출
___Imagga란?
___Imagga Tagging 기능을 활용한 사진 키워드 추출하기
___사진 키워드 추출 결과 분석
사진의 키워드를 활용해 시를 쓰는 ChatGPT
___사진에서 추출한 키워드를 활용해 시 작성하기
___분위기 변경하여 작성하기
___타깃 독자를 지정해서 작성하기
소설을 쓰는 ChatGPT
___사진에서 추출한 키워드를 활용해 소설 쓰기
___장르 변경하여 작성하기
___시대적 배경을 변경하여 작성하기
7장: ChatGPT를 가정 교사와 면접관으로 고용하기
영어 공부하기
___문법 교정받기
___ChatGPT에 면접관 역할을 시켜 면접 준비하기
___영어 단어 공부하기
___영작하기
___영어 스피치 공부하기
프로그래밍 언어 공부하기
___구글 코랩 소개
___파이썬 강의 계획서 만들기
___주차별 내용 파고들기
___에러가 발생한 경우
___문제 풀이하기
8장: ChatGPT와 AI Art로 시작하는 웹 디자인
미드저니(Midjourney) 소개
미드저니 파라미터
미드저니를 통해 이미지 생성하기
웹 사이트 디자인하기
ChatGPT로 홍보 문구 만들기
DeepL을 활용해 자연스러운 번역하기
웹 사이트에 홍보 문구 삽입하기
웹 디자인을 위한 프롬프트 가이드
미드저니의 유료 정책
유료 구독 방법
9장: ChatGPT로 엑셀 업무 속도 10배 높이기
총 정산액 계산
결제 수단에 따른 정산액 계산
전체 결제기관 리스트 출력하기
신용카드 기관의 수 카운트하기
특정 구매자의 결제 수단 확인하기
10장: ChatGPT로 성공적인 프레젠테이션 준비하기
발표 콘텐츠 작성
발표 슬라이드 제작
___슬라이드에 이미지 삽입하기
___텍스트 삽입하기
스크립트 작성
11장: ChatGPT에 날개를 달다 - Advanced Data Analysis
Advanced Data Analysis 기능 활성화하기
주식 데이터 분석
부동산 데이터 분석
카카오톡 대화 분석
12장: ChatGPT API 맛보기
API 요금 정책
API 실습
___OpenAI 라이브러리 설치/API 키 입력
___기본 답변 얻기
___역할 부여하기
___이전 대화를 포함하여 답변하기
13장: ChatGPT 사용을 도와주는 크롬 확장 프로그램
최신 정보를 반영해주는 WebChatGPT
___WebChatGPT 설치 방법
___WebChatGPT 사용 방법
구글 검색과 동시에 ChatGPT 결과를 제공하는 ChatGPT for Search Engines
___ChatGPT for Search Engines 설치 방법
___ChatGPT for Search Engines 사용 방법
Gmail에서 바로 메일 작성을 도와주는 ChatGPT Writer
___ChatGPT Writer 설치 방법
___ChatGPT Writer 사용 방법
14장: ChatGPT의 다른 대안, 추천 AI 플랫폼
웹 검색과 챗봇을 동시에: Youchat
챗봇에서 이미지 생성까지: Chatsonic
공동 작업 공간에서 함께 쓰는 인공지능: Notion AI
한글 글짓기 최적화 AI: 뤼튼
검색 엔진에서 ChatGPT 정식 런칭: Bing(New ChatGPT)
구글의 생성 모델 BARD
펼쳐보기
접어보기',
        'ChatGPT의 기본 사용법부터 블로그, 영상 제작, 업무에서의 활용법은 물론, Advanced Data Analysis를 활용한 주식 데이터, 부동산 데이터 분석까지 생성형 AI를 다양하게 활용하는 ''진짜 활용법''을 담았다.',
        '위키북스', '2023-10-12', 20000, 18000, 1, 'https://image.aladin.co.kr/product/32579/19/cover/k852935245_1.jpg',
        10),
       ('9788966263301', '8966263305', '1일 1로그 100일 완성 IT 지식 - 하드웨어, 소프트웨어, 통신, 데이터, 4가지 IT 근육으로 디지털 문해력 기르기', '목차
들어가며
서문
1부 [IT 근육 하나] 하드웨어
001 컴퓨터의 논리와 구조
002 프로세서 속도와 심장 박동수
003 HDD와 SSD의 차이
004 가로세로 1cm 프로세서 칩
005 50년 넘게 유지된 무어의 법칙
006 요약
007 연속과 불연속
008 아날로그 정보를 디지털로 바꾸기
009 0과 1의 세계
010 비트 모아 데이터
011 요약
012 프로세서와 계산기의 다른 점
013 모형 컴퓨터로 더하기 프로그램 만들기
014 프로세서는 무조건 빠른 게 좋을까?
015 캐시가 뭔가요?
016 슈퍼컴퓨터부터 사물인터넷까지
017 요약
2부 [IT 근육 둘] 소프트웨어
018 알고리즘과 초콜릿 케이크 레시피
019 반에서 가장 키 큰 사람 찾기: 선형 알고리즘
020 10억 개 전화번호에서 이름 찾기: 이진 검색
021 검색을 쉽게 만드는 정렬: 선택 정렬 vs 퀵 정렬
022 10개 도시를 최단거리로 여행하는 법
023 요약
024 알고리즘은 이상, 프로그래밍은 현실
025 다른 프로그램을 처리하기 위한 프로그램
026 고수준 언어에서 프로그램 실행까지
027 작문과 비슷한 프로그래밍
028 구글 같은 서비스는 어떻게 개발할까?
029 구글과 오라클의 저작권 소송
030 기술 표준의 중요성
031 자유로운 소프트웨어, 오픈소스
032 요약
033 컴퓨터를 작동하게 만드는 운영체제
034 가상 운영체제와 가상 머신
035 운영체제가 일하는 법
036 파일 시스템과 블록
037 파일을 휴지통에 넣을 때 일어나는 일
038 여러 작업을 수행하는 애플리케이션
039 소프트웨어의 계층 구조
040 요약
041 자바스크립트와 파이썬
042 프로그래밍 언어의 주요 개념
043 자바스크립트로 Hello, World 출력하기
044 사용자 이름 입력받아 출력하기
045 루프와 조건문
046 자바스크립트로 구글 지도에 위치 표시하기
047 자바스크립트는 어떻게 작동할까?
048 파이썬으로 Hello, World 출력하기
049 더하기 프로그램 만들기
050 파이썬으로 그래프 그리기
051 파이썬은 어떻게 작동할까?
052 요약
3부 [IT 근육 셋] 통신
053 전화부터 와이파이까지, 네트워크의 기본 속성
054 삐- 삐- 추억의 모뎀 소리
055 킬로바이트에서 메가바이트로
056 학교나 회사에서 사용하는 근거리 네트워크, 이더넷
057 와이파이는 상표 이름
058 휴대전화가 영어로 셀룰러폰인 이유
059 3G, LTE, 4G, 5G
060 ZIP 파일로 압축할 때
061 오류를 검출하고 수정하는 알고리즘
062 요약
063 표준과 프로토콜의 세계, 인터넷
064 인터넷이 가능한 메커니즘
065 나만의 도메인이 갖고 싶다면?
066 출발지에서 목적지까지, 인터넷 경로 확인하기
067 데이터를 전송하는 핵심 프로토콜 TCP/IP
068 최상위 프로토콜: 메일 전송과 파일 공유
069 디지털 저작권 논쟁
070 보안에 취약한 IoT 기기들
071 요약
072 월드 와이드 웹은 무료다
073 URL의 의미
074 HTML과 CSS로 간단한 웹페이지 만들기
075 쿠키를 삭제하시겠습니까?
076 어도비 플래시는 왜 퇴출됐을까?
077 이메일 첨부파일을 함부로 클릭하면 안 되는 이유
078 바이러스 전파
079 곳곳에 도사리는 위험
080 웹에서 나를 지키는 3단계 방어책
081 요약
4부 [IT 근육 넷] 데이터
082 제타바이트 시대
083 검색 엔진과 타깃 광고
084 내가 인터넷을 보면 인터넷도 나를 본다
085 트윗을 올리기 전에
086 메타데이터에 관한 불편한 진실
087 클라우드와 프라이버시
088 요약
089 인간의 영역에 들어온 컴퓨터
090 인공지능의 겨울
091 머신러닝의 학습 알고리즘
092 인간 뇌를 모방한 신경망과 딥 러닝
093 인공지능과 사람이 쓴 시를 구별할 수 있을까?
094 요약
095 숨길 게 없다면 괜찮을까?
096 둘이서만 공유하는 비밀 키 암호 기법
097 공개 키 암호 기법과 닫힌 자물쇠
098 인터넷에 흔적을 남기지 않고 거래할 수 있을까?
099 요약
100 사람은 빠르게 변하지 않는다
용어 해설
옮긴이의 글
찾아보기
펼쳐보기
접어보기',
        '복잡한 IT 세상을 선명하게 읽는 디지털 문해력 기르기 챌린지. 컴퓨팅의 4가지 핵심 분야인 하드웨어, 소프트웨어, 통신, 데이터를 이해하면 어떤 복잡한 디지털 시스템이라도 잘게 쪼개 비즈니스 구조와 흐름을 파악하는 디지털 문해력을 기를 수 있다.',
        '인사이트', '2022-01-04', 20000, 18000, 1, 'https://image.aladin.co.kr/product/28554/54/cover/8966263305_2.jpg',
        10),
       ('9791187370949', 'K382531391', 'Do it! 쉽게 배우는 R 데이터 분석 - 데이터 분석 프로젝트 전 과정 수록!', '목차
첫째마당 R이랑 친해지기
01 안녕, R?
01-1 R이 뭔가요? - R 이해하기
01-2 R이 강력한 이유
02 R 데이터 분석 환경 만들기
02-1 R과 R 스튜디오 설치하기
02-2 R 스튜디오와 친숙해지기
02-3 프로젝트 만들기
02-4 유용한 환경 설정
03 데이터 분석을 위한 연장 챙기기
03-1 변하는 수, ‘변수’ 이해하기
03-2 마술 상자 같은 ‘함수’ 이해하기
03-3 함수 꾸러미, ‘패키지’ 이해하기
둘째마당 본격 실습! 데이터 갖고 놀기
04 데이터 프레임의 세계로!
04-1 데이터는 어떻게 생겼나? - 데이터 프레임 이해하기
04-2 데이터 프레임 만들기 - 시험 성적 데이터를 만들어 보자!
04-3 외부 데이터 이용하기 - 축적된 시험 성적 데이터를 불러오자!
[정리하기]
05 데이터 분석 기초! - 데이터 파악하기, 다루기 쉽게 수정하기
05-1 데이터 파악하기
05-2 변수명 바꾸기
05-3 파생변수 만들기
[정리하기]
[분석 도전!]
06 자유자재로 데이터 가공하기
06-1 데이터 전처리 - 원하는 형태로 데이터 가공하기
06-2 조건에 맞는 데이터만 추출하기
06-3 필요한 변수만 추출하기
06-4 순서대로 정렬하기
06-5 파생변수 추가하기
06-6 집단별로 요약하기
06-7 데이터 합치기
[정리하기]
[분석 도전!]
07 데이터 정제 - 빠진 데이터, 이상한 데이터 제거하기
07-1 빠진 데이터를 찾아라! - 결측치 정제하기
07-2 이상한 데이터를 찾아라! - 이상치 정제하기
[정리하기]
08 그래프 만들기
08-1 R로 만들 수 있는 그래프 살펴보기
08-2 산점도 - 변수 간 관계 표현하기
08-3 막대 그래프 - 집단 간 차이 표현하기
08-4 선 그래프 - 시간에 따라 달라지는 데이터 표현하기
08-5 상자 그림 - 집단 간 분포 차이 표현하기
[정리하기]
[꿀팁 01] 초보자가 자주 하는 실수
[꿀팁 02] 에러 메시지 이해하기
셋째마당 실전! 데이터 분석 프로젝트
09 데이터 분석 프로젝트 - ‘한국인의 삶을 파악하라!’
09-1 ‘한국복지패널데이터’ 분석 준비하기
09-2 성별에 따른 월급 차이 - “성별에 따라 월급이 다를까?”
09-3 나이와 월급의 관계 - “몇 살 때 월급을 가장 많이 받을까?”
09-4 연령대에 따른 월급 차이 - “어떤 연령대의 월급이 가장 많을까?”
09-5 연령대 및 성별 월급 차이 - “성별 월급 차이는 연령대별로 다를까?”
09-6 직업별 월급 차이 - “어떤 직업이 월급을 가장 많이 받을까?”
09-7 성별 직업 빈도 - “성별로 어떤 직업이 가장 많을까?”
09-8 종교 유무에 따른 이혼율 - “종교가 있는 사람들이 이혼을 덜 할까?”
09-9 지역별 연령대 비율 - “노년층이 많은 지역은 어디일까?”
넷째마당 R로 하는 다양한 데이터 분석의 세계
10 텍스트 마이닝
10-1 힙합 가사 텍스트 마이닝
10-2 국정원 트윗 텍스트 마이닝
11 지도 시각화
11-1 미국 주별 강력 범죄율 단계 구분도 만들기
11-2 대한민국 시도별 인구, 결핵 환자 수 단계 구분도 만들기
12 인터랙티브 그래프
12-1 plotly 패키지로 인터랙티브 그래프 만들기
12-2 dygraphs 패키지로 인터랙티브 시계열 그래프 만들기
13 통계 분석 기법을 이용한 가설 검정
13-1 통계적 가설 검정이란?
13-2 t 검정 - 두 집단의 평균 비교
13-3 상관분석 - 두 변수의 관계성 분석
14 R Markdown으로 데이터 분석 보고서 만들기
14-1 신뢰할 수 있는 데이터 분석 보고서 만들기
14-2 R 마크다운 문서 만들기
15 R 내장 함수, 변수 타입과 데이터 구조
15-1 R 내장 함수로 데이터 추출하기
15-2 변수 타입
15-3 데이터 구조
[정리하기]
16 데이터 분석 기술을 효율적으로 익히는 방법
15-1 집중할 방향 정하기
15-2 데이터 분석 기술을 효율적으로 익히는 방법
15-3 오픈 소스 생태계와 어울리기
정답
찾아보기
펼쳐보기
접어보기',
        'Do it 시리즈. 통계 분석은 물론, 소셜 네트워크 서비스의 글을 분석할 수 있는 텍스트 마이닝, 지역별 특성을 표현할 수 있는 지도 시각화, 이용자가 원하는 결괏값을 실시간으로 보여주는 인터랙티브 그래프 등 최근 주목받고 있는 데이터 분석 기법들을 소개한다.',
        '이지스퍼블리싱', '2017-07-20', 20000, 18000, 1, 'https://image.aladin.co.kr/product/11350/91/cover/k382531391_1.jpg',
        10),
       ('9791158392703', 'K712734689', 'Real MySQL 8.0 1권 - 개발자와 DBA를 위한 MySQL 실전 가이드', '목차
▣ 01장: 소개
1.1 MySQL 소개
1.2 왜 MySQL인가?
▣ 02장: 설치와 설정
2.1 MySQL 서버 설치
___2.1.1 버전과 에디션(엔터프라이즈와 커뮤니티) 선택
___2.1.2 MySQL 설치
2.2 MySQL 서버의 시작과 종료
___2.2.1 설정 파일 및 데이터 파일 준비
___2.2.2 시작과 종료
___2.2.3 서버 연결 테스트
2.3 MySQL 서버 업그레이드
___2.3.1 인플레이스 업그레이드 제약 사항
___2.3.2 MySQL 8.0 업그레이드 시 고려 사항
___2.3.3 MySQL 8.0 업그레이드
2.4 서버 설정
___2.4.1 설정 파일의 구성
___2.4.2 MySQL 시스템 변수의 특징
___2.4.3 글로벌 변수와 세션 변수
___2.4.4 정적 변수와 동적 변수
___2.4.5 SET PERSIST
___2.4.6 my.cnf 파일
▣ 03장: 사용자 및 권한
3.1 사용자 식별
3.2 사용자 계정 관리
___3.2.1 시스템 계정과 일반 계정
___3.2.2 계정 생성
3.3 비밀번호 관리
___3.3.1 고수준 비밀번호
___3.3.2 이중 비밀번호
3.4 권한(Privilege)
3.5 역할(Role)
▣ 04장: 아키텍처
4.1 MySQL 엔진 아키텍처
___4.1.1 MySQL의 전체 구조
___4.1.2 MySQL 스레딩 구조
___4.1.3 메모리 할당 및 사용 구조
___4.1.4 플러그인 스토리지 엔진 모델
___4.1.5 컴포넌트
___4.1.6 쿼리 실행 구조
___4.1.7 복제
___4.1.8 쿼리 캐시
___4.1.9 스레드 풀
___4.1.10 트랜잭션 지원 메타데이터
4.2 InnoDB 스토리지 엔진 아키텍처
___4.2.1 프라이머리 키에 의한 클러스터링
___4.2.2 외래 키 지원
___4.2.3 MVCC(Multi Version Concurrency Control)
___4.2.4 잠금 없는 일관된 읽기(Non-Locking Consistent Read)
___4.2.5 자동 데드락 감지
___4.2.6 자동화된 장애 복구
___4.2.7 InnoDB 버퍼 풀
___4.2.8 Double Write Buffer
___4.2.9 언두 로그
___4.2.10 체인지 버퍼
___4.2.11 리두 로그 및 로그 버퍼
___4.2.12 어댑티브 해시 인덱스
___4.2.13 InnoDB와 MyISAM, MEMORY 스토리지 엔진 비교
4.3 MyISAM 스토리지 엔진 아키텍처
___4.3.1 키 캐시
___4.3.2 운영체제의 캐시 및 버퍼
___4.3.3 데이터 파일과 프라이머리 키(인덱스) 구조
4.4 MySQL 로그 파일
___4.4.1 에러 로그 파일
___4.4.2 제너럴 쿼리 로그 파일(제너럴 로그 파일, General log)
___4.4.3 슬로우 쿼리 로그
▣ 05장: 트랜잭션과 잠금
5.1 트랜잭션
___5.1.1 MySQL에서의 트랜잭션
___5.1.2 주의사항
5.2 MySQL 엔진의 잠금
___5.2.1 글로벌 락
___5.2.2 테이블 락
___5.2.3 네임드 락
___5.2.4 메타데이터 락
5.3 InnoDB 스토리지 엔진 잠금
___5.3.1 InnoDB 스토리지 엔진의 잠금
___5.3.2 인덱스와 잠금
___5.3.3 레코드 수준의 잠금 확인 및 해제
5.4 MySQL의 격리 수준
___5.4.1 READ UNCOMMITTED
___5.4.2 READ COMMITTED
___5.4.3 REPEATABLE READ
___5.4.4 SERIALIZABLE
▣ 06장: 데이터 압축
6.1 페이지 압축
6.2 테이블 압축
___6.2.1 압축 테이블 생성
___6.2.2 KEY_BLOCK_SIZE 결정
___6.2.3 압축된 페이지의 버퍼 풀 적재 및 사용
___6.2.4 테이블 압축 관련 설정
▣ 07장: 데이터 암호화
7.1 MySQL 서버의 데이터 암호화
___7.1.1 2단계 키 관리
___7.1.2 암호화와 성능
___7.1.3 암호화와 복제
7.2 keyring_file 플러그인 설치
7.3 테이블 암호화
___7.3.1 테이블 생성
___7.3.2 응용 프로그램 암호화와의 비교
___7.3.3 테이블스페이스 이동
7.4 언두 로그 및 리두 로그 암호화
7.5 바이너리 로그 암호화
___7.5.1 바이너리 로그 암호화 키 관리
___7.5.2 바이너리 로그 암호화 키 변경
___7.5.3 mysqlbinlog 도구 활용
▣ 08장: 인덱스
8.1 디스크 읽기 방식
___8.1.1 하드 디스크 드라이브(HDD)와 솔리드 스테이트 드라이브(SSD)
___8.1.2 랜덤 I/O와 순차 I/O
8.2 인덱스란?
8.3 B-Tree 인덱스
___8.3.1 구조 및 특성
___8.3.2 B-Tree 인덱스 키 추가 및 삭제
___8.3.3 B-Tree 인덱스 사용에 영향을 미치는 요소
___8.3.4 B-Tree 인덱스를 통한 데이터 읽기
___8.3.5 다중 칼럼(Multi-column) 인덱스
___8.3.6 B-Tree 인덱스의 정렬 및 스캔 방향
___8.3.7 B-Tree 인덱스의 가용성과 효율성
8.4 R-Tree 인덱스
___8.4.1 구조 및 특성
___8.4.2 R-Tree 인덱스의 용도
8.5 전문 검색 인덱스
___8.5.1 인덱스 알고리즘
___8.5.2 전문 검색 인덱스의 가용성
8.6 함수 기반 인덱스
___8.6.1 가상 칼럼을 이용한 인덱스
___8.6.2 함수를 이용한 인덱스
8.7 멀티 밸류 인덱스
8.8 클러스터링 인덱스
___8.8.1 클러스터링 인덱스
___8.8.2 세컨더리 인덱스에 미치는 영향
___8.8.3 클러스터링 인덱스의 장점과 단점
___8.8.4 클러스터링 테이블 사용 시 주의사항
8.9 유니크 인덱스
___8.9.1 유니크 인덱스와 일반 세컨더리 인덱스의 비교
___8.9.2 유니크 인덱스 사용 시 주의사항
8.10 외래키
___8.10.1 자식 테이블의 변경이 대기하는 경우
___8.10.2 부모 테이블의 변경 작업이 대기하는 경우
▣ 09장: 옵티마이저와 힌트
9.1 개요
___9.1.1 쿼리 실행 절차
___9.1.2 옵티마이저의 종류
9.2 기본 데이터 처리
___9.2.1 풀 테이블 스캔과 풀 인덱스 스캔
___9.2.2 병렬 처리
___9.2.3 ORDER BY 처리(Using filesort)
___9.2.4 GROUP BY 처리
___9.2.5 DISTINCT 처리
___9.2.6 내부 임시 테이블 활용
9.3 고급 최적화
___9.3.1 옵티마이저 스위치 옵션
___9.3.2 조인 최적화 알고리즘
9.4 쿼리 힌트
___9.4.1 인덱스 힌트
___9.4.2 옵티마이저 힌트
▣ 10장: 실행 계획
10.1 통계 정보
___10.1.1 테이블 및 인덱스 통계 정보
___10.1.2 히스토그램
___10.1.3 코스트 모델(Cost Model)
10.2 실행 계획 확인
___10.2.1 실행 계획 출력 포맷
___10.2.2 쿼리의 실행 시간 확인
10.3 실행 계획 분석
___10.3.1 id 칼럼
___10.3.2 select_type 칼럼
___10.3.3 table 칼럼
___10.3.4 partitions 칼럼
___10.3.5 type 칼럼
___10.3.6 possible_keys 칼럼
___10.3.7 key 칼럼
___10.3.8 key_len 칼럼
___10.3.9 ref 칼럼
___10.3.10 rows 칼럼
___10.3.11 filtered 칼럼
___10.3.12 Extra 칼럼
펼쳐보기
접어보기',
        '《Real MySQL》을 정제해서 꼭 필요한 내용으로 압축하고, MySQL 8.0의 GTID와 InnoDB 클러스터 기능들과 소프트웨어 업계 트렌드를 반영한 GIS 및 전문 검색 등의 확장 기능들을 추가로 수록했다.',
        '위키북스', '2021-09-08', 30000, 27000, 1, 'https://image.aladin.co.kr/product/27848/87/cover/k712734689_1.jpg',
        10),
       ('9791158393229', 'K212837700', '파이썬 머신러닝 완벽 가이드 - 다양한 캐글 예제와 함께 기초 알고리즘부터 최신 기법까지 배우는, 개정2판', '목차
1장: 파이썬 기반의 머신러닝과 생태계 이해
01. 머신러닝의 개념
___머신러닝의 분류
___데이터 전쟁
___파이썬과 R 기반의 머신러닝 비교
02. 파이썬 머신러닝 생태계를 구성하는 주요 패키지
___파이썬 머신러닝을 위한 S/W 설치
03. 넘파이
___넘파이 ndarray 개요
___ndarray의 데이터 타입
___ndarray를 편리하게 생성하기 - arange, zeros, ones
___ndarray의 차원과 크기를 변경하는 reshape( )
___넘파이의 ndarray의 데이터 세트 선택하기 - 인덱싱(Indexing)
___행렬의 정렬 - sort( )와 argsort( )
___선형대수 연산 - 행렬 내적과 전치 행렬 구하기
04. 데이터 핸들링 - 판다스
___판다스 시작 - 파일을 DataFrame으로 로딩, 기본 API
___DataFrame과 리스트, 딕셔너리, 넘파이 ndarray 상호 변환
___DataFrame의 칼럼 데이터 세트 생성과 수정
___DataFrame 데이터 삭제
___Index 객체
___데이터 셀렉션 및 필터링
___정렬, Aggregation 함수, GroupBy 적용
___결손 데이터 처리하기
___apply lambda 식으로 데이터 가공
05. 정리
2장: 사이킷런으로 시작하는 머신러닝
01. 사이킷런 소개와 특징
02. 첫 번째 머신러닝 만들어 보기 - 붓꽃 품종 예측하기
03. 사이킷런의 기반 프레임워크 익히기
___Estimator 이해 및 fit( ), predict( ) 메서드
___사이킷런의 주요 모듈
___내장된 예제 데이터 세트
04. Model Selection 모듈 소개
___학습/테스트 데이터 세트 분리 - train_test_split()
___교차 검증
___GridSearchCV - 교차 검증과 최적 하이퍼 파라미터 튜닝을 한 번에 111
05. 데이터 전처리
___데이터 인코딩
___피처 스케일링과 정규화
___StandardScaler
___MinMaxScaler
___학습 데이터와 테스트 데이터의 스케일링 변환 시 유의점
06. 사이킷런으로 수행하는 타이타닉 생존자 예측
07. 정리
3장: 평가
01. 정확도(Accuracy)
02. 오차 행렬
03. 정밀도와 재현율
___정밀도/재현율 트레이드오프
___정밀도와 재현율의 맹점
04. F1 스코어
05. ROC 곡선과 AUC
06. 피마 인디언 당뇨병 예측
07. 정리
4장: 분류
01. 분류(Classification)의 개요
02. 결정 트리
___결정 트리 모델의 특징
___결정 트리 파라미터
___결정 트리 모델의 시각화
___결정 트리 과적합(Overfitting)
___결정 트리 실습 - 사용자 행동 인식 데이터 세트
03. 앙상블 학습
___앙상블 학습 개요
___보팅 유형 - 하드 보팅(Hard Voting)과 소프트 보팅(Soft Voting)
___보팅 분류기(Voting Classifier)
04. 랜덤 포레스트
___랜덤 포레스트의 개요 및 실습
___랜덤 포레스트 하이퍼 파라미터 및 튜닝
___GBM의 개요 및 실습
05. GBM(Gradient Boosting Machine)
___GBM 하이퍼 파라미터 소개
___XGBoost 개요
06. XGBoost(eXtra Gradient Boost)
___XGBoost 설치하기
___파이썬 래퍼 XGBoost 하이퍼 파라미터
___파이썬 래퍼 XGBoost 적용 - 위스콘신 유방암 예측
___사이킷런 래퍼 XGBoost의 개요 및 적용
07. LightGBM
___LightGBM 설치
___LightGBM 하이퍼 파라미터
___하이퍼 파라미터 튜닝 방안
___파이썬 래퍼 LightGBM과 사이킷런 래퍼 XGBoost,
___LightGBM 하이퍼 파라미터 비교
___LightGBM 적용 - 위스콘신 유방암 예측
08. 베이지안 최적화 기반의 HyperOpt를 이용한 하이퍼 파라미터 튜닝
___베이지안 최적화 개요
___HyperOpt 사용하기
___HyperOpt를 이용한 XGBoost 하이퍼 파라미터 최적화
09. 분류 실습 - 캐글 산탄데르 고객 만족 예측
___데이터 전처리
___XGBoost 모델 학습과 하이퍼 파라미터 튜닝
___LightGBM 모델 학습과 하이퍼 파라미터 튜닝
10. 분류 실습 - 캐글 신용카드 사기 검출
___언더 샘플링과 오버 샘플링의 이해
___데이터 일차 가공 및 모델 학습/예측/평가
___데이터 분포도 변환 후 모델 학습/예측/평가
___이상치 데이터 제거 후 모델 학습/예측/평가
___SMOTE 오버 샘플링 적용 후 모델 학습/예측/평가
11. 스태킹 앙상블
___기본 스태킹 모델
___CV 세트 기반의 스태킹
12. 정리
5장: 회귀
01. 회귀 소개
02. 단순 선형 회귀를 통한 회귀 이해
03. 비용 최소화하기 - 경사 하강법(Gradient Descent) 소개
04. 사이킷런 LinearRegression을 이용한 보스턴 주택 가격 예측
___LinearRegression 클래스 - Ordinary Least Squares
___회귀 평가 지표
___LinearRegression을 이용해 보스턴 주택 가격 회귀 구현
05. 다항 회귀와 과(대)적합/과소적합 이해
___다항 회귀 이해
___다항 회귀를 이용한 과소적합 및 과적합 이해
___편향-분산 트레이드오프(Bias-Variance Trade off)
06. 규제 선형 모델 - 릿지, 라쏘, 엘라스틱넷
___규제 선형 모델의 개요
___릿지 회귀
___라쏘 회귀
___엘라스틱넷 회귀
___선형 회귀 모델을 위한 데이터 변환
07. 로지스틱 회귀
08. 회귀 트리
09. 회귀 실습 - 자전거 대여 수요 예측
___데이터 클렌징 및 가공과 데이터 시각화
___로그 변환, 피처 인코딩과 모델 학습/예측/평가
10. 회귀 실습 - 캐글 주택 가격: 고급 회귀 기법
___데이터 사전 처리(Preprocessing)
___선형 회귀 모델 학습/예측/평가
___회귀 트리 모델 학습/예측/평가
___회귀 모델의 예측 결과 혼합을 통한 최종 예측
___스태킹 앙상블 모델을 통한 회귀 예측
11. 정리
6장: 차원 축소
01. 차원 축소(Dimension Reduction) 개요
02. PCA(Principal Component Analysis)
___PCA 개요
03. LDA(Linear Discriminant Analysis)
___LDA 개요
04. SVD(Singular Value Decomposition)
___SVD 개요
___사이킷런 TruncatedSVD 클래스를 이용한 변환
05. NMF(Non-Negative Matrix Factorization)
___NMF 개요
06. 정리
7장: 군집화
01. K-평균 알고리즘 이해
___사이킷런 KMeans 클래스 소개
___K-평균을 이용한 붓꽃 데이터 세트 군집화
___군집화 알고리즘 테스트를 위한 데이터 생성
02. 군집 평가(Cluster Evaluation)
___실루엣 분석의 개요
___붓꽃 데이터 세트를 이용한 군집 평가
___군집별 평균 실루엣 계수의 시각화를 통한 군집 개수 최적화 방법
03. 평균 이동
___평균 이동(Mean Shift)의 개요
04. GMM(Gaussian Mixture Model)
___GMM(Gaussian Mixture Model) 소개
___GMM을 이용한 붓꽃 데이터 세트 군집화
___GMM과 K-평균의 비교
05. DBSCAN
___DBSCAN 개요
___DBSCAN 적용하기 - 붓꽃 데이터 세트
___DBSCAN 적용하기 - make_circles( ) 데이터 세트
06. 군집화 실습 - 고객 세그먼테이션
___고객 세그먼테이션의 정의와 기법
___데이터 세트 로딩과 데이터 클렌징
___RFM 기반 데이터 가공
___RFM 기반 고객 세그먼테이션
07. 정리
8장 텍스트 분석
___NLP이냐 텍스트 분석이냐?
01. 텍스트 분석 이해
___텍스트 분석 수행 프로세스
___파이썬 기반의 NLP, 텍스트 분석 패키지
02. 텍스트 사전 준비 작업(텍스트 전처리) - 텍스트 정규화
___클렌징
___텍스트 토큰화
___스톱 워드 제거
___Stemming과 Lemmatization
03. Bag of Words - BOW
___BOW 피처 벡터화
___사이킷런의 Count 및 TF-IDF 벡터화 구현: CountVectorizer, TfidfVectorizer
___BOW 벡터화를 위한 희소 행렬
___희소 행렬 - COO 형식
___희소 행렬 - CSR 형식
04. 텍스트 분류 실습 - 20 뉴스그룹 분류
___텍스트 정규화
___피처 벡터화 변환과 머신러닝 모델 학습/예측/평가
___사이킷런 파이프라인(Pipeline) 사용 및 GridSearchCV와의 결합
05. 감성 분석
___감성 분석 소개
___지도학습 기반 감성 분석 실습 - IMDB 영화평
___비지도학습 기반 감성 분석 소개
___SentiWordNet을 이용한 감성 분석
___VADER를 이용한 감성 분석
06. 토픽 모델링(Topic Modeling) - 20 뉴스그룹
07. 문서 군집화 소개와 실습(Opinion Review 데이터 세트)
___문서 군집화 개념
___Opinion Review 데이터 세트를 이용한 문서 군집화 수행하기
___군집별 핵심 단어 추출하기
08. 문서 유사도
___문서 유사도 측정 방법 - 코사인 유사도
___두 벡터 사잇각
___Opinion Review 데이터 세트를 이용한 문서 유사도 측정
09. 한글 텍스트 처리 - 네이버 영화 평점 감성 분석
___한글 NLP 처리의 어려움
___KoNLPy 소개
___데이터 로딩
10. 텍스트 분석 실습 - 캐글 Mercari Price Suggestion Challenge
___데이터 전처리
___피처 인코딩과 피처 벡터화
___릿지 회귀 모델 구축 및 평가
___LightGBM 회귀 모델 구축과 앙상블을 이용한 최종 예측 평가
11. 정리
9장: 추천 시스템
01. 추천 시스템의 개요와 배경
___추천 시스템의 개요
___온라인 스토어의 필수 요소, 추천 시스템
___추천 시스템의 유형
02. 콘텐츠 기반 필터링 추천 시스템
03. 최근접 이웃 협업 필터링
04. 잠재 요인 협업 필터링
___잠재 요인 협업 필터링의 이해
___행렬 분해의 이해
___확률적 경사 하강법을 이용한 행렬 분해
05. 콘텐츠 기반 필터링 실습 - TMDB 5000 영화 데이터 세트
___장르 속성을 이용한 영화 콘텐츠 기반 필터링
___데이터 로딩 및 가공
___장르 콘텐츠 유사도 측정
___장르 콘텐츠 필터링을 이용한 영화 추천
06. 아이템 기반 최근접 이웃 협업 필터링 실습
___데이터 가공 및 변환
___영화 간 유사도 산출
___아이템 기반 최근접 이웃 협업 필터링으로 개인화된 영화 추천
07. 행렬 분해를 이용한 잠재 요인 협업 필터링 실습
___Surprise 패키지 소개
08. 파이썬 추천 시스템 패키지 - Surprise
___Surprise를 이용한 추천 시스템 구축
___Surprise 주요 모듈 소개
___Surprise 추천 알고리즘 클래스
___베이스라인 평점
___교차 검증과 하이퍼 파라미터 튜닝
___Surprise를 이용한 개인화 영화 추천 시스템 구축
09. 정리
10장: 시각화
01. 시각화를 시작하며 - 맷플롯립과 시본 개요
02. 맷플롯립(Matplotlib)
___맷플롯립의 pyplot 모듈의 이해
___pyplot의 두 가지 중요 요소 - Figure와 Axes 이해
___Figure와 Axis의 활용
___여러 개의 plot을 가지는 subplot들을 생성하기
___pyplot의 plot( ) 함수를 이용해 선 그래프 그리기
___축 명칭 설정, 축의 눈금(틱)값 회전, 범례(legend) 설정하기
___여러 개의 subplots들을 이용해 개별 그래프들을 subplot별로 시각화하기
03. 시본(Seaborn)
___시각화를 위한 차트/그래프 유형
___정보의 종류에 따른 시각화 차트 유형
___히스토그램(Histogram)
___카운트 플롯
___바 플롯(barplot)
___barplot( ) 함수의 hue 인자를 사용하여 시각화 정보를 추가적으로 세분화하기
___박스 플롯
___바이올린 플롯
___subplots를 이용하여 시본의 다양한 그래프를 시각화
___산점도, 스캐터 플롯(Scatter Plot)
___상관 히트맵(Correlation Heatmap)
04. 정리
펼쳐보기
접어보기',
        '이론 위주의 머신러닝 책에서 탈피해, 다양한 실전 예제를 직접 구현해 보면서 머신러닝을 체득할 수 있도록 만들었다. 캐글과 UCI 머신러닝 리포지토리에서 난이도가 있는 실습 데이터를 기반으로 실전 예제를 구성했고, 최신 알고리즘과 기법을 상세하게 설명했다.',
        '위키북스', '2022-04-21', 40000, 36000, 1, 'https://image.aladin.co.kr/product/29260/15/cover/k212837700_1.jpg',
        10),
       ('9791156646341', 'K492831586', '쉽게 배우는 운영체제 - 제2판', '목차
Part 01 운영체제와 컴퓨터
Chapter 01 운영체제의 개요
01 운영체제 소개
02 운영체제의 발전
03 운영체제의 구성
04 심화학습 운영체제의 더 깊은 역사
요약 / 연습문제
Chapter 02 컴퓨터의 구조와 성능 향상
01 컴퓨터의 기본 구성
02 CPU와 메모리
03 컴퓨터 성능 향상 기술
04 멀티 프로세싱
요약 / 연습문제
Part 02 프로세스 관리
Chapter 03 프로세스와 스레드
01 프로세스의 개요
02 프로세스 제어 블록과 문맥 교환
03 프로세스의 연산
04 스레드
05 심화학습 동적 할당 영역과 시스템 호출
요약 / 연습문제
Chapter 04 CPU 스케줄링
01 스케줄링의 개요
02 스케줄링 시 고려 사항
03 다중 큐
04 스케줄링 알고리즘
05 심화학습 인터럽트 처리
요약 / 연습문제
Chapter 05 프로세스 동기화
01 프로세스 간 통신
02 공유 자원과 임계구역
03 임계구역 문제 해결 방법
04 심화학습 파일, 파이프, 소켓 프로그래밍
요약 / 연습문제
Chapter 06 교착 상태
01 교착 상태의 개요
02 교착 상태 필요조건
03 교착 상태 해결 방법
요약 / 연습문제
Part 03 메모리 관리
Chapter 07 물리 메모리 관리
01 메모리 관리의 개요
02 메모리 주소
03 단일 프로그래밍 환경의 메모리 할당
04 다중 프로그래밍 환경의 메모리 할당
05 심화학습 분할 컴파일과 메모리 관리
요약 / 연습문제
Chapter 08 가상 메모리의 기초
01 가상 메모리의 개요
02 페이징 기법
03 세그먼테이션 기법
04 심화학습 캐시 매핑 기법
요약 / 연습문제
Chapter 09 가상 메모리 관리
01 요구 페이징
02 페이지 교체 알고리즘
03 스레싱과 프레임 할당
요약 / 연습문제
Part 04 저장장치 관리
Chapter 10 입출력 시스템과 저장장치
01 입출력 시스템
02 저장장치
03 디스크 스케줄링
04 RAID
05 심화학습 하드웨어의 규격과 발전
요약 / 연습문제
Chapter 11 파일 시스템
01 파일과 파일 시스템
02 디렉터리의 구조
03 디스크 파일 할당
04 심화학습 유닉스 파일의 특징
요약 / 연습문제
Part 05 분산 시스템
Chapter 12 네트워크와 분산 시스템
01 네트워크와 인터넷
02 분산 시스템
요약 / 연습문제
주요 용어 정리
펼쳐보기
접어보기',
        '복잡하고 어려운 운영체제의 구조와 원리를 ''요리사 모형에'' 빗대어 이야기하듯 쉽게 풀어낸 교재다. 다양한 그림과 표로 개념 간의 관계를 명확하게 정리할 수 있고 주요 용어는 사전 형식으로 정리하여 쉽게 찾아볼 수 있다.',
        '한빛아카데미(교재)', '2023-01-30', 32000, 32000, 1,
        'https://image.aladin.co.kr/product/30913/79/cover/k492831586_1.jpg', 10),
       ('9791198325723', 'K382935888', '생성형 AI 빅3 챗GPT, 미드저니, 스테이블 디퓨전 - 알수록 진짜 돈 되는 기술 왕초보도 가능한 오리지널 사용법', '목차
프롤로그
추천사
학습자료 활용법
PART 01 챗GPT 시작하기 (입문 편)
001. 도대 챗GPT가 뭐길래 이렇게 난리들인 거니?
무작위로 뽑은 챗GPT를 활용할 수 있는 66가지 직업들
002. 딥러닝과 머신러닝 이건 꼭 짚고 넘어가자
데이터를 분석하여 판단하는 머신러닝
스스로 학습하여 판단하는 딥러닝
생성형 AI의 학습법
003. 도대 챗GPT로 뭘 할 수 있는 거니?
004. 도대 챗GPT는 누가 만들었니?
005. 챗GPT의 끝없는 진화
챗GPT-3.0
챗GPT-4.0
006. 구글로 검색하는 시대는 끝났다?
구글과 같은 검색 엔진 플랫폼의 진화는 어떨까?
007. 챗GPT 무작정 시작하기
챗GPT 사용을 위한 오픈AI에서 계정 만들기
팁 : 스마트폰에서 챗GPT로 들어갈 때 지문 인식 메시지가 뜬다면?
팁 : 스마트폰에서도 사용이 가능해진 챗GPT
첫 채팅 시작하기
- 챗GPT 제대로 사용하기 (답변 정확도 높이기)ⅰ
- 챗GPT 제대로 사용하기 (답변 정확도 높이기)ⅱ
- 챗GPT 제대로 사용하기 (답변 정확도 높이기)ⅲ
더 완벽한 답변을 얻기 위한 스킬들
원하는 문체 유형으로 답변 얻기
팁 : 답변에 대한 오류는 왜 생기나?
팁 : 생성형 인공지능에서 RLHF란?
008. 챗GPT 답변 속도 및 만족도 높이기
챗GPT 3.5에서 4.0으로 갈아타기
팁 : 정기 구독(결제) 해지하는 방법
009. 카카오톡 속 챗GPT는 신의 한 수
아숙업(AskUp) 사용해 보기
- 이미지에 포함된 텍스트 인식하기
- 번역하기
- 맞춤법 검사하기
- 인물사진 보정하기
010. 마이크로소프트의 빙(Bing)에서 사용되는 챗GPT
빙(Bing) 계정 생성 및 질문(채팅)하기
011. 최신 정보까지 찾아주는 챗GPT 만들기
WebChatGPT 활용하기
팁 : 확장 프로그램 삭제 또는 잠그기
012. 한 단계 진화된 더 무서운 놈, Auto-GPT
Agent GPT를 활용한 오토-GPT
팁 : 오픈AI의 API란?
팁 : 토큰(Token)이란?
013. 챗GPT 자동 번역기로 영문 프롬프트 작성하기
014. 챗GPT 고급 사용자가 쓰는 7가지 프롬프트 작성법
팁 : Chat history & training을 통해 스스로 진화하는 챗GPT
PART 02 챗GPT 활용하기 (고급 편)
015. 창의적이고 세련된 글짓기를 위한 챗GPT
016. 챗GPT로 블로그 글 30초 만에 완성하기
블로그 글 주제 선정하기
팁 : 표절 검사하기
블로그 글 유입을 위한 해시태그 및 키워드 선정하기
메타 디스크립션 작성하기
관련 이미지 삽입하기
- 저작권 문제가 없는 무료 이미지 사용하기
- AI로 생성된 유니크한 이미지 사용하기
블로그 글 제목짓기
최종 포스팅하기
017. 챗GPT를 활용하여 웹소설 작가로 등단하기
아이디어 생성하기
플롯 구성하기
캐릭터 개발하기
글쓰기 스타일 제안하기
웹소설 쓰기
교정 및 수정하기
최종 검토 및 작품 게시하기
018. 넷플릭스 영화 시나리오(극본) 작가 도전하기
시나리오를 쓰기 위한 7가지 필수 요소
시나리오 개요 잡기
팁 : 유명 작가의 문체로 작문이 가능하나?
별책부록 : 진짜 작가로 먹고 사는 법
019. 10분이면 나도 낭만의 에세이스트
팁 : 문장을 늘려주는 가장 좋은 방법
020. 챗GPT를 만나면 누구나 아르튀르 랭보가 된다
팁 : SNS 글도 답변도 챗GPT로 하면 "좋아요" 받는다?
021. 전문 서적 작가가 되기 위한 글쓰기 (전자책 출간)
기획 및 목차 만들기
- 목차 만들기 (목차 완성은 곧 책을 반은 쓴 것)
- 교정, 교열, 윤문 작업하기
돈 안 드는 전자출판으로 출간하기
팁 : 마이크로소프트 편집기를 활용한 맞춤법 검사
별책부록 : 연 매출 3억 1인 출판사 만들기
022. 왕초보도 가능한 챗GPT 엑셀 활용법
학교 평균 점수표로 만들고 매개변수 만들기
쇼핑몰에서 고객 구매 명세서 작성하기
023. 수학자도 풀기 어려운 수학 문제도 3초면 뚝딱
024. 한 번에 통과하는 프레젠테이션(PPT) 만들기
챗GPT를 활용한 프레젠테이션 작성하기
슬라이드 쇼 제작을 위한 구글 슬라이드 활용하기
별책부록 : PPT 활용 월 300 벌기
025. PDF 전자 계약서 1분 만에 뚝딱
PDF 파일로 전환한 후 전자서명 받기
026. 악보 없이 프롬프트 하나로 작곡하기
챗GPT로 영감 얻고, 뮤버트로 작곡하기
별책부록 : 음원 저작권으로 수익화 하는 법
027. 챗GPT 영어 회화, 3일이면 영어가 들린다
Talk-to-ChatGPT를 활용한 영어 회화
Voice control for ChatGPT를 활용한 영어 회화
028. 유튜브를 위한 챗GPT 미친 활용법
챗GPT와 픽토리를 활용한 3분 만에 동영상 만들기
챗GPT 플러그인으로 1분 만에 유튜브 동영상 번역(요약)하기
팁 : 챗GPT UI 밝기 설정과 채팅 목록 지우기
텍스트를 멋진 성우 음성으로 변환하기 (유튜브 내레이션)
별책부록 : 상위 10% 유튜버 천재 되기
029. 상위 1% 챗GPT 플러그인의 활용 (베타 피처스)
커스텀 인스트럭션과 코드 인터프리터의 활용
- 커스텀 인스트럭션(Custom instructions) 활용하기_역할 부여
- 코드 인터프리터(Code interpreter) 활용하기_코드 해석
게임 만들기_PC 자동 종료
엑셀 데이터 분석 및 그래프 만들기
PDF 파일 내용 분석하기
이미지를 아스키 아트로 변환하기
팁 : 파일 형식 변환하기 (만능 재주꾼 코드 인터프리터)
벌거벗겨진 PDF 파일 (AskYourPDF 활용하기)
그밖에 85가지 챗GPT 플러그인 살펴보기
팁 : 문장 정렬 그리고 수정 작업에 대하여
030. 기획서와 보고서? 이건 식은 죽 먹기 아니겠니?
031. 챗GPT 활용 직무수행 계획서 10분 만에 끝내기
032. 팀장님도 모르는 장대리의 업무보고서 작성법
033. 결코 흔하지 않은 리포트 & 논문 작성법
034. 아주 특별한 자소서(자기소개서) 쓰기
팁 : AI에서 생성된 콘텐츠 저작권에 대하여
035. 챗GPT를 활용한 돈 벌 기회 만들기
암호화폐, 메타버스, 인공지능 이후 투자할 곳 찾기
워렌 버핏의 생각 지도
성공하는 스타트업 네이밍과 로고 만들기
PART 003 프롬프트형 AI 미드저니(MJ)
036. AI 미켈란젤로, 미드저니에 빠져들다
미드저니에서 표현할 수 있는 것들
미드저니 사용하기
별책부록 : 미드저니 계정 만들기
프롬프트 이해하기
- 어떠한 것이 중요한지 파악하기
프롬프트 살펴보기
- 매체 선택하기
- 구제적인 표현
- 시대별 표현
- 개성(이모티콘) 있는 표정 표현
- 다채로운 표현
- 환경(배경) 표현
팁 : 그룹이 아닌 챗봇과 1:1 작업 (나만의 공간에서 작업하기)
미드저니 파라미터(매개변수) 살펴보기
종횡비 살펴보기
혼돈(Chaos) 살펴보기
품질(Quality) 살펴보기
반복(Repeat) 살펴보기
시드(Seed) 살펴보기
- 생성된 이미지의 시드 번호 찾기
- ID로 지난 이미지 찾기
팁 : 4개의 그리드 이미지 중 특정 이미지의 시드 번호 및 ID 찾기
정지(Stop) 살펴보기
스타일화(Stylize) 살펴보기
스타일(Style) 살펴보기
타일(Tile) 살펴보기
- 반복되는 패턴 만들기
팁 : 이미지(패턴) 판매하여 수익을 낼 수 있는 방법
버전(Version) 살펴보기
미드저니 사용 스타일과 명령어 프롬프트 리스트
팁 : 모델처럼 아름다운 여성을 표현할 때의 프롬프트
- 아티스트 스타일을 표현하기 위한 프롬프트
팁 : 아티스트 이름 앞에 by를 넣어야 하는 이유
팁 : 최대한 상세하게 키워드로 설명하자
037. 표현의 한계를 뛰어넘는 특별한 미드저니 사용법
미드저니 명령어를 쉽게 만들어 주는 무료 프롬프터
팁 : 서버 그룹 채팅방에서 내 결과물 찾기
팁 : 미드저니 사용 시간 절약하는 방법
팁 : 릴랙스 모드 선택과 릴랙스 모드 무제한 사용하기에 대하여
쇼튼(Shorten) 명령을 활용한 이미지 생성하기
팁 : 남들이 만든 그림 응용하기
디스크라이브(Describe) 명령을 활용한 이미지 생성하기
팁 : 미드저니 사용 기간(갱신일) 확인하기
여러 개의 이미지를 하나의 이미지로 결합하기
- 이미지 프롬프트를 활용한 다중 이미지 결합하기
팁 : 하나의 이미지를 변형하고자 할 때
- 블렌드 명령어를 활용한 다중 이미지 결합하기
팁 : 블렌드 명령어 사용 시 결과물에 대한 비율 설정하기
리믹스(Remix) 모드를 활용한 이미지 생성하기
팁: 리믹스 모드에서 사용할 수 없는 파라미터
이미지 가중치 활용하기
멀티 프롬프트 명령을 활용한 이미지 생성하기
- 음수 가중치와 --no 매개변수 사용하기
이미지 가중치에 활용하기
- 순열 프롬프트에서 멀티 프롬프트 사용하기
팁 : 미드저니 계정 해킹을 당했을 때 고객센터에 소명하기
038. 미드저니를 활용한 다양한 디자인 소스 만들기
유튜브 채널 아트 만들기
책 표지 만들기
팁 : 미드저니 사용자 정보 확인하기 (남은 사용 회수 확인하기)
유튜브 썸네일 만들기
패션 디자인 아이템 만들기
광고 이미지 만들기
팁 : 미드저니 프롬프트 금기어에 대하여
동화책 삽화 만들기
기업 로고 만들기
일관된 캐릭터 만들기
클립아트 만들기
팁 : 새로 추가된 인페인트(베리 리전)를 활용한 특정 영역 수정하기
- 대기업 TV 광고도 이젠 생성형 AI로 제작하는 시대
039. 미드저니 작업에 활력을 주는 것들
미드저니 명령어
- 미드저니 스타일 & 키워드 레퍼런스 활용하기
- 프롬프트 빌더 활용하기
팁 : 미드저니 구독 해지하기
040. 캐주얼한 이미지는 모두 DALL-E가 해결한다
DALL-E 무작정 따라하기
생성된 이미지 수정 및 다운로드받기
그밖에 유용한 무료 이미지 생성 AI 살펴보기
대충 그린 그림, 완벽한 스케치로 만들기
무료로 고퀄리티의 이미지 생성하기
PART 04 모델형 AI 스테이블 디퓨전(SD)
041. 자유로운 표현, 스테이블 디퓨전을 시작하기
미드저니와 스테이블 디퓨전 비교하기
스테이블 디퓨전 설치 및 실행하기
팁 : 허깅 페이스는 어떤 곳인가?
팁 : 깃 포 윈도우즈는 무엇인가?
팁 : 스테이블 디퓨전을 맥(Mac)에서 사용할 수 있나?
팁 : 깃(Git)을 다시 실행해야 할 때
팁 : 구글 코랩(Colab)을 활용한 스테이블 디퓨전 설치 및 사용에 대하여
별책부록 : 구글 코랩 설치하기
- 스테이블 디퓨전에서 첫 번째 이미지 생성하기
042. 스테이블 디퓨전 web UI 메인 화면 살펴보기
체크포인트(모델), 작업 방식, 프롬프트 살펴보기
제너레이트, 프롬프트 제어, 스타일 살펴보기
세부 설정 살펴보기
저장 및 보내기 살펴보기
팁 : 한글 인터페이스로 전환하려면?
043. 스테이블 디퓨전 기본 파일 설치(세팅)하기
- 체크포인트(Checkpoint: Model)
- 로라(LoRA: Low-Rank Adaptation)
- VAE(Variational Autoencoder)
- 임베딩(Embeddings)
팁 : LDSR(잠재적 확산 슈퍼 해상도)에 대하여
팁 : 업스케일러(Upscaler) 비교하기
4가지 주요 파일 설치하기
팁 : 모델 파일 확장자에 대하여
추가된 4가지 모델을 활성화하기
팁 : 간편하게 스테이블 디퓨전 초기화하기
팁 : 체크포인트, 로라, 임베딩, VAE 파일 다운받을 수 있는 대표 웹사이트
044. 실제보다 더 실제 같은 미소녀 이미지 생성하기
- 네거티브 프롬프트에 네거티브 임베딩 파일 적용하기
- 프롬프트에 키워드(단어) 입력하기
- 네거티브 프롬프트에 키워드(단어) 입력하기
- 자연스러운 얼굴 만들기
- 자연스러운 구도와 포즈 만들기
팁 : 4개지 오류에 대하여
045. 스테이블 디퓨전 프롬프트의 모든 것
프롬프트 사용의 정석
- 특정 키워드를 강조하기 위한 괄호 사용하기 (가중치 이해하기)
- 괄호 안에서 숫자로 특정 키워드 강조하기 (가중치 활용)
팁 : 쉼표(,)와 마침표(.)에 대하여
팁 : 스테이블 디퓨전은 왜 인물에 특화되었나?
프롬프트 자동 생성기 활용하기
- 챗GPT에서 스테이블 디퓨전 프롬프트 생성하기
046. 시빗AI(CivitAI.com) 100% 활용하기
시빗AI 회원가입 및 다운로드받기
팁 : 해당 체크포인트와 로라에 대한 정보를 얻고자 한다면
팁 : 로라 파일을 더 강조할 때 사용하는 트리거 워드에 대하여
체크포인트와 로라 사용하기
프롬프트에 다중 로라 사용하기
팁 : 엑스트라 네트워크에 있는 모델과 로라 썸네일 만들기
- 부자연스러운 손가락 모양 수정하기
팁 : 즐겨 사용하는 스타일 등록 및 다시 사용하는 방법
- 다중 로라에 가중치 부여하기
팁 : 연속되는 이미지 생성 모드 사용하기
047. 스테이블 디퓨전 고수가 되기 위한 활용법
고정 시드 값을 활용한 같은 포즈 다른 의상 만들기
- 마음에 드는 포즈 선택을 위한 고정 시드 값 찾기
- 즐겨 사용되는 의상 키워드
고해상도 이미지(그림)로 업스케일링 하기
팁 : CFG 스케일이란?
팁 : 업스케일러에 대하여
- 엑스트라스(Extras)를 활용한 업스케일링
팁 : Batch Process와 Batch from Directory를 활용한 업스케일링
팁 : 이미지 프롬프트 정보를 확인하는 방법
팁 : 리사이즈 모드(Resize mode)에 대하여
확장(익스텐션) 알고리즘 파일을 활용한 업스케일링
- MultiDiffusion with Tiled VAE를 활용한 업스케일링
- 4x-UltraSharp를 활용한 업스케일링
팁 : 업스케일링 하는 기본 순서
Checkpoint Merger와 Train 활용하기
- 여러 모델을 병합한 체크포인트 만들기 (2.5D 모델 제작)
팁 : 파인 튜닝(Fine-tuning)이란?
별책부록 : 나만의 모델 스타일 만들기
048. img2img를 활용한 이미지 보정하기
인페인트(Inpaint)를 활용한 특정 부분 수정하기
팁 : 이미지 작업 창과 브러시 크기 조절하기
- 얼굴 바꾸기 (페이스 오프)
- 손가락 수정하기
팁 : 외부 이미지 프롬프트 분석하기
팁 : Fill, Original, Whole picture, Only masked의 차이
스케치(Sketch)를 활용한 이미지 생성하기
팁 : 투명한 배경 만들기
별책부록 : 배경 투명하게 만들기
049. 컨트롤 넷(ControlNet)으로 완벽한 장면 연출하기
컨트롤 넷 설치하기
오픈포즈를 활용한 모델 포즈 잡기
- 포즈 더미를 활용한 포즈 이미지 만들기
팁 : JSON 파일에 대하여
팁 : 포즈 더미 파일 구할 수 있는 곳
오픈포즈 에디터를 활용한 포즈 편집하기
- Ddetailer를 활용한 뭉개진 얼굴 보정하기
팁 : 디텍션 디테일러 설치 문제 해결하기
- 다중 오픈포즈 활용하기
- 멀티 컨트롤 넷을 활용한 포즈와 배경 합성하기
팁: 뎁스(Depth) 필드에 대하여
- 오픈포즈 컨트롤 넷의 다양한 포즈들
별책부록 : 우리 회사 전속 모델 채용하기
050. 레벨 UP, 고품격 프로젝트 제작하기
건축가도 놀라는 건축 디자인 컨셉트 이미지 생성하기
- Canny와 MLSD 모델로 외곽선으로 이미지 생성하기
- MLSD를 활용한 건축 디자인 컨셉트 이미지 만들기
팁 : 프롬프트(네거티브) 파일(PT) 만들기
웹툰 캐릭터 이미지 생성하기
- 오픈포즈를 활용한 캐릭터 포즈 설정하기
- Aniverse를 활용한 2.5D 웹툰 캐릭터 생성하기
동영상(애니메이션) 만들기
Save preprocessed 옵션에 대하여
팁 : 낱장 이미지 파일을 동영상으로 만들기
051. 미친 신기술, SDXL 1.0 제대로 활용하기
SDXL 1.0 설치 및 사용하기
- 스테이블 디퓨전 web UI 업데이트하기
팁 : 스테이블 디퓨전 web UI 자동 업데이트하기
- SDXL 1.0 사용하기 (Base)
- SDXL 1.0 사용하기 (Refiner)
별책부록 : 컴피 UI를 활용한 이미지 생성
에필로그
별책부록 : 진짜 작가로 먹고 사는 법
별책부록 : 연 매출 3억 1인 출판사 만들기
별책부록 : PPT 활용 월 300 벌기
별책부록 : 음원 저작권으로 수익화 하는 법
별책부록 : 상위 10% 유튜버 천재 되기
별책부록 : 미드저니 계정 만들기
별책부록 : 구글 코랩 설치하기
별책부록 : 나만의 모델 스타일 만들기
별책부록 : 배경 투명하게 만들기
별책부록 : 우리 회사 전속 모델 채용하기
별책부록 : 동영상(애니메이션) 만들기
별책부록 : 컴피 UI를 활용한 이미지 생성
별책부록 : 주제(장르)별 프롬프트 리스트
펼쳐보기
접어보기',
        '본문 600페이지 + 별책부록(PDF) 300페이지 그리고 성공적인 비즈니스를 위한 특별 리미티드 도서(PDF) 400페이지까지, 생성형 AI의 모든 것을 담은 책이다. AI 시대를 이끌어 가는 챗GPT·미드저니·스테이블 디퓨전을 한 권으로 완벽하게 마스터할 수 있는 유일한 책이다.',
        '책바세', '2023-09-12', 32000, 28800, 1, 'https://image.aladin.co.kr/product/32384/50/cover/k382935888_1.jpg', 10),
       ('9791156008569', 'K642730814', '소프트웨어 테스트 전문가(CSTS) 가이드 - 개정판', '', '', '홍릉(홍릉과학출판사)', '2021-04-14', 33000,
        33000, 1, 'https://image.aladin.co.kr/product/26951/84/cover/k642730814_1.jpg', 10),
       ('9791156645504', 'K432732449', '난생처음 인공지능 입문', '목차
Part 01 인공지능의 이해
Chapter 01 인공지능의 개요
01 인공지능 소개
02 인공지능의 중요성과 시장성
03 인공지능의 연대기
04 인공지능의 분류
Chapter 02 인공지능의 진화
01 규칙 기반 모델
02 지식 기반 모델과 전문가 시스템
03 추천 시스템
Chapter 03 인공지능과 윤리
01 인공지능 특이점
02 인공지능 윤리의 필요성
03 인공지능의 윤리적 딜레마
04 인공지능 윤리안
05 인공지능 윤리규범 및 동향
Chapter 04 인공지능의 신뢰성
01. 인공지능이 내린 결과에 대한 신뢰성
02. 인공지능에서의 블랙박스
03. 설명가능 인공지능의 등장
Chapter 05 인공지능과 보안
01 인공지능의 위협 요소
02 인공지능의 취약점
03 인공지능을 활용한 보안기술
04 인공지능 보안의 향후 과제
Part 02 인공지능과 기술
Chapter 06 인공지능을 실현하기 위한 기술
01 인공지능을 실현하기 위한 기술 요소
02 인공지능을 위한 하드웨어 기술: GPU
03 인공지능을 위한 네트워크 기술 : 5G
04 인공지능을 위한 인프라 기술 : 클라우드
05 인공지능을 위한 데이터 기술 : 사물인터넷
Chpater 07 빅데이터
01 빅데이터의 개요
02 빅데이터와 인공지능
03 빅데이터 활용에 대한 규제와 딜레마
04 빅데이터의 개방
Chpater 08 머신러닝
01 인공지능, 머신러닝, 딥러닝의 관계
02 머신러닝을 사용하는 이유
03 머신러닝의 분류
04 머신러닝 알고리즘의 유형
05 머신러닝의 주요 도전 과제
Chapter 09 인공신경망과 딥러닝
01 인공신경망의 역사
02 딥러닝의 개요
03 딥러닝의 유형
Part 03 인공지능 서비스와 미래
Chapter 10 인공지능 플랫폼과 서비스
01 플랫폼의 이해
02 글로벌 기업들의 인공지능 플랫폼
03 국내 인공지능 플랫폼
04 인공지능 서비스
Chapter 11 인공지능의 위협
01 인공지능에 의해 위협받는 인간의 일자리
02. 인간 노동의 종말
03. 인공지능에 의해 심화되는 부익부 빈익빈 현상
04. 인공지능이 수행할 수 있는 창의적인 활동
Chapter 12 인공지능 동향
01 정책 및 법규 관점에서의 인공지능 동향
02 기술적 관점에서의 인공지능 동향
03 경제적 관점에서의 인공지능 동향
04 사회적 관점에서의 인공지능 동향
Chapter 13 인공지능에 대처하는 자세
01 인공지능 시대의 교육
02 인간과 인공지능의 공존을 위한 노력
03. 인간의 존엄성과 인공지능 통제
펼쳐보기
접어보기',
        'IT 비전공자뿐만 아니라 중고등학생도 쉽게 배울 수 있는 이론 중심의 인공지능 입문서다. 인공지능의 개념을 실생활에서 접할 수 있는 사례를 중심으로 재미있는 삽화와 생생한 이미지를 통해 친절하게 설명한다.',
        '한빛아카데미(교재)', '2021-06-18', 25000, 25000, 1,
        'https://image.aladin.co.kr/product/27372/45/cover/k432732449_1.jpg', 10),
       ('9791192469829', 'K222831516', '파이썬을 이용한 퀀트 투자 포트폴리오 만들기 - 파이썬 기초, 데이터 크롤링 및 분석, 퀀트 전략을 활용한 투자 종목 선정까지!', '목차
머리말 xi
이 책에 대하여 xii
추천사 xiv
PART I 퀀트와 프로그래밍 기초 배워 보기
CHAPTER 1 퀀트에 대해 알아보기 3
1.1 퀀트 투자의 핵심 재료, 데이터 4
1.2 퀀트 투자에 프로그래밍이 필요한 이유 4
1.3 최고의 인기 언어, 파이썬 5
1.4 데이터 관리의 표준, SQL 6
CHAPTER 2 파이썬 기초 배워 보기 8
2.1 상수와 변수 8
2.2 데이터 타입 9
2.3 제어문 30
2.4 함수 39
2.5 패키지 사용하기 41
CHAPTER 3 데이터 분석 배워 보기 48
3.1 시리즈 48
3.2 데이터프레임 52
3.3 데이터 불러오기 및 저장하기 60
3.4 데이터 요약 정보 및 통곗값 살펴보기 62
3.5 결측치 처리하기 67
3.6 인덱스 다루기 72
3.7 필터링 74
3.8 새로운 열 만들기 78
3.9 데이터프레임 합치기 80
3.10 데이터 재구조화 88
3.11 데이터프레임에 함수 적용하기 93
3.12 그룹 연산하기 96
3.13 시계열 데이터 다루기 103
CHAPTER 4 데이터 시각화 배워 보기 110
4.1 그래프의 구성 요소 110
4.2 matplotlib 패키지를 이용한 시각화 111
4.3 pandas 패키지를 이용한 시각화 117
4.4 seaborn 패키지를 이용한 시각화 121
CHAPTER 5 SQL 기초 배워 보기 128
5.1 데이터베이스와 테이블 만들기 128
5.2 SQL 기초 구문 익히기 133
5.3 연산자 135
5.4 집약 함수 137
5.5 그룹화와 정렬 139
5.6 뷰와 서브쿼리 141
5.7 함수, 술어와 case 식 144
5.8 테이블의 집합과 결합 151
5.9 SQL 고급 처리 156
CHAPTER 6 파이썬에서 SQL 연결하기 161
6.1 파이썬에서 SQL DB에 접속하기 161
6.2 pandas를 이용한 데이터 읽기 및 쓰기 163
6.3 upsert 기능 구현하기 165
PART II 크롤링을 이용한 데이터 수집
CHAPTER 7 크롤링을 위한 웹 기본 지식 173
7.1 인코딩에 대한 이해 173
7.2 웹의 동작 방식 175
7.3 HTML과 CSS 176
CHAPTER 8 정적 크롤링 실습 187
8.1 GET과 POST 방식 이해하기 187
8.2 크롤링 예제 190
CHAPTER 9 동적 크롤링과 정규 표현식 204
9.1 동적 크롤링이란? 204
9.2 정규 표현식 216
CHAPTER 10 국내 주식 데이터 수집 223
10.1 최근 영업일 기준 데이터 받기 223
10.2 한국거래소의 업종분류 현황 및 개별지표 크롤링 224
10.3 WICS 기준 섹터 정보 크롤링 235
10.4 수정주가 크롤링 240
10.5 재무제표 크롤링 247
10.6 가치지표 계산 256
CHAPTER 11 전 세계 주식 데이터 수집 264
11.1 유료 데이터 벤더 이용하기 265
11.2 티커 수집하기 270
11.3 주가 다운로드 279
11.4 재무제표 다운로드 283
CHAPTER 12 투자 참고용 데이터 수집 288
12.1 DART의 Open API를 이용한 데이터 수집하기 288
12.2 FRED 데이터 다운로드 297
12.3 Fear & Greed Index 301
PART III 포트폴리오 구성, 백테스트 및 매매하기
CHAPTER 13 퀀트 전략을 이용한 종목 선정 307
13.1 팩터 이해하기 308
13.2 베타 이해하기 308
13.3 밸류 전략 312
13.4 모멘텀 전략 322
13.5 퀄리티 전략 331
13.6 마법 공식 337
13.7 섹터 중립 포트폴리오 346
13.8 이상치 데이터 처리 및 팩터의 결합 349
13.9 멀티팩터 포트폴리오 354
CHAPTER 14 포트폴리오 구성 전략 367
14.1 수익률 계산 및 상관관계 확인하기 368
14.2 최대샤프지수 포트폴리오 369
14.3 최소분산 포트폴리오 372
14.4 위험균형 포트폴리오 380
CHAPTER 15 트레이딩을 위한 기술적 지표 385
15.1 TA-Lib 패키지 설치하기 385
15.2 이동평균 387
15.3 상대강도지수 389
15.4 볼린저 밴드 391
CHAPTER 16 백테스팅 시뮬레이션 393
16.1 bt 패키지 394
16.2 정적 자산배분: 올웨더 포트폴리오 401
16.3 동적 자산배분 403
16.4 추세추종 전략 백테스트 407
16.5 평균회귀 전략 백테스트 415
16.6 bt 패키지의 함수 419
CHAPTER 17 증권사 API 연결과 매매하기 421
17.1 모의투자 및 API 서비스 신청하기 423
17.2 접근 토큰 및 해시키 발급받기 427
17.3 주식 현재가 시세 조회하기 429
17.4 주식 주문하기 430
17.5 주식 잔고조회 436
17.6 스케줄링 438
17.7 포트폴리오 리밸런싱 441
APPENDIXA 파이썬 다운로드 및 설치하기 460
아나콘다 설치하기 460
스파이더 사용하기 465
APPENDIXB SQL 다운로드 및 설치하기 467
찾아보기 482
펼쳐보기
접어보기', '국내 주식 데이터만 아니라 전 세계 모든 주식의 데이터를 수집하는 방법도 다루며, 또한 퀀트 전략을 이용한 종목 선정뿐만 아니라, 기술적 지표를 이용한 트레이딩 방법과 백테스트도 다루었다.',
        '제이펍', '2023-02-17', 30000, 27000, 1, 'https://image.aladin.co.kr/product/31037/44/cover/k222831516_1.jpg', 10),
       ('9791169211239', 'K572834799', '육각형 개발자 - 시니어 개발자로 성장하기 위한 10가지 핵심 역량', '목차
1장 들어가며
실패
3년 차
개발이란
개발에 필요한 것
2장 구현 기술과 학습
구현 기술
학습 대상
기술 파기
학습 전략
유행에 상관없는 구현 기술
구현 기술 적용
주의할 점
3장 소프트웨어 가치와 비용
소프트웨어 가치
개발 비용
유지보수 비용을 낮추려면
4장 코드 이해
코드 변경
코드 이해 도구
이해하기 좋은 코드
5장 응집도와 결합도
응집도
결합도
6장 리팩터링
수정 공포와 변경 비용
리팩터링
리팩터링 vs 새로 만들기
7장 테스트
테스트 코드
테스트 가능성
리팩터링을 위한 테스트 작성하기
8장 아키텍처·패턴
아키텍처 고민하기
패턴 익히기
9장 업무 관리
처음부터 끝까지
업무 나누기
완료의 의미
위험 관리
요구 사항은 바뀐다
일정
점진적·반복적 개발
안 된다고 말하기, 대안 제시하기
수작업 줄이기
이유와 목적 생각하기
10장 정리하고 공유하기
글로 정리해서 공유하기
마인드맵 사용
발표하기
외래어 남용하지 않기
글쓰기와 발표가 주는 효과
11장 리더와 팔로워
리더 연습하기
팔로워
겸손·존중·신뢰
맺음말
펼쳐보기
접어보기',
        '좋은 개발자가 되려면 구현 기술 외에도 여러 역량을 키워야 한다. 모든 역량을 다 잘하기는 어렵지만 골고루 발전시킬 수는 있다. 이 책에 담긴 개발자 필수 역량을 살펴보면서 좋은 개발자로 성장하는 데 필요한 인사이트를 얻을 수 있을 것이다.',
        '한빛미디어', '2023-07-22', 22000, 19800, 1, 'https://image.aladin.co.kr/product/32057/59/cover/k572834799_1.jpg',
        10),
       ('9791188612925', 'K132532003', '블록체인 무엇인가? - 전 세계 사람들이 주목하는 블록체인 입문서!', '목차
첫째마당
소프트웨어 공학에서 변하지 않는 주요 개념들
1단계 - 시스템을 보는 눈 장착하기
시스템을 계층과 측면으로 분리해 분석하기
2단계 - 큰 그림으로 바라보기
소프트웨어 아키텍처란 무엇이고 블록체인과 어떤 관계인가
3단계 - P2P 시스템의 엄청난 잠재력
P2P 시스템이 세상을 어떻게 바꿀 것인가?
둘째마당
왜 우리에게 블록체인이 필요한가?
4단계 - 블록체인에게 떨어진 미션
독립적인 컴퓨터를 무리짓게 만들어라
5단계 - 그래서 블록체인이 뭔가요?
블록체인을 정의하는 네 가지 방법
6단계 - 소유권의 본질 이해하기
내가 가진 것이 내 것이라고 어떻게 증명할까?
7단계 - 이중사용, 블록체인이 해결한다
P2P 시스템의 취약성을 이용한 범죄 예방책
셋째마당
블록체인은 어떻게 작동하는가?
8단계 - 블록체인의 청사진 그리기
블록체인으로 소유권을 관리하기 위한 밑그림
9단계 - 소유권 기록에서 모든 것이 시작된다
이력으로 현재 소유권 상태 알아내기
10단계 - 데이터 해싱하기
지문처럼 만들어 데이터 식별하기
11단계 - 해시값은 어디서 어떻게 사용될까?
데이터 비교하고, 계산 퍼즐 만드는 다섯 가지 이야기
12단계 - 암호화 기법을 소개합니다
사용자 계정 식별하고 보호하는 방법
13단계 - 노드 여러분, 트랜잭션을 승인합니까?
디지털 서명 만들어 검증에 사용하기
14단계 - 블록체인-데이터-구조를 만들어봅시다
전체 트랜잭션 데이터 구축 및 유지하기
15단계 - 잘 뜨개질된 블록체인, 어떻게 변경할까?
새 트랜잭션 추가 및 변경하기
16단계 - 블록체인이 데이터를 보호하는 방법
조작할 때 드는 비용을 높여 포기하게 만들기
17단계 - 컴퓨터들이 정보를 배분하는 방법
그 소식 들었어? 새로운 피어가 들어왔대!
18단계 - 블록체인 속 무한경쟁 사회
당근과 채찍으로 새 트랜잭션 검증 및 추가하기
19단계 - 컴퓨터들도 라인을 잘 타야 살아남는다
노드들이 갈림길에서 일관되게 선택하는 방법
20단계 - 참 잘했어요. 보상은 비트코인입니다
보상으로 지불할 결제 수단의 조건
21단계 - 블록체인이라는 퍼즐 완성하기
앞단계에서 배운 내용 총정리
넷째마당
블록체인의 한계는 무엇이고 어떻게 극복할 것인가?
22단계 - 냉정하게 한계점 바라보기
블록체인의 기술적, 비기술적 제약사항
23단계 - 다시 태어난 블록체인
한계 극복을 위한 네 가지 변형 등장
다섯째마당
오늘, 그리고 앞으로의 블록체인
24단계 - 우리도 블록체인을 써볼까?
유망한 응용분야 알아보고, 타당성 확인하기
25단계 - 블록체인의 미래 그려보기
블록체인의 변화 과정, 성과, 잠재적 약점
펼쳐보기
접어보기',
        '아마존 네트워크 분야 베스트셀러 1위. 중립적 입장에서 비트토인의 원리를 하나하나 차분히 설명한다. 블록체인이 무엇인지, 왜 필요한지, 어떻게 움직이는지. 25단계를 따라가다 보면 사전지식이 없는 일반인들도 어느새 블록체인을 쉽게 이해할 수 있다.',
        '이지스퍼블리싱', '2018-02-19', 15000, 13500, 1, 'https://image.aladin.co.kr/product/13367/79/cover/k132532003_1.jpg',
        10),
       ('9791158394295', 'K822832523', '챗GPT와 기획.분석.보고 - 일주일 치 업무를 하루 만에 해치우는 일잘러의 ChatGPT 완벽 활용법', '목차
[1부] ChatGPT로 기획·분석·보고하기
1장: 초안을 만드는 ChatGPT
___기획 초안, 분석 초안, 보고 초안 만들기가 제일 어렵다
___ChatGPT가 초안을 만드는 시대가 왔다
___ChatGPT가 기획, 분석, 보고를 안내한다
2장: 다양한 ChatGPT 서비스 사용법
___OpenAI의 ChatGPT 사용하기
___MS의 Bing 사용하기
___업스테이지의 AskUp 사용하기
[2부] ChatGPT로 기획하기
3장: ChatGPT와 문제 파악
___문제 인지, 문제 인식, 문제 의식
___ChatGPT로 문제를 인지하고 인식하기
___문제를 제대로 파악했는지 아는 방법
___문제를 균형 있게 보고하기
___문제와 문제점
4장: ChatGPT와 시장 조사
___보통 직장인의 조사 착각 3가지
___뭔가 엄청난 것을 조사한다
___자기가 처음 조사한다
___자기가 직접 조사한다
5장: ChatGPT와 아이디어 기획
___아이디어의 원천
___ChatGPT의 브레인스토밍
___아이디어가 아니라 아이디어 설명
___ChatGPT로 아이디어 설명하기
___아이디어 설명 대신 질문하기
___사내 투자를 받는 6가지 질문
6장: ChatGPT와 전략 수립
___기업의 전략은 신년사에 다 있다
___팀 전략 만들기
___ChatGPT로 팀 신년사 만들기
___전략과 방안과 과제
___전략과 과제 매트릭스
[3부] ChatGPT로 분석하기
7장: ChatGPT와 데이터 분석
___데이터 정리와 데이터 분석
___예상치, 의지치, 목표치, 결과치
___통찰과 시사
___데이터 분류와 방안
8장: ChatGPT와 실적 분석
___손익 분석
___ChatGPT로 인과 분석하기
___외부 환경과 내부 경영 분석 팁
9장: ChatGPT와 업무 분석
___업무 배분과 WBS
___ChatGPT로 WBS 만들기
___과제를 어떻게 세부 업무로 나눌 것인가·
___각 업무를 어떻게 할당할 것인가·
___업무를 어디까지 관리할 것인가·
10장: ChatGPT와 성과 분석
___실적을 만드는 BSC 전략 맵
___ChatGPT로 BSC 만들기
___실적과 성과의 차이
___ChatGPT로 KPI, MBO, OKR 만들기
___목표 관리의 핵심은 목표 달성이 아니라 진척과 예측
[4부] ChatGPT로 보고하기
11장: ChatGPT와 업무 지시
___업무 지시와 요요요 질문
___ChatGPT에게 질문 요청하기
___위임전결과 팀장의 권한
___팀원 동기 부여
12장: ChatGPT와 업무 연락
___쓸데없는 주간 회의를 계속하는 이유
___팀 내 협의자와 통보자 지정하기
___자료 요청 관리와 협업
___ChatGPT로 자료 요청 메일 작성하기
___파일 버전 관리하기
13장: ChatGPT와 보고 논리
___비즈니스 사이클
___비즈니스 논리와 기획·보고
___보고서의 논리
___ChatGPT로 원 페이지 보고서 쓰기
14장: ChatGPT와 보고서 검토
___보고와 예상 질문
___예상 질문 검토하기
___주장과 상사의 상황 검토하기
[부록] 이 책에서 사용한 프롬프트 모음
1부. ChatGPT로 기획·분석·보고하기
2부. ChatGPT로 기획하기
3부. ChatGPT로 분석하기
4부. ChatGPT로 보고하기
펼쳐보기
접어보기',
        'ChatGPT로 문제를 파악하고 시장을 조사해서 정리할 수 있다. 신제품 아이디어를 도출하고 전략을 수립할 수 있다. 또한 데이터를 분석하고 통찰과 시사점을 얻을 수 있으며, 실적과 성과를 분석하고 목표를 관리할 수 있다.',
        '위키북스', '2023-04-14', 18000, 16200, 1, 'https://image.aladin.co.kr/product/31479/46/cover/k822832523_1.jpg',
        10),
       ('9791132110811', 'K592835311', '데이터 통신과 네트워킹 - TCP/IP 프로토콜 기반, 6판', '목차
Chapter 01 개요
Chapter 02 물리층
Chapter 03 데이터 링크층
Chapter 04 근거리 통신망: LAN
Chapter 05 광역 통신망: WAN
Chapter 06 연결 장치와 가상 LAN
Chapter 07 네트워크층: 데이터 전송
Chapter 08 네트워크층: 패킷의 라우팅
Chapter 09 전송층
Chapter 10 응용층 소개
Chapter 11 멀티미디어
Chapter 12 네트워크 관리
Chapter 13 암호화와 네트워크 보안
Appendix A 유니코드
Appendix B 숫자 시스템
Appendix C HTML, CSS, XML, XSL
Appendix D 기초 확률론
Appendix E 검사합
약어
용어해설
찾아보기
펼쳐보기
접어보기',
        'TCP/IP 프로토콜을 기반으로 한 네트워킹의 원리를 설명하였다. TCP/IP 프로토콜의 각 계층은 하위 계층에서 제공하는 서비스를 이용하여 구축된 상향식 접근방법을 사용하였다. 이 6판은 TCP/IP 프로토콜에 초점을 맞추어 장의 수를 줄여서 재구성하였다. \n',
        '한국맥그로힐', '2021-12-01', 39000, 39000, 1, 'https://image.aladin.co.kr/product/28424/22/cover/k592835311_1.jpg',
        10),
       ('9791156645481', 'K762831279', '컴퓨터 비전과 딥러닝', '목차
Chapter 01 인간의 시각을 흉내 내는 컴퓨터 비전
1.1 인간의 시각
1.2 왜 컴퓨터 비전인가?
1.3 컴퓨터 비전은 왜 어려운가?
1.4 컴퓨터 비전의 역사
1.5 컴퓨터 비전 체험 서비스
1.6 컴퓨터 비전 만들기
1.7 읽을거리와 볼거리
연습문제
Chapter 02 OpenCV로 시작하는 컴퓨터 비전
2.1 OpenCV 소개
2.2 프로그래밍 킥오프
2.3 객체지향 잘 활용하기
[프로그램 2-1] numpy.ndarray 클래스 형의 객체를 만들고 멤버 함수 적용하기
2.4 [프로그래밍 예제 1] 영상을 읽고 표시하기
[프로그램 2-2] 영상 파일을 읽고 윈도우에 디스플레이하기
2.5 [프로그래밍 예제 2] 영상 형태 변환하고 크기 축소하기
[프로그램 2-3] 영상을 명암 영상으로 변환하고 반으로 축소하기
2.6 [프로그래밍 예제 3] 웹 캠에서 비디오 읽기
[프로그램 2-4] 웹 캠으로 비디오 획득하기
[프로그램 2-5] 비디오에서 수집한 영상을 이어 붙이기
2.7 [프로그래밍 예제 4] 그래픽 기능과 사용자 인터페이스 만들기
[프로그램 2-6] 영상에 도형을 그리고 글자 쓰기
[프로그램 2-7] 마우스로 클릭한 곳에 직사각형 그리기
[프로그램 2-8] 마우스 드래그로 직사각형 그리기
2.8 [프로그래밍 예제 5] 페인팅 기능 만들기
[프로그램 2-9] 빨간색 붓과 파란색 붓으로 페인팅하기
연습문제
Chapter 03 영상 처리
3.1 디지털 영상 기초
[프로그램 3-1] RGB 컬러 영상을 채널별로 구분해 디스플레이하기
3.2 이진 영상
[프로그램 3-2] 실제 영상에서 히스토그램 구하기
[프로그램 3-3] 오츄 알고리즘으로 이진화하기
[프로그램 3-4] 모폴로지 연산 적용하기
3.3 점 연산
[프로그램 3-5] 감마 보정 실험하기
[프로그램 3-6] 히스토그램 평활화하기
3.4 영역 연산
[프로그램 3-7] 컨볼루션 적용(가우시안 스무딩과 엠보싱)하기
3.5 기하 연산
[프로그램 3-8] 보간을 이용해 영상의 기하 변환하기
3.6 OpenCV의 시간 효율
[프로그램 3-9] 직접 작성한 함수와 OpenCV가 제공하는 함수의 시간 비교하기
연습문제
Chapter 04 에지와 영역
4.1 에지 검출
[프로그램 4-1] 소벨 에지 검출(Sobel 함수 사용)하기
4.2 캐니 에지
[프로그램 4-2] 캐니 에지 실험하기
4.3 직선 검출
[프로그램 4-3] 에지 맵에서 경계선 찾기
[프로그램 4-4] 허프 변환을 이용해 사과 검출하기
4.4 영역 분할
[프로그램 4-5] SLIC 알고리즘으로 입력 영상을 슈퍼 화소 분할하기
[프로그램 4-6] 정규화 절단 알고리즘으로 영역 분할하기
4.5 대화식 분할
[프로그램 4-7] GrabCut을 이용해 물체 분할하기
4.6 영역 특징
[프로그램 4-8] 이진 영역의 특징을 추출하는 함수 사용하기
연습문제
Chapter 05 지역 특징
5.1 발상
5.2 이동과 회전 불변한 지역 특징
[프로그램 5-1] 해리스 특징점 검출 구현하기
5.3 스케일 불변한 지역 특징
5.4 SIFT
[프로그램 5-2] SIFT 검출
5.5 매칭
[프로그램 5-3] FLANN 라이브러리를 이용한 SIFT 매칭
5.6 호모그래피 추정
[프로그램 5-4] RANSAC을 이용해 호모그래피 추정하기
연습문제
Chapter 06 비전 에이전트
6.1 지능 에이전트로서 비전 에이전트
6.2 PyQt를 이용한 사용자 인터페이스
[프로그램 6-1] PyQt로 간단한 GUI 만들기(버튼을 클릭하면 삑 소리 들려주기)
[프로그램 6-2] OpenCV에 PyQt의 GUI 붙이기(비디오에서 프레임을 잡아 저장하기)
6.3 [비전 에이전트 1] 오림
[프로그램 6-3] GrabCut을 이용해 관심 물체 오리기
6.4 [비전 에이전트 2] 교통약자 보호구역 알림
[프로그램 6-4] 교통약자 보호구역 알림 구현하기
6.5 [비전 에이전트 3] 파노라마 영상 제작
[프로그램 6-5] 비디오에서 수집한 영상을 봉합하여 파노라마 영상 제작하기
6.6 [비전 에이전트 4] 특수 효과
[프로그램 6-6] 사진 영상에 특수 효과 처리하기
[프로그램 6-7] 비디오 영상에 특수 효과 처리하기
연습문제
Chapter 07 딥러닝 비전
7.1 방법론의 대전환
7.2 기계학습 기초
7.3 딥러닝 소프트웨어 맛보기
[프로그램 7-1] 텐서플로로 데이터 확인하기
7.4 인공 신경망의 태동
7.5 깊은 다층 퍼셉트론
7.6 학습 알고리즘
7.7 다층 퍼셉트론 구현하기
[프로그램 7-2] 다층 퍼셉트론으로 MNIST 인식하기(SGD 옵티마이저)
[프로그램 7-3] 다층 퍼셉트론으로 MNIST 인식하기(Adam 옵티마이저)
[프로그램 7-4] 다층 퍼셉트론으로 MNIST 인식하기(SGD와 Adam의 성능 그래프 비교)
[프로그램 7-5] 깊은 다층 퍼셉트론으로 MNIST 인식하기
[프로그램 7-6] 깊은 다층 퍼셉트론으로 CIFAR-10 인식하기
7.8 [비전 에이전트 5] 우편번호 인식기 v.1
[프로그램 7-7] 우편번호 인식기 v.1(DMLP 버전) 구현하기
연습문제
Chapter 08 컨볼루션 신경망
8.1 발상과 전개
8.2 컨볼루션 신경망의 구조
8.3 컨볼루션 신경망의 학습
8.4 컨볼루션 신경망 구현
[프로그램 8-1] LeNet-5로 MNIST 인식하기
[프로그램 8-2] 컨볼루션 신경망으로 자연 영상 인식하기
8.5 [비전 에이전트 6] 우편번호 인식기 v.2
[프로그램 8-3] 필기 숫자 인식기 성능 향상하기
[프로그램 8-4] 우편번호 인식기 v.2(CNN 버전)
8.6 딥러닝의 학습 알고리즘 향상
[프로그램 8-5] 증강된 영상 확인하기
8.7 전이 학습
[프로그램 8-6] ResNet50으로 자연 영상 인식하기
[프로그램 8-7] DenseNet121로 견종 인식하기
8.8 [비전 에이전트 7] 견종 인식 프로그램
[프로그램 8-8] 견종 인식 프로그램 구현하기
연습문제
Chapter 09 인식
9.1 인식이란
9.2 분류
9.3 검출
[프로그램 9-1] YOLO v3으로 정지 영상에서 물체 검출하기
[프로그램 9-2] YOLO v3으로 비디오에서 물체 검출하기
[프로그램 9-3] YOLO v3의 비디오 처리량 측정하기
9.4 분할
[프로그램 9-4] Oxford pets 데이터셋으로 U-net 학습하기
[프로그램 9-5] pixellib 라이브러리로 정지 영상을 의미 분할하기
[프로그램 9-6] pixellib 라이브러리로 비디오를 의미 분할하기
[프로그램 9-7] pixellib 라이브러리로 정지 영상을 사례 분할하기
[프로그램 9-8] pixellib 라이브러리로 비디오를 사례 분할하기
9.5 [비전 에이전트 8] 배경을 내 맘대로 바꾸기
[프로그램 9-9] pixellib 라이브러리를 활용해 내 맘대로 배경 바꾸기
9.6 사람 인식
연습문제
Chapter 10 동적 비전
10.1 모션 분석
[프로그램 10-1] Farneback 알고리즘으로 광류 추정하기
[프로그램 10-2] KLT 추적 알고리즘으로 물체 추적하기
10.2 추적
[프로그램 10-3] SORT로 사람 추적하기
10.3 MediaPipe를 이용해 비디오에서 사람 인식
[프로그램 10-4] BlazeFace로 얼굴 검출하기
[프로그램 10-5] 비디오에서 얼굴 검출하기
[프로그램 10-6] 얼굴을 장식하는 증강 현실 구현하기
[프로그램 10-7] FaceMesh로 얼굴 그물망 검출하기
[프로그램 10-8] 손 랜드마크 검출하기
10.4 자세 추정과 행동 분류
[프로그램 10-9] BlazePose를 이용한 자세 추정하기
연습문제
Chapter 11 비전 트랜스포머
11.1 주목
11.2 순환 신경망과 주목
11.3 트랜스포머
11.4 비전 트랜스포머
[프로그램 11-1] CIFAR-10을 분류하는 비전 트랜스포머 구현하기
[프로그램 11-2] CIFAR-10을 분류하는 비전 트랜스포머: 영상 확대와 데이터 증강으로 성능 향상하기
11.5 비전 트랜스포머 프로그래밍 실습
[프로그램 11-3] 허깅페이스의 ViT를 이용해 영상 분류하기
[프로그램 11-4] 허깅페이스의 DETR을 이용해 물체 검출하기
[프로그램 11-5] 허깅페이스의 CLIP을 이용해 영상 설명하기
11.6 트랜스포머의 특성
연습문제
Chapter 12 3차원 비전
12.1 3차원 기하와 캘리브레이션
12.2 깊이 추정
12.3 RGB-D 영상 인식
12.4 점 구름 인식
[프로그램 12-1] ModelNet 데이터셋에서 점 구름을 생성하고 디스플레이하기
[프로그램 12-2] PointNet을 이용해 점 구름 영상 분류하기
연습문제
Chapter 13 생성 비전
13.1 생성 모델 기초
[프로그램 13-1] (키, 몸무게)를 생성하는 생성 모델 제작하기
[프로그램 13-2] MNIST를 가우시안 모델링하고 샘플 생성하기
[프로그램 13-3] MNIST를 GMM으로 모델링하고 샘플 생성하기
13.2 오토인코더를 이용한 생성 모델
[프로그램 13-4] MNIST를 오토인코더로 모델링하고 샘플 생성하기
[프로그램 13-5] MNIST를 변이 오토인코더로 모델링하고 샘플 생성하기
13.3 생성 적대 신경망
[프로그램 13-6] fashion MNIST를 GAN으로 모델링하고 샘플 생성하기
[프로그램 13-7] CIFAR-10 자연 영상을 GAN으로 모델링하고 샘플 생성하기
13.4 확산 모델
13.5 생성 모델의 평가
13.6 멀티 모달 생성 모델: 언어와 비전의 결합
[프로그램 13-8] Stable Diffusion으로 샘플 생성하기
13.7 생성 모델은 예술이 될 수 있을까
연습문제
참고문헌
[온라인 부록](다운로드 주소: http://www.hanbit.co.kr/src/4548)
부록 A 파이썬 프로그래밍 기초
부록 B 선형대수 기초
부록 C 확률 기초
부록 D 확산 모델 프로그래밍 실습
펼쳐보기
접어보기', '규칙 기반의 고전 컴퓨터 비전을 지원하는 OpenCV와 데이터 중심의 딥러닝 컴퓨터 비전을 지원하는 텐서플로를 활용한 85개 파이썬 프로그램으로 컴퓨터 비전을 균형 있게 배울 수 있다.',
        '한빛아카데미(교재)', '2023-01-05', 39000, 39000, 1,
        'https://image.aladin.co.kr/product/30830/64/cover/k762831279_1.jpg', 10),
       ('9791169211956', 'K042938663', '밑바닥부터 시작하는 딥러닝 4', '목차
CHAPTER 1 밴디트 문제
_1.1 머신러닝 분류와 강화 학습
_1.2 밴디트 문제
_1.3 밴디트 알고리즘
_1.4 밴디트 알고리즘 구현
_1.5 비정상 문제
_1.6 정리
CHAPTER 2 마르코프 결정 과정
_2.1 마르코프 결정 과정(MDP)이란?
_2.2 환경과 에이전트를 수식으로
_2.3 MDP의 목표
_2.4 MDP 예제
_2.5 정리
CHAPTER 3 벨만 방정식
_3.1 벨만 방정식 도출
_3.2 벨만 방정식의 예
_3.3 행동 가치 함수(Q 함수)와 벨만 방정식
_3.4 벨만 최적 방정식
_3.5 벨만 최적 방정식의 예
_3.6 정리
CHAPTER 4 동적 프로그래밍
_4.1 동적 프로그래밍과 정책 평가
_4.2 더 큰 문제를 향해
_4.3 정책 반복법
_4.4 정책 반복법 구현
_4.5 가치 반복법
_4.6 정리
CHAPTER 5 몬테카를로법
_5.1 몬테카를로법 기초
_5.2 몬테카를로법으로 정책 평가하기
_5.3 몬테카를로법 구현
_5.4 몬테카를로법으로 정책 제어하기
_5.5 오프-정책과 중요도 샘플링
_5.6 정리
CHAPTER 6 TD법
_6.1 TD법으로 정책 평가하기
_6.2 SARSA
_6.3 오프-정책 SARSA
_6.4 Q 러닝
_6.5 분포 모델과 샘플 모델
_6.6 정리
CHAPTER 7 신경망과 Q 러닝
_7.1 DeZero 기초
_7.2 선형 회귀
_7.3 신경망
_7.4 Q 러닝과 신경망
_7.5 정리
CHAPTER 8 DQN
_8.1 OpenAI Gym
_8.2 DQN의 핵심 기술
_8.3 DQN과 아타리
_8.4 DQN 확장
_8.5 정리
CHAPTER 9 정책 경사법
_9.1 가장 간단한 정책 경사법
_9.2 REINFORCE
_9.3 베이스라인
_9.4 행위자-비평자
_9.5 정책 기반 기법의 장점
_9.6 정리
CHAPTER 10 한 걸음 더
_10.1 심층 강화 학습 알고리즘 분류
_10.2 정책 경사법 계열의 고급 알고리즘
_10.3 DQN 계열의 고급 알고리즘
_10.4 사례 연구
_10.5 심층 강화 학습이 풀어야 할 숙제와 가능성
_10.6 정리
APPENDIX A 오프-정책 몬테카를로법
A.1 오프-정책 몬테카를로법 이론
A.2 오프-정책 몬테카를로법 구현
APPENDIX B n단계 TD법
APPENDIX C Double DQN 이해하기
C.1 DQN에서의 과대적합이란?
C.2 과대적합 해결 방법
APPENDIX D 정책 경사법 증명
D.1 정책 경사법 도출
D.2 베이스라인 도출
펼쳐보기
접어보기',
        '강화 학습 핵심 이론부터 문제 풀이, 심층 강화 학습까지 한 권에 담았다. 이 책의 특징은 제목 그대로 ‘밑바닥부터 만들어가는 것’이다. 속을 알 수 없는 외부 라이브러리에 의존하지 않고 강화 학습 알고리즘을 처음부터 구현하면서 배운다.',
        '한빛미디어', '2024-01-26', 30000, 27000, 1, 'https://image.aladin.co.kr/product/33255/84/cover/k042938663_1.jpg',
        10),
       ('9788950900229', '895090022X', '데이터 천재들은 어떻게 기획하고 분석할까? - 직관을 넘어 핵심을 꿰뚫는 데이터 분석의 절대 법칙', '목차
추천사
프롤로그
1부 데이터 문맹 탈출, 반드시 알아야 할 데이터 상식
더 나은 의사결정을 위한 빅데이터
좋은 기획이 빅데이터의 가치를 결정한다
어떻게 빅데이터를 분석할 것인가
비전공자가 데이터 전문가로 성장하는 방법
기획과 분석, 핵심 원리만 이해하면 성공한다
2부 데이터 시각화로 트렌드를 읽어라
복잡한 정보를 시각적으로 탐색하면 생기는 변화
데이터에 숨어 있는 본질을 발견하다
데이터 마이닝과 비즈니스 인텔리전스가 만나면
결국 다양한 데이터 경험이 중요하다
3부 분류와 예측, 미래를 읽는 가장 확실한 방법
인공지능과 머신러닝을 움직이는 기본 원리
데이터 활용은 분류와 예측에서 시작한다
함수를 찾으면 미래가 보인다
무한한 가능성의 인공지능
4부 데이터를 끼리끼리 뭉쳐 보는 군집분석의 힘
데이터의 특징을 파악해야 하는 이유
군집분석, 어디에 어떻게 쓰일 것인가
데이터 간 거리를 읽으면 결과가 명확해진다
중요한 의사결정일수록 반복적으로 분석하라
5부 인공지능, 더 빠르고 능숙하게 이미지를 분석하다
기계가 인간처럼 스스로 학습하고 분석하는 세상
단순한 원리로 극강의 성과를 내는 딥러닝
알파고 이후 인공지능이 만든 놀라운 성과들
앞으로 10년, 빅데이터로 준비하는 미래
부록  빅데이터 직업 제대로 알기
데이터 전문가를 키우는 대학들
Q/A 묻고 답하기
펼쳐보기
접어보기',
        '지난 30여 년간 대한민국 AI·빅데이터 분야를 이끌어온 국내 최고 전문가들이 한자리에 뭉쳐 ‘데이터 활용 입문서’를 출간했다. 금융, 제조, 마케팅, 영업, HR 등 비즈니스 전반에 걸친 빅데이터 최신 경향과 풍부한 사례를 담아, 실제 빅데이터가 어떻게 활용되고 있으며 어떻게 현업의 문제를 해결하고 성과를 내는지 생생하게 보여준다.',
        '21세기북스', '2022-03-30', 18000, 16200, 1, 'https://image.aladin.co.kr/product/29173/75/cover/895090022x_1.jpg',
        10),
       ('9791192469768', 'K102832629', '카프카 핵심 가이드 - 대규모 실시간 데이터와 스트림 처리, 개정증보판', '목차
옮긴이 머리말 xv
베타리더 후기 xvi
제2판 추천사 xviii
제1판 추천사 xx
시작하며 xxiii
CHAPTER 1 카프카 시작하기 1
1.1 발행/구독 메시지 전달 2
1.2 카프카 입문 4
1.3 왜 카프카인가? 10
1.4 데이터 생태계 12
1.5 카프카의 기원 15
1.6 카프카 시작하기 18
CHAPTER 2 카프카 설치하기 19
2.1 환경 설정 19
2.2 카프카 브로커 설치하기 23
2.3 브로커 설정하기 25
2.4 하드웨어 선택하기 34
2.5 클라우드에서 카프카 사용하기 36
2.6 카프카 클러스터 설정하기 37
2.7 프로덕션 환경에서의 고려 사항 44
2.8 요약 48
CHAPTER 3 카프카 프로듀서: 카프카에 메시지 쓰기 49
3.1 프로듀서 개요 50
3.2 카프카 프로듀서 생성하기 52
3.3 카프카로 메시지 전달하기 54
3.4 프로듀서 설정하기 57
3.5 시리얼라이저 65
3.6 파티션 73
3.7 헤더 76
3.8 인터셉터 77
3.9 쿼터, 스로틀링 79
3.10 요약 81
CHAPTER 4 카프카 컨슈머: 카프카에서 데이터 읽기 83
4.1 카프카 컨슈머: 개념 83
4.2 카프카 컨슈머 생성하기 90
4.3 토픽 구독하기 91
4.4 폴링 루프 92
4.5 컨슈머 설정하기 94
4.6 커밋과 오프셋 102
4.7 리밸런스 리스너 109
4.8 특정 오프셋의 레코드 읽어오기 112
4.9 폴링 루프를 벗어나는 방법 113
4.10 디시리얼라이저 115
4.11 독립 실행 컨슈머: 컨슈머 그룹 없이 컨슈머를 사용해야 하는 이유와 방법 121
4.12 요약 123
CHAPTER 5 프로그램 내에서 코드로 카프카 관리하기 125
5.1 AdminClient 개요 126
5.2 AdminClient 사용법: 생성 설정 닫기 128
5.3 필수적인 토픽 관리 기능 130
5.4 설정 관리 134
5.5 컨슈머 그룹 관리 136
5.6 클러스터 메타데이터 140
5.7 고급 어드민 작업 141
5.8 테스트하기 145
5.9 요약 147
CHAPTER 6 카프카 내부 메커니즘 149
6.1 클러스터 멤버십 149
6.2 컨트롤러 150
6.3 복제 158
6.4 요청 처리 161
6.5 물리적 저장소 169
6.6 요약 181
CHAPTER 7 신뢰성 있는 데이터 전달 183
7.1 신뢰성 보장 184
7.2 복제 185
7.3 브로커 설정 186
7.4 신뢰성 있는 시스템에서 프로듀서 사용하기 192
7.5 신뢰성 있는 시스템에서 컨슈머 사용하기 195
7.6 시스템 신뢰성 검증하기 200
7.7 요약 204
CHAPTER 8 ‘정확히 한 번’ 의미 구조 205
8.1 멱등적 프로듀서 206
8.2 트랜잭션 210
8.3 트랜잭션 성능 225
8.4 요약 225
CHAPTER 9 데이터 파이프라인 구축하기 227
9.1 데이터 파이프라인 구축 시 고려사항 228
9.2 카프카 커넥트 vs 프로듀서/컨슈머 235
9.3 카프카 커넥트 235
9.4 카프카 커넥트의 대안 257
9.5 요약 258
CHAPTER 10 클러스터간 데이터 미러링하기 259
10.1 클러스터간 미러링 활용 사례 260
10.2 다중 클러스터 아키텍처 261
10.3 아파치 카프카의 미러메이커 275
10.4 기타 클러스터간 미러링 솔루션 288
10.5 요약 293
CHAPTER 11 보안 295
11.1 보안 설정 적용하기 296
11.2 보안 프로토콜 298
11.3 인증 301
11.4 암호화 324
11.5 인가 326
11.6 감사 333
11.7 주키퍼 보안 335
11.8 플랫폼 보안 338
11.9 요약 340
CHAPTER 12 카프카 운영하기 343
12.1 토픽 작업 343
12.2 컨슈머 그룹 350
12.3 동적 설정 변경 353
12.4 쓰기 작업과 읽기 작업 358
12.5 파티션 관리 364
12.6 기타 툴 374
12.7 안전하지 않은 작업 375
12.8 요약 377
CHAPTER 13 카프카 모니터링하기 379
13.1 지표 기초 379
13.2 서비스 수준 목표 383
13.3 카프카 브로커 지표 386
13.4 클라이언트 모니터링 410
13.5 랙 모니터링 417
13.6 종단 모니터링 418
13.7 요약 419
CHAPTER 14 스트림 처리 421
14.1 스트림 처리란 무엇인가? 423
14.2 스트림 처리 개념 426
14.3 스트림 처리 디자인 패턴 434
14.4 예제로 보는 카프카 스트림즈 443
14.5 카프카 스트림즈: 아키텍처 개요 452
14.6 스트림 처리 활용 사례 459
14.7 스트림 처리 프레임워크 선택하기 460
14.8 요약 462
APPENDEX A 다른 운영체제에 카프카 설치하기 465
A.1 윈도우 시스템에 설치하기 465
A.2 macOS에 설치하기 468
APPENDEX B 추가적으로 사용할 수 있는 툴 471
B.1 통합 플랫폼 471
B.2 클러스터 설치 및 관리 473
B.3 모니터링 및 데이터 탐색 474
B.4 클라이언트 라이브러리 476
B.5 스트림 처리 476
찾아보기 477
펼쳐보기
접어보기', '애플리케이션 아키텍트, 개발자에서부터 카프카 스트리밍 플랫폼이 처음인 프로덕션 엔지니어에 이르기까지, 업데이트된 이 개정증보판을 통해 대규모 실시간 데이터와 스트림 처리 방법에 대해 배울 수 있다.',
        '제이펍', '2023-04-14', 33000, 29700, 1, 'https://image.aladin.co.kr/product/31483/1/cover/k102832629_1.jpg', 10),
       ('9791169212090', 'K552938450',
        '한 권으로 끝내는 이미지 생성 AI with 미드저니 - 직장인, 디자이너, 아티스트, 기획자 모두 써먹을 수 있는이미지 생성 AI 프롬프트 가이드', '목차
일러두기, A/S페이지
머리글
이 책의 구성
목차
PART 01 이미지 생성 AI 이해하기
CHAPTER 01 처음 만나는 이미지 생성 AI: 이미지 생성 AI란 무엇일까?
LESSON 01 인간 수준으로 발전한 AI
알파고 쇼크와 AI의 대중화
AI는 어떻게 이미지를 만들기 시작했을까
예술 분야의 특이점을 넘기 시작한 이미지 생성 AI
다양한 서비스 분야에 활용되는 이미지 생성 AI
LESSON 02 이미지 생성 AI란?
이미지 생성 AI의 작동 개념 이해하기
이미지 생성 AI의 동작 방식
LESSON 03 이미지 생성 AI를 알아야 하는 이유
우리는 왜 AI를 배우고 이해해야 할까?
이미 우리 삶에 활용되고 있는 이미지 생성 AI
CHAPTER 02 이미지 생성 AI 사용 준비하기
LESSON 01 어떤 AI를 사용하면 좋을까?
다양한 이미지 생성 AI 비교하기
LESSON 02 달리3 사용 방법과 기능 익히기
이미지 생성 AI 달리
달리3의 가격 정책 알아보기
ChatGPT 회원 가입하기
텍스트(프롬프트)로 이미지 생성하기
프롬프트로 이미지 변형하기
이미지 업로드해 변형하기
LESSON 03 미드저니 사용 방법과 기능 익히기
이미지 생성 AI 미드저니
미드저니의 가격 정책 알아보기
미드저니 실행을 위한 디스코드 준비하기
디스코드 미드저니 서버 접속하기
디스코드 미드저니 서버 사용하기
미드저니로 이미지 생성하기
미드저니에서 이미지 변형하기
LESSON 04 스테이블 디퓨전 사용 방법과 기능 익히기
이미지 생성 AI 스테이블 디퓨전
스테이블 디퓨전의 가격 정책 알아보기
스테이블 디퓨전 실행을 위한 코랩 준비하기
코랩에서 무료 GPU 사용 환경 만들기
스테이블 디퓨전으로 이미지 생성하기
CHAPTER 03 프롬프트로 이미지 생성 AI와 대화하기
LESSON 01 AI가 이해하는 프롬프트 알아보기
AI를 이해하고 대화 시작하기
실생활에 활용하는 프롬프트 작성법
LESSON 02 효과적으로 프롬프트를 사용하는 네 가지 팁
사진 기법에 따른 프롬프트 사용법
예술 기법에 따른 프롬프트 사용법
감정을 표현하는 프롬프트 사용법
특별한 효과를 나타내는 키워드 프롬프트 사용법
PART 02 이미지 생성 AI 실무에 활용하기
CHAPTER 01 일상에서 이미지 생성 AI 활용하기
LESSON 01 독특한 캐릭터 스타일의 SNS 프로필 사진 만들기
이미지 생성 AI로 프로필 사진 만들기
디즈니 스타일 캐릭터 만들기
우주복을 입은 지브리 스타일 캐릭터 만들기
LESSON 02 내 글을 잘 표현하는 삽화 이미지 만들기
블로그 포스팅 이미지 생성 AI 활용하기
글의 주제를 전달하는 일러스트 삽화 제작하기
실사풍 일러스트 삽화 제작하기
LESSON 03 나만의 음악 앨범 커버 만들기
미드저니로 음악 앨범 커버 만들기
앨범 콘셉트 정리하기
미드저니로 앨범 커버 이미지 생성하기
캔바를 활용해 앨범 커버 텍스트 꾸미기
CHAPTER 02 회사 업무에 이미지 생성 AI 활용하기
LESSON 01 마케터의 SNS 홍보 자료 만들기
SNS 플랫폼과 카드뉴스의 마케팅 활용 양상
일러스트 스타일의 인포그래픽 카드뉴스 만들기
생성한 이미지로 캔바에서 카드뉴스 만들기
실사 스타일 이미지 생성해 카드뉴스 만들기
LESSON 02 기획자의 디자이너 소통용 레퍼런스 이미지 만들기
디자이너와 기획자 간 소통의 어려움
의도를 살려 웹 소설 표지 레퍼런스 만들기
특정 작가나 아티스트의 느낌이 반영된 레퍼런스 만들기
LESSON 03 직장인을 위한 발표 이미지 단숨에 만들기
발표 자료 제작에서 이미지의 중요성
발표 자료에 필요한 이미지 생성하기
생성한 이미지로 발표 자료 만들기
발표 자료 흐름에 맞는 이미지 추가 생성하기
CHAPTER 03 디자인 실무에 이미지 생성 AI로 아이디어 얻기
LESSON 01 개성 넘치는 스포츠팀 로고 이미지 만들기
이미지 생성 AI로 로고 디자인 아이디어 얻기
이미지 생성 AI로 스포츠팀 로고 만들기
생성된 이미지의 전체적인 색감 변경해보기
LESSON 02 행사 홍보용 포스터 디자인 만들기
홍보용 포스터 제작하기
일러스트 스타일의 음악 공연 포스터
구체적인 아티스트의 이미지 추가하기
생성한 이미지로 포스터 제작하기
LESSON 03 게임, 페르소나 콘셉트 아트 만들기
디자인 작업에 필요한 페르소나 만들기
캐릭터 페르소나 콘셉트 아트 만들기
유명 콘텐츠의 스타일 반영하기
사용자 페르소나 인물 예시 사진 만들기
LESSON 04 독특한 콘셉트의 제품 디자인 영감 얻기
이미지 생성 AI를 제품 디자인에 활용하기
디즈니 빌런 캐릭터 테마의 식기 디자인하기
이미지 생성 AI의 한계와 기술 발전
PART 03
CHAPTER 01 이미지 생성 AI의 현재와 한계, 해결책
LESSON 01 더욱 디테일한 작업을 도와주는 멀티모달과 전이학습
이미지를 함께 사용하는 멀티모달
멀티모달로 구체적인 정보를 전달하는 컨트롤넷
원하는 스타일을 그대로 학습하는 전이학습, 로라
LESSON 02 AI 학습과 개발 이면의 문제점
이미지 생성 AI의 데이터 도용 문제
AI와 환경 문제
LESSON 03 이미지를 믿지 못하는 시대
딥페이크 문제, 진짜 같은 가짜 이미지의 범람
AI가 만든 이미지를 구분하려는 노력
AI로 작업한 창작물을 어디까지 허용할 것인가
CHAPTER 02 생성형 AI, 거대한 변화의 물결
LESSON 01 생성형 AI의 미래
따라잡을 수 없는 AI의 발전 속도
발전 중인 생성형 AI 연구 사례
더욱 자연스러워질 AI와의 동행
[부록] 미드저니 프롬프트 완벽 가이드
LESSON 01 미드저니 프롬프트 이해하기
미드저니의 프롬프트란
커맨드, 파라미터, 도구 알아보기
프롬프트의 구조
프롬프트 입력 시 참고하면 좋은 내용
이미지 프롬프트
이미지 가중치 척도 파라미터
No 파라미터
프롬프트 분석하기
LESSON 02 미드저니의 커맨드 알아보기
미드저니의 커맨드 목록
Blend 커맨드
Describe 커맨드
User Info 커맨드
Show Jobs 커맨드
Shorten 커맨드
LESSON 03 미드저니의 파라미터 알아보기
파라미터 모아보기
Aspect Ratios 파라미터
Chaos 파라미터
No 파라미터
Quality 파라미터
Repeat 파라미터
Seed 파라미터
Stop 파라미터
Stylize 파라미터
Tile 파라미터
Video 파라미터
Weird 파라미터
LESSON 04 미드저니의 도구 알아보기
Vary region 도구
Upscaler 도구
Pan 도구
찾아보기
-끝-
펼쳐보기
접어보기',
        '이미지 생성 AI의 세계로 첫발을 내딛는 왕초보를 위한 완벽한 입문 가이드이다. 미드저니의 최신 버전 V6의 기초 프롬프트부터 고급 활용 예제까지 다양하게 학습해보자. 코딩 지식이나 디자인 기본기가 없는 일반인도 누구나 잠재된 창작 능력을 발휘할 수 있도록 도와줄 것이다.',
        '한빛미디어', '2024-03-05', 25000, 22500, 1, 'https://image.aladin.co.kr/product/33493/85/cover/k552938450_1.jpg',
        10),
       ('9791163035282', 'K122936629', 'Do it! 데이터 분석을 위한 판다스 입문 - 전면 개정판', '목차
01 판다스 실습 환경 준비하기
__01-1 아나콘다 설치하기
__01-2 판다스 실습 준비하기
__01-3 안녕? 주피터 노트북!
__01-4 파이썬 패키지 관리자 pip 알아보기
02 판다스 시작하기
__02-1 판다스가 왜 필요할까?
______ 데이터프레임과 시리즈
__02-2 데이터셋 불러오기
______ 데이터 분석은 데이터셋 불러오기부터
__02-3 데이터 추출하기
______ 열 데이터 추출하기
______ 행 데이터 추출하기
______ loc와 iloc로 데이터 추출하기
______ 행과 열 함께 지정하여 추출하기
__02-4 기초 통계 계산하기
______ 그룹화한 데이터의 평균 구하기
______ 그룹화한 데이터 개수 세기
__02-5 데이터를 그래프로 표현하려면?
03 판다스 자료구조 살펴보기
__03-1 나만의 데이터 만들기
______ 시리즈와 데이터프레임 만들기
__03-2 시리즈 다루기
______ 시리즈의 keys() 메서드
______ 시리즈와 ndarray
______ 시리즈와 불리언
______ 시리즈와 브로드캐스팅
__03-3 데이터프레임 다루기
______ 데이터프레임의 구성
______ 데이터프레임과 불리언 추출
______ 데이터프레임과 브로드캐스팅
__03-4 시리즈와 데이터프레임 데이터 변환하기
__03-5 데이터 저장하고 불러오기
______ 피클로 저장하고 불러오기
______ CSV와 TSV 파일로 저장하고 불러오기
______ 엑셀로 저장하기
______ 다양한 형식으로 저장하기
______ 다양한 데이터 저장 유형
04 그래프 그리기
__04-1 데이터 시각화란?
__04-2 matplotlib 라이브러리란?
______ 그림 영역과 하위 그래프 이해하기
______ 그래프 구성 요소 이해하기
__04-3 matplotlib으로 그래프 그리기
______ 일변량 그래프 그리기
______ 이변량 그래프 그리기
______ 다변량 그래프 그리기
__04-4 seaborn으로 그래프 그리기
______ 다양한 그래프 그려 보기
______ seaborn 스타일 알아보기
______ seaborn 공식 문서 읽는 방법
__04-5 판다스로 그래프 그리기
05 깔끔한 데이터 만들기
__05-1 깔끔한 데이터란?
__05-2 열 이름이 값일 때
______ 하나의 열만 남기기
______ 여러 개의 열 남기기
__05-3 열 이름에 변수가 여러 개일 때
______ 열 이름이 여러 가지 뜻일 때
______ 열 이름 분할하고 새로운 열로 할당하기
______ 한 번에 분할하고 합치기
__05-4 변수가 행과 열 모두에 있을 때
06 apply() 메서드로 함수 적용하기
__06-1 간단한 함수 만들기
__06-2 apply() 메서드 사용하기
______ 시리즈에 함수 적용하기
______ 데이터프레임에 함수 적용하기
__06-3 람다 함수 사용하기
__06-4 벡터화된 함수 사용하기
______ 넘파이와 넘바로 벡터화하기
07 데이터 결합하고 분해하기
__07-1 데이터 묶어 분석하기
__07-2 데이터 연결하기
______ 데이터프레임 살펴보기
______ 행 연결하기
______ 열 연결하기
______ 인덱스나 열 이름이 다른 데이터 연결하기
__07-3 분할된 데이터 연결하기
__07-4 여러 데이터셋 병합하기
__07-5 데이터 정규화하기
08 그룹으로 묶어 연산하기
__08-1 데이터 집계하기
______ groupby() 메서드와 함께 사용하는 집계 메서드
______ agg() 메서드와 groupby() 메서드 조합하기
______ 여러 개의 집계 함수 한 번에 사용하기
__08-2  데이터 변환하기
______ 표준점수 계산하기
______ 평균값으로 결측값 채우기
__08-3 원하는 데이터 걸러 내기
__08-4 그룹 객체 활용하기
______ 그룹 객체란?
__08-5 다중 인덱스 다루기
09 결측값 알아보기
__09-1 결측값이란?
__09-2 결측값은 왜 생길까?
______ 데이터를 불러올 때 생기는 결측값
______ 데이터를 연결할 때 생기는 결측값
______ 직접 입력한 결측값
______ 인덱스를 다시 설정할 때 생기는 결측값
__09-3 결측값 다루기
______ 결측값 처리하기
______ 결측값이 있는 데이터 계산하기
__09-4 판다스 내장 NA 결측값 살펴보기
10 자료형 더 알아보기
__10-1 자료형 살펴보기
__10-2 자료형 변환하기
__10-3 범주형 데이터 알아보기
______ 범주형 데이터 다루기
11 문자열 처리하기
__11-1 문자열 다루기
______ 인덱스로 문자열 추출하기
______ 슬라이싱 구문으로 마지막 문자 추출하기
__11-2 자주 사용하는 문자열 메서드
__11-3 문자열 메서드 더 알아보기
__11-4 문자열 포매팅 알아보기
__11-5 정규식으로 문자열 처리에 날개 달기
______ 정규식이란?
______ compile() 함수
__11-6 regex 라이브러리 활용하기
12 시계열 데이터 알아보기
__12-1 datetime 객체 활용하기
__12-2 datetime으로 변환하기
__12-3 시계열 데이터 불러오기
__12-4 시간 정보 추출하기
__12-5 시간 간격 계산하기
__12-6 datetime 객체의 메서드 활용하기
__12-7 주식 데이터 다루기
__12-8 시간별 데이터 추출하기
__12-9 시간 범위 다루기
______ 시간 범위의 주기 설정하기
__12-10 열 방향으로 값 옮기기
__12-11 시간 주기 변경하기
__12-12 시간대 다루기
__12-13 시계열 데이터 다루는 방법 더 알아보기
찾아보기
펼쳐보기
접어보기',
        '《Do it! 데이터 분석을 위한 판다스》가 파이썬 3.11.X 버전과 판다스 2.X 버전에 맞춰 개정하였다. 기존 판보다 100쪽 이상 증보되어 더 자세하고 친절하다. 파이썬 기초를 뗐다면 이 책으로 판다스를 공부하기 어렵지 않다.',
        '이지스퍼블리싱', '2023-11-20', 25000, 22500, 1, 'https://image.aladin.co.kr/product/32896/65/cover/k122936629_1.jpg',
        10),
       ('9788945006592', '8945006591', '프로그래밍 언어론 - 제10판', '목차
제1장 기본적인 사항
제2장 프로그래밍 언어의 발전사
제3장 구문과 의미론
제4장 어휘 분석과 구문 분석
제5장 이름, 바인딩, 영역
제6장 데이터 타입
제7장 식과 배정문
제8장 문장-수준 제어 구조
제9장 부프로그램
제10장 부프로그램의 구현
제11장 추상 데이터 타입과 캡슐화 구조
제12장 객체-지향 프로그래밍
제13장 동시성
제14장 예외 처리와 이벤트 처리
제15장 함수형 프로그래밍 언어
제16장 논리형 프로그래밍 언어
참고문헌
찾아보기
펼쳐보기
접어보기', '', '피어슨에듀케이션코리아', '2012-12-26', 33000, 33000, 1,
        'https://image.aladin.co.kr/product/2245/60/cover/8945006591_1.jpg', 10),
       ('9791158394790', 'K442937032', '실전! 프로젝트로 배우는 딥러닝 컴퓨터비전 - 영상분석 이론부터 엔비디아 젯슨 나노를 활용한 자율주행 실습까지', '목차
[PART 0] 프롤로그
0.1 딥러닝 영상분석이란?
0.2 인공지능 카메라로 무엇을 할 수 있을까?
0.3 이 책의 실습 준비
___구글 코랩에서 실습 준비
___윈도우 프로젝트 환경 시작하기
[PART 1] 딥러닝 영상분석을 배워보자
▣ 1장: 딥러닝 영상분석 소개
1.1 대표적인 딥러닝 영상분석 기법 3가지
___이미지 분류
___이미지 객체 인식
___이미지 분할
1.2 영상분석을 위한 딥러닝 이해하기
___인공지능 역사 속의 딥러닝
___심층 신경망의 이해
1.3 딥러닝 모델의 기본 구조
___딥러닝 훈련 과정과 추론
___손실 함수와 가중치의 최적화
___경사 하강법과 역전파
___소프트맥스 함수
1.4 ANN MNIST 파이토치 예제
▣ 2장: 딥러닝 영상분석의 시작, CNN
2.1 왜 딥러닝 영상분석에서 CNN이 중요한가?
___영상분석에서 입력 데이터의 특징
___FC 레이어와 Conv 레이어
2.2 CNN 이해하기
___활성화 맵과 특징 맵의 차이
___Conv와 Pooling 레이어의 역할
2.3 딥러닝 학습 과정 준비
___데이터세트 준비
___활성화 함수
___LeNet: CNN MNIST 파이토치 예제
▣ 3장: 딥러닝 영상분석을 위한 학습 과정
3.1 가중치의 최적화 솔버들
___SGD + 모멘텀
___Adagrad
___RMSProp
___Adam
3.2 딥러닝 결과를 향상시키는 방법
___배치 정규화
___데이터 증강과 전이학습
3.3 인기 있는 CNN 네트워크 구조
___AlexNet: 최초의 CNN 기반 이미지 분류 대회 우승
___VGGNet: 단순하면서 성능이 좋은 네트워크
___GoogLeNet: 구글이 만들고 모두가 사용하는 네트워크
___ResNet: 가장 깊고 성능이 좋은 네트워크
3.4 ResNet 파이토치 예제
___파이토치 분류 모델 훈련
___파이토치 분류 모델 추론
▣ 4장: 이미지 분할과 객체 인식
4.1 이미지 분할
___이미지 분할 개념
___모델의 평가지표
___FCN 이미지 분할
4.2 이미지 객체 인식
___이미지 객체 인식의 기본 개념
___Faster R-CNN
4.3 YOLO: 최초의 실시간 객체 인식 네트워크
___YOLO: You Only Look Once
___YOLOv2: 더 좋은, 더 빠른, 더 강력한
___YOLOv3: 점진적 개선
4.4 SSD: Faster R-CNN과 YOLO의 장점을 취합
___SSD: Single Shot Multi Box Detector
4.5 그 밖의 네트워크
___Mask R-CNN: 이미지 객체 분할
___MobileNet v2: 작지만 강력한 객체 인식
___YOLOv4: 새로운 YOLO
___YOLOv4-tiny: 소형 장치용 tiny 버전
4.6 YOLOv4 실습
___실습 준비
___학습
___심층 신경망 학습
___코랩에서 이미지 추론 테스트
[PART 2] 딥러닝을 활용한 영상분석 프로젝트
▣ 5장: 이미지 분류를 활용한 재활용품 분류
5.1 재활용품 분리수거 프로젝트 개요
5.2 데이터세트 클래스
___파이토치 커스텀 데이터세트 클래스
___이미지 분류를 위한 데이터세트 클래스
5.3 심층 신경망 구현
___모듈 임포트
___MODEL의 핵심 구조
_____init__ 메서드 구현
___forward 메서드 구현
5.4 전이학습 심층 신경망 구현
5.5 심층 신경망 학습 클래스
___클래스의 구조
_____init__ 메서드 구현
___prepare_network 메서드 구현
___training_network 메서드 구현
5.6 코랩에서 심층 신경망으로 학습
___파이썬 클래스와 데이터세트 다운로드
___학습
___모델 다운로드
5.7 코랩에서 이미지 추론 테스트
5.8 윈도우 환경에서 추론 실습
___재활용품 분류 추론 코드
___재활용품 분류 추론 실행
5.9 요약
▣ 6장: SSD 사물인지 CCTV
6.1 프로젝트 목표와 사용자 시나리오
6.2 실습 준비
___구글 드라이브 구성 및 소스 코드 다운로드
___오픈 이미지 데이터세트 다운로드
___데이터세트 클래스(OpenImagesDataset)
6.3 네트워크 학습
___SSD MobileNet v1 심층 신경망
___SSD MobileNet v1 학습 클래스
___SSD MobileNet v1 학습하기
___코랩에서 추론 테스트
6.4 윈도우 환경에서 프로젝트 추론 실습
___SSD 사물 인지 CCTV 추론(동영상 및 카메라 영상 추론) 코드 설명
___SSD 사물 인지 CCTV 추론 응용(객체 감지 로깅) 코드 설명
___SSD 사물 인지 CCTV 추론 실행
6.5 요약
▣ 7장: YOLO를 활용한 횡단보도 보행자 보호 시스템
7.1 프로젝트 목표와 사용자 시나리오
7.2 YOLOv5 실습 준비
___데이터세트 준비
___YOLOv5 훈련
7.3 윈도우에서 YOLOv5 추론 실습
___윈도우에서 YOLOv5 추론 준비
___YOLOv5 추론 테스트
7.4 YOLOv7 실습 준비
___YOLOv7 설명
___데이터세트 준비
___YOLOv7 훈련
7.5 윈도우에서 YOLOv7 추론 실습
___윈도우에서 YOLOv7 추론 준비
___YOLOv7 추론 테스트
7.6 요약
[PART 3] 젯슨 나노와 젯봇 활용
▣ 8장: 젯슨 나노 추론 프로젝트
8.1 젯슨 나노 시작하기
___젯슨 나노 명세
___젯슨 나노 부팅하기
___기본 깃허브 소스 확인
___젯슨 나노의 카메라 테스트
___젯슨 나노 딥러닝 기본 세팅 확인
___AI 가속화 엔진
8.2 젯슨 나노에서 재활용품 분류 추론
___재활용품 분류 추론 준비
___재활용품 분류 추론 실행
8.3 SSD 사물 인지 CCTV 젯슨 나노 추론
___정지 사진의 SSD 추론 테스트
___동영상 및 카메라 영상 추론 코드
___SSD 사물 인지 CCTV 추론 응용(객체 감지 로깅) 코드 설명
___SSD 사물 인지 CCTV 추론 실행
___SSD 사물 인지 CCTV 추론 응용(객체 감지 로깅) 실행
8.4 YOLOv4 현장 촬영 블랙박스 젯슨 나노 추론
___추론 준비
___다크넷 블랙박스 추론 코드
8.5 YOLOv5 횡단보도 보행자 보호 시스템 젯슨 나노 추론
___젯슨 나노에서 추론 준비
___TensorRT 최적화
___TensorRT를 활용한 추론
8.6 요약
▣ 9장: 세 가지 AI 모바일 로봇 프로젝트
9.1 AI 모바일 로봇 프로젝트 준비
___AI 모바일 로봇 준비
___AI 모바일 로봇 기본 환경
___AI 모바일 로봇 기본 테스트
___전원 모드 설정
9.2 충돌 회피를 위한 자동 긴급 제동
___충돌 회피를 위한 상황 데이터 수집
___AlexNet 네트워크로 훈련
___충돌 회피를 위한 자동 긴급 제동 코드
___AI-모바일 로봇 자동 긴급 제동 테스트
9.3 팔로잉봇
___추론 가속화 엔진 라이브러리
___추론 가속화 사물 인식 모델 예제 코드
___팔로잉봇 테스트 코드
___미리 훈련된 모델로 팔로잉봇 테스트
___CCTV용 SSD 모델로 팔로잉봇 테스트
9.4 차선 인지 자율주행
___차선 데이터 수집(간이 테스트)
___ResNet-18 네트워크로 회귀 모델 훈련
___차선 인식 자율주행 테스트 (간이 테스트)
___차선 인식 자율주행 테스트 실행
___차선 데이터 수집과 훈련 (트랙 테스트)
___차선 인식 자율주행 테스트(트랙 테스트)
9.5 요약
펼쳐보기
접어보기',
        '딥러닝 컴퓨터비전과 자율 주행의 전문가가 되고자 하는 대학생과 개발 입문자를 위한 학습 자료로, 딥러닝 영상처리의 핵심 이론과 관련 문제 해결에 적용 가능한 입문용 미니 프로젝트들을 다룬다. 책은 총 3부로 구성돼 있다.',
        '위키북스', '2024-01-12', 35000, 31500, 1, 'https://image.aladin.co.kr/product/33144/75/cover/k442937032_1.jpg',
        10),
       ('9791158395124', 'K722930765', '게임 개발을 위한 미드저니, 스테이블 디퓨전 완벽 활용법', '목차
[PART 01] 게임 개발과 생성형 인공지능
생성형 인공지능
게임 개발에 활용하기
___프로그래밍
___게임 시나리오
___그래픽 디자인
게임 그래픽 디자인과 생성형 인공지능
유용한 그림 인공지능 서비스
[PART 02] 미드저니로 게임 이미지 리소스 만들기
미드저니 사용하기
___미드저니 가입하기
___이미지 생성하기
___변형 이미지 생성하기
___프롬프트 작성 방법
미드저니 프롬프트 엔지니어링
게임 이미지 제작에 특화된 만능 템플릿
___그래픽 콘셉트 설정하기
___미드저니 프롬프트 고민 해결
___리소스별 만능 템플릿 작성 방법
___실전! 만능 템플릿으로 공상 과학 콘셉트 이미지 리소스 만들기
게임 캐릭터 이미지 만들기
___게임 캐릭터 제작을 위한 다양한 프롬프트
게임 UI용 이미지 만들기
___게임 UI 제작을 위한 다양한 프롬프트
게임 아이템과 아이콘 이미지 만들기
___아이템과 아이콘 제작을 위한 다양한 프롬프트
[PART 03] 스테이블 디퓨전으로 이미지 개선하기
구글 코랩으로 스테이블 디퓨전 사용하기
___코랩 Pro 결제하기
___코랩으로 스테이블 디퓨전 실행하기
스테이블 디퓨전 사용 방법
___스테이블 디퓨전 기본 환경 설정
___프롬프트의 기본
___생성한 이미지 저장하기
게임 이미지 제작에 특화된 스테이블 디퓨전 환경 설정
___모델 설정하기
___이미지 보정을 위한 VAE 설정하기
___특정 이미지를 생성하기 위한 LoRA 적용하기
기존 이미지를 새로운 이미지로 만드는 ‘이미지 → 이미지’ 기능
___이미지 → 이미지 기능 사용 방법
___선택한 부분만 수정하는 인페인트 기능
___이미지 크기를 512×512로 고정하기
[PART 04] 포토샵으로 이미지 다듬기
게임 이미지 추출하기
___캐릭터 이미지 추출하기
___UI 이미지 추출하기
___아이콘 이미지 추출하기
포토샵 인공지능으로 이미지 개선하기
___포토샵의 생성형 채우기(Generative Fill)
___생성형 채우기를 활용한 게임 이미지 수정하기
___생성 크레딧
[PART 05] 게임 이미지 리소스 완성하기
이미지 화질 향상하기
___이미지 업스케일링
___이미지 업스케일링 서비스 비교
이미지 용량 압축하기
___이미지 압축 서비스 비교
___게임 이미지 리소스에 적용하기
[PART 06] 실전! 플랫폼 게임 제작하기
유니티 설치 및 환경 설정
___유니티 설치하기
___실습 게임 프로젝트 불러오기
이번 장에서 만들 플랫폼 게임
배경 이미지 제작하기
___ [1단계] 미드저니로 이미지 생성하기
___ [2단계] 이미지 수정하기
발판 이미지 제작하기
___ [1단계] 미드저니로 이미지 생성하기
___ [2단계] 이미지 수정하기
캐릭터 이미지 제작하기
___ [1단계] 미드저니로 이미지 생성하기
___ [2단계] 이미지 수정하기
UI 이미지 제작하기
___ [1단계] 미드저니로 이미지 생성하기
___ [2단계] 이미지 수정하기
아이템 및 아이콘 이미지 제작하기
___ [1단계] 미드저니로 이미지 생성하기
___ [2단계] 이미지 수정하기
실습 게임에 이미지 리소스 적용하기
___발판 이미지 사전 작업
___캐릭터 이미지 사전 작업, 뼈대 추가하기
___실습 게임에 이미지 리소스 적용하기 - 메인 메뉴 씬
___실습 게임에 이미지 리소스 적용하기 - 게임 씬
___실습 게임에 이미지 리소스 적용하기 - 캐릭터 이미지
___실습 게임에 이미지 리소스 적용하기 - 생명 아이템 및 아이콘
___UI 리소스의 크기와 위치 조절하기
___발판 이미지의 콜라이더 영역을 이미지에 맞추기
마치며
[부록A] 포토샵 준비하기
___포토샵 플랜 선택하기
___포토샵 설치하기
___기본 환경 설정
[부록B] 알고 있으면 좋은 포토샵 기능
___기본 기능과 단축키
___유용한 기능과 단축키
펼쳐보기
접어보기',
        '여러분의 상상이 실제 게임으로 제작되는 순간을 상상해 보자. 바로 그 순간이 이 책에서 시작된다. 불가능한 것이 없는 세상. 이 책은 그 세상의 문을 여는 열쇠다. 이 책에서는 생성형 인공지능을 통해 게임 개발의 새로운 차원을 경험할 수 있다.',
        '위키북스', '2024-04-16', 28000, 25200, 1, 'https://image.aladin.co.kr/product/33739/78/cover/k722930765_2.jpg',
        10),
       ('9791162243077', 'K342631735', '이것이 취업을 위한 코딩 테스트다 with 파이썬 - 취업과 이직을 결정하는 알고리즘 인터뷰 완벽 가이드, C/C++, 자바 코드 제공', '목차
__지은이의 글
__리뷰어의 글
__들어가기 전에
__이 책의 구성
__동영상 강의 및 Q&A
PART 01 코딩 테스트, 무엇을 어떻게 준비할까?
Chapter 01 코딩 테스트 개요
__1 코딩 테스트 개념과 배경
__2 실습 환경 구축하기
__3 복잡도
Chapter 02 16~20년 코딩 테스트 기출문제 유형 분석
__1 최신 출제 경향과 준비 방향
__2 연도별 코딩 테스트 유형 분석
GUIDE 성공적인 취업을 위한 가이드
__기술 면접 1 채용 프로세스
__기술 면접 2 기술 면접의 대표 유형
__기술 면접 3 기술 면접 준비
__추가 학습 1 알고리즘 문제 풀이 사이트
__추가 학습 2 커뮤니티 사이트
PART 02 주요 알고리즘 이론과 [실전 문제]
Chapter 03 그리디
__1 당장 좋은 것만 선택하는 그리디
__2 [실전 문제] 큰 수의 법칙
__3 [실전 문제] 숫자 카드 게임
__4 [실전 문제] 1이 될 때까지
Chapter 04 구현
__1 아이디어를 코드로 바꾸는 구현
__2 [실전 문제] 왕실의 나이트
__3 [실전 문제] 게임 개발
Chapter 05 DFS/BFS
__1 꼭 필요한 자료구조 기초
__2 탐색 알고리즘 DFS/BFS
__3 [실전 문제] 음료수 얼려 먹기
__4 [실전 문제] 미로 탈출
Chapter 06 정렬
__1 기준에 따라 데이터를 정렬
__2 [실전 문제] 위에서 아래로
__3 [실전 문제] 성적이 낮은 순서로 학생 출력하기
__4 [실전 문제] 두 배열의 원소 교체
Chapter 07 이진 탐색
__1 범위를 반씩 좁혀가는 탐색
__2 [실전 문제] 부품 찾기
__3 [실전 문제] 떡볶이 떡 만들기
Chapter 08 다이나믹 프로그래밍
__1 다이나믹 프로그래밍
__2 [실전 문제] 1로 만들기
__3 [실전 문제] 개미 전사
__4 [실전 문제] 바닥 공사
__5 [실전 문제] 효율적인 화폐 구성
Chapter 09 최단 경로
__1 가장 빠른 길 찾기
__2 [실전 문제] 미래 도시
__3 [실전 문제] 전보
Chapter 10 그래프 이론
__1 다양한 그래프 알고리즘
__2 [실전 문제] 팀 결성
__3 [실전 문제] 도시 분할 계획
__4 [실전 문제] 커리큘럼
__
PART 03 알고리즘 유형별 기출문제
Chapter 11 그리디 문제
__[한 장으로 보는 알고리즘] 그리디
__Q 01 모험가 길드
__Q 02 곱하기 혹은 더하기
__Q 03 문자열 뒤집기
__Q 04 만들 수 없는 금액
__Q 05 볼링공 고르기
__Q 06 무지의 먹방 라이브
Chapter 12 구현 문제
__[한 장으로 보는 알고리즘] 구현
__Q 07 럭키 스트레이트
__Q 08 문자열 재정렬
__Q 09 문자열 압축
__Q 10 자물쇠와 열쇠
__Q 11 뱀
__Q 12 기둥과 보 설치
__Q 13 치킨 배달
__Q 14 외벽 점검
Chapter 13 DFS/BFS 문제
__[한 장으로 보는 알고리즘] DFS/BFS
__Q 15 특정 거리의 도시 찾기
__Q 16 연구소
__Q 17 경쟁적 전염
__Q 18 괄호 변환
__Q 19 연산자 끼워 넣기
__Q 20 감시 피하기
__Q 21 인구 이동
__Q 22 블록 이동하기
Chapter 14 정렬 문제
__[한 장으로 보는 알고리즘] 정렬
__Q 23 국영수
__Q 24 안테나
__Q 25 실패율
__Q 26 카드 정렬하기
Chapter 15 이진 탐색 문제
__[한 장으로 보는 알고리즘] 이진 탐색
__Q 27 정렬된 배열에서 특정 수의 개수 구하기
__Q 28 고정점 찾기
__Q 29 공유기 설치
__Q 30 가사 검색
Chapter 16 다이나믹 프로그래밍 문제
__[한 장으로 보는 알고리즘] 다이나믹 프로그래밍
__Q 31 금광
__Q 32 정수 삼각형
__Q 33 퇴사
__Q 34 병사 배치하기
__Q 35 못생긴 수
__Q 36 편집 거리
Chapter 17 최단 경로 문제
__[한 장으로 보는 알고리즘] 최단 경로
__Q 37 플로이드
__Q 38 정확한 순위
__Q 39 화성 탐사
__Q 40 숨바꼭질
Chapter 18 그래프 이론 문제
__[한 장으로 보는 알고리즘] 그래프 이론
__Q 41 여행 계획
__Q 42 탑승구
__Q 43 어두운 길
__Q 44 행성 터널
__Q 45 최종 순위
Chapter 19 2020년 상반기 삼성전자 기출문제
__Q 46 아기 상어
__Q 47 청소년 상어
__Q 48 어른 상어
PART 04 부록
__APPENDIX A 코딩 테스트를 위한 파이썬 문법
__APPENDIX B 기타 알고리즘
__APPENDIX C 개발형 코딩 테스트
__APPENDIX D 알고리즘 유형별 기출문제 풀이
__찾아보기
펼쳐보기
접어보기',
        'IT 취준생이라면 누구나 가고 싶어 하는 카카오, 라인, 삼성전자의 2016년부터 2020년까지의 코딩 테스트와 알고리즘 대회의 기출문제를 엄선하여 수록하였다. 최근 5년간의 코딩 테스트 기출문제를 분석하여 반드시 알아야 하는 알고리즘을 8가지로 정리하였다.',
        '한빛미디어', '2020-08-05', 34000, 30600, 1, 'https://image.aladin.co.kr/product/24788/21/cover/k342631735_1.jpg',
        10),
       ('9791156645689', 'K772836574', '디지털 논리회로 - 이론, 실습, 시뮬레이션, 4판', '목차
Chapter 01 들어가기
01 디지털과 아날로그
02 디지털 정보의 표현
03 논리 레벨과 펄스파형
04 디지털 집적회로
05 ADC와 DAC
연습문제
기출문제
Chapter 02 수(數)의 체계
01 진수
02 진법 변환
03 2진수 정수 연산과 보수
04 2진 부동소수점수의 표현
연습문제
기출문제
Chapter 03 디지털 코드
01 BCD 코드와 3초과 코드
02 다양한 2진 코드들
03 그레이 코드
04 에러 검출 코드
05 영숫자 코드
연습문제
기출문제
Chapter 04 논리게이트
01 논리 레벨
02 NOT 게이트와 버퍼 게이트
03 AND 게이트
04 OR 게이트
05 NAND 게이트
06 NOR 게이트
07 XOR 게이트
08 XNOR 게이트
09 정논리와 부논리
10 게이트의 전기적 특성
연습문제
기출문제
Chapter 05 불 대수
01 기본 논리식의 표현
02 불 대수 법칙
03 논리회로의 논리식 변환
04 논리식의 회로 구성
05 불 대수식의 표현 형태
06 불 대수 법칙을 이용한 논리식의 간소화
연습문제
기출문제
Chapter 06 논리식의 간소화
01 2변수 카르노 맵
02 3변수 카르노 맵
03 4변수 카르노 맵
04 선택적 카르노 맵
05 논리식의 카르노 맵 작성
06 5변수, 6변수 카르노 맵
07 퀸-맥클러스키 간소화 알고리즘
08 여러 개의 출력 함수
09 NAND와 NOR 게이트로의 변환
10 XOR와 XNOR 게이트
연습문제
기출문제
Chapter 07 조합논리회로
01 가산기
02 비교기
03 디코더
04 인코더
05 멀티플렉서
06 디멀티플렉서
07 코드 변환기
08 패리티 발생기/검출기
연습문제
기출문제
Chapter 08 플립플롭
01 기본적인 플립플롭
02 SR 플립플롭
03 D 플립플롭
04 JK 플립플롭
05 T 플립플롭
06 비동기 입력
07 플립플롭의 동작 특성
08 멀티바이브레이터
연습문제
기출문제
Chapter 09 동기 순서논리회로
01 동기 순서논리회로 개요
02 동기 순서논리회로의 해석 과정
03 플립플롭의 여기표
04 동기 순서논리회로의 설계 과정
05 동기 순서논리회로의 설계 예
06 미사용 상태의 설계
07 카운터의 설계
08 상태방정식을 이용한 설계
09 디코더와 플립플롭을 사용한 설계
연습문제
기출문제
Chapter 10 카운터
01 비동기식 카운터
02 동기식 카운터
03 기타 카운터
04 IC 카운터
05 카운터의 응용
연습문제
기출문제
Chapter 11 레지스터
01 레지스터의 분류
02 직렬입력-직렬출력 레지스터
03 직렬입력-병렬출력 레지스터
04 병렬입력-직렬출력 레지스터
05 병렬입력-병렬출력 레지스터
06 양방향 시프트 레지스터
07 범용 시프트 레지스터
08 시프트 레지스터의 응용
연습문제
기출문제
Chapter 12 메모리와 프로그래머블 논리장치
01 메모리 개요
02 ROM
03 RAM
04 플래시메모리
05 프로그래머블 논리장치(PLD)
연습문제
기출문제
Chapter 13 논리회로 실험
01 실험 개요
02 기본 논리게이트
03 불 대수와 드모르간의 정리
04 XOR 게이트
05 가산기와 감산기
06 디코더와 인코더
07 멀티플렉서와 디멀티플렉서
08 코드 변환기
09 플립플롭
10 비동기식 카운터
11 동기식 카운터
12 레지스터
13 멀티바이브레이터
Chapter 14 Term Project
01 하드웨어 제작 도구 사용법
02 8비트 병렬 가감산기
03 교통 신호등 제어
04 디지털 시계
찾아보기
펼쳐보기
접어보기',
        '입문자에게 꼭 맞는 이론 설명과 유용한 디지털 논리회로 실험 자료를 수록한 교재다. 디지털 하드웨어를 처음 배우는 전기, 전자, 컴퓨터, 정보통신 관련 학과 학생을 대상으로 집필되었다. 친절한 설명과 풍부한 그림으로 이론을 쉽게 이해하고, 이를 바탕으로 바로 실험할 수 있도록 구성했다.',
        '한빛아카데미(교재)', '2022-01-15', 32000, 32000, 1,
        'https://image.aladin.co.kr/product/28724/62/cover/k772836574_1.jpg', 10),
       ('9788960774384', '8960774383', '미래를 바꾼 아홉 가지 알고리즘 - 컴퓨터 세상을 만든 기발한 아이디어들', '목차
1장. 시작하며: 컴퓨터를 움직이는 위대한 아이디어들
2장. 검색엔진 인덱싱: 세상에서 가장 큰 건초 더미에서 바늘 찾기
3장. 페이지랭크: 구글을 출범시킨 기술
4장. 공개 키 암호화: 공개 엽서에 비밀을 적어 아무도 모르게 보내는 방법
5장. 오류 정정 코드: 데이터 오류를 스스로 찾아 고치는 마법
6장. 패턴 인식과 인공지능: 사람처럼 학습하고 생각하는 컴퓨터
7장. 데이터 압축: 책 한 권을 종이 한 장에 담기
8장. 데이터베이스: 일관성을 향한 여정
9장. 디지털 서명: 진짜 누가 이 소프트웨어를 작성했을까
10장. 계산 가능성과 결정 불가능성: 컴퓨터로 모든 문제를 해결할 수 있을까?
11장. 마치면서: 미래의 알고리즘과 진화하는 컴퓨터
펼쳐보기
접어보기',
        '우리가 컴퓨터를 사용할 때, 컴퓨터 안에서는 무슨 일이 일어나고 있을까? 존 맥코믹은 이를 가능케 한 아홉 가지 위대한 알고리즘 이면의 기본적 아이디어를 다양한 비유와 예를 활용해 쉽고 정확하게 설명한다.',
        '에이콘출판', '2013-05-31', 18800, 16920, 1, 'https://image.aladin.co.kr/product/2683/75/cover/8960774383_1.jpg',
        10),
       ('9788966262335', '8966262333', '함께 자라기 - 애자일로 가는 길', '목차
1 자라기
당신은 몇 년 차?
자기계발은 복리로 돌아온다
학습 프레임과 실행 프레임
가장 학습하기 힘든 직업이 살아남는다
달인이 되는 비결
수십 년 동안 전문가가 안 되는 비결
당신이 제자리걸음인 이유
의도적 수련의 일상적 예시
프로그래밍 언어 배우기의 달인
실수는 예방하는 것이 아니라 관리하는 것이다
뛰어난 선생에 대한 미신
나홀로 전문가에 대한 미신
2 함께
소프트웨어 관리자의 개선 우선순위
협력을 통한 추상화
신뢰를 깎는 공유인가 신뢰를 쌓는 공유인가
객관성의 주관성
이것도 모르세요?
하향식 접근의 함정
전문가팀이 실패하는 이유
구글이 밝힌 탁월한 팀의 비밀
쾌속 학습팀
프로젝트 확률론
3 애자일
애자일의 씨앗
애자일 도입 성공 요인 분석
당신의 조직에 새 방법론이 먹히지 않는 이유
애자일을 애자일스럽게 도입하기
펼쳐보기
접어보기', '일하는 방법의 핵심과 통찰을 다룬다. 개인의 힘으로는 극복할 수 없는 한계를 깨뜨리려면 모두가 같이 발전해야 한다. 나 그리고 더 나아가 남을 변화시키는 삶에 대해 얘기한다.', '인사이트',
        '2018-11-30', 13000, 11700, 1, 'https://image.aladin.co.kr/product/17597/74/cover/8966262333_1.jpg', 10),
       ('9791156645771', 'K952836881', '데이터베이스 개론 - 제3판', '목차
Chapter 01 데이터베이스 기본 개념
01 데이터베이스의 필요성
데이터와 정보
정보 시스템과 데이터베이스
02 데이터베이스의 정의와 특징
데이터베이스의 정의
데이터베이스의 특징
03 데이터 과학 시대의 데이터
형태에 따른 데이터 분류
특성에 따른 데이터 분류
요약
연습문제
Chapter 02 데이터베이스 관리 시스템
01 데이터베이스 관리 시스템의 등장 배경
02 데이터베이스 관리 시스템의 정의
03 데이터베이스 관리 시스템의 장단점
04 데이터베이스 관리 시스템의 발전 과정
요약
연습문제
Chapter 03 데이터베이스 시스템
01 데이터베이스 시스템의 정의
02 데이터베이스의 구조
스키마
3단계 데이터베이스 구조
데이터 독립성
데이터 사전
03 데이터베이스 사용자
데이터베이스 관리자
최종 사용자
응용 프로그래머
04 데이터 언어
데이터 정의어
데이터 조작어
데이터 제어어
05 데이터베이스 관리 시스템의 구성
질의 처리기
저장 데이터 관리자
요약
연습문제
Chapter 04 데이터 모델링
01 데이터 모델링과 데이터 모델의 개념
02 개체 - 관계 모델
개체
속성
관계
E-R 다이어그램
03 논리적 데이터 모델
논리적 데이터 모델의 개념과 특성
계층 데이터 모델
네트워크 데이터 모델
요약
연습문제
Chapter 05 관계 데이터 모델
01 관계 데이터 모델의 개념
관계 데이터 모델의 기본 용어
릴레이션과 데이터베이스의 구성
릴레이션의 특성
키의 종류
02 관계 데이터 모델의 제약
개체 무결성 제약조건
참조 무결성 제약조건
요약
연습문제
Chapter 06 관계 데이터 연산
01 관계 데이터 연산의 개념
02 관계 대수
관계 대수의 개념과 연산자
일반 집합 연산자
순수 관계 연산자
관계 대수를 이용한 질의 표현
확장된 관계 대수 연산자
03 관계 해석
요약
연습문제
Chapter 07 데이터베이스 언어 SQL
01 SQL의 소개
02 SQL를 이용한 데이터 정의
SQL의 데이터 정의 기능
테이블의 생성
테이블의 변경
테이블의 삭제
03 SQL을 이용한 데이터 조작
SQL의 데이터 조작 기능
데이터의 검색
데이터의 삽입
데이터의 수정
데이터의 삭제
04 뷰
뷰의 개념
뷰의 생성
뷰의 활용
뷰의 삭제
05 삽입 SQL
삽입 SQL의 개념과 특징
커서가 필요 없는 삽입 SQL
커서가 필요한 삽입 SQL
요약
연습문제
Chapter 08 데이터베이스 설계
01 데이터베이스 설계 단계
02 요구 사항 분석
03 개념적 설계
개체와 속성 추출
관계 추출
E-R 다이어그램 작성
04 논리적 설계
릴레이션 스키마 변환 규칙
릴레이션 스키마 변환 규칙을 이용한 논리적 설계
05 물리적 설계와 구현
요약
연습문제
Chapter 09 정규화
01 정규화의 개념과 이상 현상
02 함수 종속
03 기본 정규형과 정규화 과정
정규화의 개념과 정규형의 종류
제1정규형
제2정규형
제3정규형
보이스/코드 정규형
제4정규형과 제5정규형
정규화 과정 정리
요약
연습문제
Chapter 10 회복과 병행 제어
01 트랜잭션
트랜잭션의 개념
트랜잭션의 특성
트랜잭션과 연산
트랜잭션의 상태
02 장애와 회복
장애의 유형
데이터베이스의 저장 연산
회복 기법
03 병행 제어
병행 수행과 병행 제어
병행 수행의 문제
트랜잭션 스케줄
병행 제어 기법
요약
연습문제
Chapter 11 보안과 권한 관리
01 보안
02 권한 관리
권한 관리의 개념
권한의 부여
권한의 취소
역할의 부여와 취소
요약
연습문제
Chapter 12 데이터베이스 응용 기술
01 객체지향 데이터베이스
02 객체관계 데이터베이스
03 분산 데이터베이스 시스템
04 멀티미디어 데이터베이스 시스템
05 기타 데이터베이스 응용 기술
요약
연습문제
Chapter 13 데이터 과학과 빅데이터
01 데이터 과학
02 빅데이터
03 빅데이터 저장 기술 : NoSQL
04 빅데이터 분석 기술 : 데이터 마이닝
04 빅데이터 표현 기술 : 데이터 시각화
요약
연습문제
Appendix 데이터베이스의 활용
01 오라클의 소개와 설치
02 오라클을 이용한 데이터베이스 구축과 활용
03 Live SQL을 이용한 데이터베이스 구축과 활용
04 프로젝트 : 친구야 함께 쓰자
펼쳐보기
접어보기',
        '기초 개념부터 빅데이터까지 큰 흐름이 보이는 데이터베이스 교과서다. 마인드맵으로 생소한 개념 간의 관계를 한눈에 보여주고, 친근한 예와 비유를 들어 명료하게 풀어내, 데이터베이스 기본기를 탄탄히 다져준다. 3판에서는 빅데이터 표현 기술이 더 추가되었다.',
        '한빛아카데미(교재)', '2022-01-15', 29000, 29000, 1,
        'https://image.aladin.co.kr/product/28756/22/cover/k952836881_1.jpg', 10),
       ('9791162241745', 'K972635587', '밑바닥부터 시작하는 딥러닝 2 - 파이썬으로 직접 구현하며 배우는 순환 신경망과 자연어 처리', '목차
CHAPTER 1 신경망 복습
__1.1 수학과 파이썬 복습
__1.2 신경망의 추론
__1.3 신경망의 학습
__1.4 신경망으로 문제를 풀다
__1.5 계산 고속화
__1.6 정리
CHAPTER 2 자연어와 단어의 분산 표현
__2.1 자연어 처리란
__2.2 시소러스
__2.3 통계 기반 기법
__2.4 통계 기반 기법 개선하기
__2.5 정리
CHAPTER 3 word2vec
__3.1 추론 기반 기법과 신경망
__3.2 단순한 word2vec
__3.3 학습 데이터 준비
__3.4 CBOW 모델 구현
__3.5 word2vec 보충
__3.6 정리
CHAPTER 4 word2vec 속도 개선
__4.1 word2vec 개선 ①
__4.2 word2vec 개선 ②
__4.3 개선판 word2vec 학습
__4.4 word2vec 남은 주제
__4.5 정리
CHAPTER 5 순환 신경망(RNN)
__5.1 확률과 언어 모델
__5.2 RNN이란
__5.3 RNN 구현
__5.4 시계열 데이터 처리 계층 구현
__5.5 RNNLM 학습과 평가
__5.6 정리
CHAPTER 6 게이트가 추가된 RNN
__6.1 RNN의 문제점
__6.2 기울기 소실과 LSTM
__6.3 LSTM 구현
__6.4 LSTM을 사용한 언어 모델
__6.5 RNNLM 추가 개선
__6.6 정리
CHAPTER 7 RNN을 사용한 문장 생성
__7.1 언어 모델을 사용한 문장 생성
__7.2 seq2seq
__7.3 seq2seq 구현
__7.4 seq2seq 개선
__7.5 seq2seq를 이용하는 애플리케이션
__7.6 정리
CHAPTER 8 어텐션
__8.1 어텐션의 구조
__8.2 어텐션을 갖춘 seq2seq 구현
__8.3 어텐션 평가
__8.4 어텐션에 관한 남은 이야기
__8.5 어텐션 응용
__8.6 정리
APPENDIX A 시그모이드 함수와 tanh 함수의 미분
__A.1 시그모이드 함수
__A.2 tanh 함수
__A.3 정리
APPENDIX B WordNet 맛보기
__B.1 NLTK 설치
__B.2 WordNet에서 동의어 얻기
__B.3 WordNet과 단어 네트워크
__B.4 WordNet을 사용한 의미 유사도
APPENDIX C GRU
__C.1 GRU의 인터페이스
__C.2 GRU의 계산 그래프
펼쳐보기
접어보기', '1권 에서 다루지 못했던 순환 신경망(RNN)을 자연어 처리와 시계열 데이터 처리에 사용하는 딥러닝 기술에 초점을 맞춰 살펴본다. 8장 구성으로 전체를 하나의 이야기처럼 순서대로 읽도록 꾸몄다.',
        '한빛미디어', '2019-05-01', 29000, 26100, 1, 'https://image.aladin.co.kr/product/18964/12/cover/k972635587_1.jpg',
        10),
       ('9791188621484', 'K122534513', '인스파이어드 - 감동을 전하는 IT 제품은 어떻게 만들어지는가?, 개정증보판', '목차
PART I 최고의 기술 기업에서 배운 것 1
CHAPTER 1 훌륭한 제품을 이끄는 사람 5
CHAPTER 2 기술 중심의 제품과 서비스 7
CHAPTER 3 스타트업: 제품/시장 궁합 찾기 9
CHAPTER 4 성장 단계의 회사: 성공을 위한 확장 11
CHAPTER 5 대기업: 끊임없는 제품 혁신 13
CHAPTER 6 실패한 제품의 근본 원인 15
CHAPTER 7 린과 애자일을 넘어 25
CHAPTER 8 핵심 개념 28
PART II 사람 37
CHAPTER 9 강한 제품팀의 원칙 40
CHAPTER 10 제품 관리자 51
CHAPTER 11 제품 디자이너 66
CHAPTER 12 엔지니어 74
CHAPTER 13 제품 마케팅 매니저 78
CHAPTER 14 지원 역할 82
CHAPTER 15 사례 소개: 제인 매닝, 구글 86
CHAPTER 16 리더십의 역할 90
CHAPTER 17 제품 총괄의 역할 95
CHAPTER 18 기술 총괄의 역할 104
CHAPTER 19 제품 실행 관리자의 역할 109
CHAPTER 20 제품팀을 나누는 원칙 111
CHAPTER 21 사례 소개: 레아 힉맨, 어도비 123
PART III 제품 129
CHAPTER 22 제품 로드맵의 문제 134
CHAPTER 23 제품 로드맵의 대안 137
CHAPTER 24 제품 비전과 제품 전략 145
CHAPTER 25 제품 비전의 원칙 151
CHAPTER 26 1제품 전략의 원칙 154
CHAPTER 27 제품 원칙 156
CHAPTER 28 OKR 기법 161
CHAPTER 29 제품팀의 목표 164
CHAPTER 30 확장 단계에서의 제품 목표 170
CHAPTER 31 제품 에반젤리즘 173
CHAPTER 32 사례 소개: 알렉스 프레스랜드, BBC 177
PART IV 프로세스 181
CHAPTER 33 제품 발견의 원칙 188
CHAPTER 34 제품 발견 기법 개요 195
CHAPTER 35 기회 평가 기법 205
CHAPTER 36 고객 편지 기법 209
CHAPTER 37 스타트업 캔버스 기법 213
CHAPTER 38 스토리 맵 기법 219
CHAPTER 39 고객 발견 프로그램 기법 222
CHAPTER 40 사례 소개: 마티나 로쳉고, 마이크로소프트 236
CHAPTER 41 고객 인터뷰 242
CHAPTER 42 안내인 테스트 기법 246
CHAPTER 43 고객 일탈 행동의 힘 248
CHAPTER 44 핵 데이 252
CHAPTER 45 프로토타입의 원칙 258
CHAPTER 46 실현 가능성 프로토타입 기법 260
CHAPTER 47 사용자 프로토타입 기법 263
CHAPTER 48 라이브 데이터 프로토타입 기법 266
CHAPTER 49 혼합 프로토타입 기법 269
CHAPTER 50 사용성 테스트 275
CHAPTER 51 가치 테스트 286
CHAPTER 52 수요 테스트 기법 289
CHAPTER 53 정성적인 가치 테스트 기법 296
CHAPTER 54 정량적인 가치 테스트 기법 303
CHAPTER 55 실현 가능성 테스트 313
CHAPTER 56 사업 유효성 테스트 317
CHAPTER 57 사례 소개: 케이트 아놀드, 넷플릭스 325
CHAPTER 58 제품 발견 스프린트 기법 330
CHAPTER 59 파일럿팀 기법 335
CHAPTER 60 로드맵 끊기 337
CHAPTER 61 이해 관계자 관리하기 341
CHAPTER 62 제품 학습 공유하기 350
CHAPTER 63 사례 소개: 카미유 허스트, 애플 352
PART V 문화 355
CHAPTER 64 좋은 제품팀/나쁜 제품팀 357
CHAPTER 65 혁신을 잃는 10가지 이유 361
CHAPTER 66 속도를 잃는 10가지 이유 365
CHAPTER 67 강력한 제품 문화 구축하기 368
펼쳐보기
접어보기',
        '최고의 회사들이 감동적이고 성공하는 제품을 어떻게 만들고 있는지, 그리고 나아가 이를 제품에 어떻게 적용할 수 있는지를 보여주는 책. 제품 관리 전문가인 저자는 자신의 경험을 아낌없이 공유하고, 최고의 회사들이 어떻게 제품을 만드는지를 파헤친다.',
        '제이펍', '2018-12-28', 24000, 21600, 1, 'https://image.aladin.co.kr/product/17665/92/cover/k122534513_2.jpg', 10),
       ('9791189433185', 'K392935264', '사이버네틱스 - 동물과 기계의 제어와 커뮤니케이션', '목차
머리말 1 · 더그 힐
머리말 2 · 샌조이 미터
제2판 서문
글머리에
제1장 · 뉴턴의 시간과 베르그손의 시간
제2장 · 군과 통계역학
제3장 · 시계열, 정보 및 커뮤니케이션
제4장 · 되먹임과 진동
제5장 · 계산기와 신경계
제6장 · 게슈탈트와 보편적 개념
제7장 · 사이버네틱스와 정신병리학
제8장 · 정보, 언어 및 사회
제9장 · 학습하는 기계, 스스로 증식하는 기계
제10장 · 뇌파와 자체 조직 계
역자 후기
펼쳐보기
접어보기',
        '20세기를 관통하는 거대한 지적 운동의 진앙이자 그 실패의 기록이며, 현대 세계를 구성하는 보이지 않는 퍼즐 조각이기도 하다. 책을 읽는 독자는 20세기의 지적 거인과 직접 대면하는 흔치 않은 기회를 얻게 될 것이다.',
        '읻다', '2023-08-24', 23000, 20700, 1, 'https://image.aladin.co.kr/product/32336/30/cover/k392935264_1.jpg', 10),
       ('9791192987590', 'K202936283',
        '프롬프트 엔지니어링으로 인공지능 제대로 일 시키기 - 챗GPT, 바드, 클로바X, 스테이블 디퓨전 등 직무별 업무에 활용하는 효과적인 AI 사용법', '',
        '질문만 하면 바로 답을 내리는 인공지능이라도 어떻게 쓰느냐에 따라 천차만별의 결과를 만든다. 다양한 인공지능 서비스에 적용할 수 있는 프롬프트 엔지니어링을 배우고, 실질적으로 도움이 되는 직무별 인공지능 활용법을 살펴보자.',
        '제이펍', '2023-11-10', 22000, 19800, 1, 'https://image.aladin.co.kr/product/32764/53/cover/k202936283_1.jpg', 10),
       ('9791156645429', 'K622733585', '쉽게 배우는 소프트웨어 공학 - 2판', '',
        '소프트웨어 공학 이론을 핵심만 추려 명쾌하게 정리해준다. 일상에서 흔히 접할 수 있는 예시를 통해 소프트웨어 공학의 핵심 개념을 이끌어내고, 풍부한 삽화와 도해를 더해 기초 지식이 없어도 쉽게 이해할 수 있도록 하였다.',
        '한빛아카데미(교재)', '2021-06-30', 30000, 30000, 1,
        'https://image.aladin.co.kr/product/27465/55/cover/k622733585_1.jpg', 10),
       ('9791156645412', 'K352733287', 'C로 배우는 쉬운 자료구조 - 4판', '목차
Chapter 01 자료구조 소개
01 자료구조의 이해
02 자료의 표현
03 자료의 추상화
04 알고리즘의 이해
05 알고리즘의 표현 방법
06 알고리즘의 성능 분석
요약 / 연습문제
Chapter 02 자료구조 구현을 위한 C 프로그래밍 기법
01 배열
02 포인터
03 구조체
04 재귀호출
요약 / 연습문제
Chapter 03 순차 자료구조와 선형 리스트
01 순차 자료구조와 선형 리스트의 이해
02 선형 리스트의 연산과 알고리즘
03 선형 리스트의 응용 및 구현
응용예제
요약 / 연습문제
Chapter 04 연결 자료구조와 연결 리스트
01 연결 자료구조와 연결 리스트의 이해
02 단순 연결 리스트
03 원형 연결 리스트
04 이중 연결 리스트
05 연결 리스트의 응용 및 구현
응용예제
요약 / 연습문제
Chapter 05 스택
01 스택의 이해
02 스택의 구현
03 스택의 응용
응용예제
요약 / 연습문제
Chapter 06 큐
01 큐의 이해
02 큐의 구현
03 데크
04 큐의 응용
응용예제
요약 / 연습문제
Chapter 07 트리
01 트리의 이해
02 이진 트리
03 이진 트리의 구현
04 이진 트리의 순회
05 이진 탐색 트리
06 균형 이진 탐색 트리
07 히프의 개념과 연산 및 구현
응용예제
요약 / 연습문제
Chapter 08 그래프
01 그래프의 구조
02 그래프의 구현
03 그래프의 순회
04 신장 트리와 최소 비용 신장 트리
응용예제
요약 / 연습문제
Chapter 09 정렬
01 정렬의 이해
02 선택 정렬
03 버블 정렬
04 퀵 정렬
05 삽입 정렬
06 셸 정렬
07 병합 정렬
08 기수 정렬
09 히프 정렬
10 트리 정렬
응용예제
요약 / 연습문제
Chapter 10 검색
01 검색의 이해
02 순차 검색
03 이진 검색
04 이진 트리 검색
05 해싱
응용예제
요약 / 연습문제
펼쳐보기
접어보기',
        '자료를 구조화하는 다양한 방법을 단계별 그림과 삽화를 곁들여 쉽게 설명하고, 자료구조의 핵심 알고리즘을 C 프로그램으로 차근차근 구현해 보도록 구성하였다. 특히 4판에 새롭게 추가된 코딩 테스트 유형의 응용예제를 통해 문제 해결 과정을 단계별로 학습할 수 있다.',
        '한빛아카데미(교재)', '2021-06-30', 29000, 29000, 1,
        'https://image.aladin.co.kr/product/27464/69/cover/k352733287_1.jpg', 10),
       ('9788931589191', '8931589190', '후니의 쉽게 쓴 시스코 네트워킹 - 4th Edition, 개정증보신판', '목차
『Vol. 1』
PART 01   네트워크 세상에 들어서며
01 네트워크가 없어도 잘 살던 시절이 있었습니다
02 이제는 인터넷 세상
03 네트워킹의 정체
04 인터넷, 인트라넷, 엑스트라넷
PART 02   네트워크와 케이블, 그리고 친구들
01 LAN(Local Area Network)이란?
02 이더넷은 인터넷의 친구?
03 그럼 토큰링(TokenRing)은요?
04 UTP 케이블만이라도 제대로 알아볼까요?
05 케이블, 이 정도만 알면…
06 맥 어드레스(MAC Address)에 대한 이야기
07 유니캐스트, 브로드캐스트, 멀티캐스트
08 OSI 7 Layer(계층)는 왜 만들어졌나요?
09 컴퓨터는 프로토콜(Protocol)로 말한다
PART 03   TCP/IP와의 만남
01 TCP/IP를 모르면 인터넷을 아는 게 아니다?
02 이 세상에서 나만을 위한 유일한 것
03 컴퓨터는 이진수로만 이해한다는데…
04 이진수 계산 그 첫 번째
05 이진수 계산 그 두 번째
PART 04   네트워크 장비에 관한 이야기
01 랜카드도 세팅해야 되나요?
02 허브이야기 그 첫 번째
03 허브의 한계
04 허브 이야기 그 두 번째
05 허브의 끝과 스위치의 시작
06 험한 세상의 브리지(다리?)되어 그대 지키리
07 브리지/스위치의 기능
08 Looping(뺑뺑이)은 왜 생길까요?
09 스패닝 트리되지 않는 스위치는 팥 없는 찐빵!
10 라우팅이냐, 스위칭이냐?
PART 05   IP 주소로의 여행
01 IP 주소 이야기 - 1탄
02 라우터에서의 IP 주소 이해
03 IP 주소 이야기 - 2탄
04 IP 주소 이야기 - 3탄
05 IP 주소의 활용
06 서브넷 마스크(Subnet Mask)의 시작
07 서브넷 마스크에도 기본은 있다
08 서브넷 마스크의 기본 성질
09 서브넷 마스크, 그 속으로…
10 서브넷 마스크에 대한 시험
11 IP와 서브넷에 대한 정리
PART 06   스위치를 켜라!
01 스위치와 브리지
02 스패닝 트리로 가는 첫 번째 관문 2가지
03 스패닝 트리를 잘하려면 3가지만 기억하세요!
04 누가 누가 더 센가? STP에서 힘 겨루기
05 스위치에서 대장 브리지(루트 브리지) 뽑기
06 졸병 브리지(Non Root Bridge)의 루트 포트 선출기
07 스패닝 트리의 마지막 단계 데지그네이티드 포트(Designated Port) 뽑기
08 스패닝 트리 프로토콜의 5가지 상태 변화
09 배운 거 써먹기 - 직접 한 번 구성해 보자구요!
10 스패닝 트리에 변화가 생기던 날
11 카타리스트 스위치 바라보기
12 카타리스트 스위치 구성하기
13 맥 어드레스는 어디에 저장되어 있을까요?
14 가상의 랜(Virtual LAN)이란?
15 VLAN에서 꼭 기억해야 할 몇 가지
16 VLAN에서의 트렁킹과 VTP(VLAN Trunking Protocol)
17 VLAN의 구성
18 실제 상황! VLAN
PART 07   라우터만 알면 네트워크 도사?
01 라우터를 한 마디로 말하자면…
02 라우터는 무슨 일을 할까요?
03 라우터는 어떻게 생긴 녀석일까요?
04 라우팅 프로토콜과 라우티드 프로토콜
05 스태틱(Static) 라우팅 프로토콜과 다이내밀(Dynamic) 라우팅 프로토콜
06 라우팅 테이블에 대한 이야기
07 AS 그리고 내부용과 외부용 라우팅 프로토콜
08 라우터 구성의 시작
09 라우터의 중요한 몇 가지 모드
10 라우터 안에는 어떤 것들이 살까요?
11 내가 가진 라우터의 현재 정보는 모두 이곳에!
12 라우터 셋업 모드
13 라우터에 명령을 입력하는 두 번째 방법
14 스태틱(Static) 라우팅을 이용한 라우터 구성
15 스태틱 라우팅만 알면 디폴트 라우트는 식은 죽 먹기
16 라우터의 구성 명령에 대한 버전별 정리
17 디스턴스 벡터(Distance Vector)와 링크 스테이트(Link State)
18 라우터의 패스워드 구성
19 시스코 라우터의 친구 찾기 CDP
20 텔넷(Telnet)을 이용한 장비 접속
21 핑(Ping)과 트레이스(Trace)
찾아보기
『Vol. 2』
PART 08   라우팅 프로토콜과의 한판
01 RIP라는 라우팅 프로토콜에 대한 이야기
02 RIP와 함께 춤을?
03 Distance - Vector 라우팅 알고리즘에서의 문제점과 해결책
04 IGRP 라우팅 프로토콜
05 OSPF 라우팅 프로토콜
PART 09   라우터, 그 속으로 전진!
01 네트워크 접근 제어 액세스 리스트(Access List)
02 액세스 리스트에서 이것만 알면 다 안다
03 스탠더드 액세스 리스트의 시작
04 스탠더드 액세스 리스트의 예제
05 텔넷포트(VTY Port)에서의 액세스 리스트
06 익스텐디드 액세스 리스트(Extended Access List)
07 라우터의 장애 대비 HSRP
08 IP 주소의 변환 NAT(Network Address Translation)
PART 10   세상을 넓고 네트워킹은 계속된다
01 WAN은 어렵다?
02 HDLC보다 괜찮은 PPP
03 프레임 릴레이(Frame-Relay) 구성
04 ISDN의 추억
PART 11   선이 없는 세상, 무선으로의 여행
01 무선으로의 여행
02 무선 랜에서의 두 가지 중요한 모드
03 무선 랜의 통신 표준
04 무선 통신에서의 인코딩 3가지
05 무선 네트워크에도 이름이 있답니다 - SSID
06 무선 네트워크에서의 보안
07 AP를 직접 만져보자
08 AP를 직접 구성해볼까요?
09 정말 색다른 네트워크 장비(?)
PART 12   IPv6로 떠나는 여행
01 IPv6, 왜 필요한 걸까요?
02 IPv6의 탄생
03 왜 갑자기 IPv4에서 IPv6로 뛰었을까요?
04 IPv6에서 무엇이 달라졌냐고 묻는다면…
05 IPv6의 주요 특징에 대한 첫 번째 이야기
06 IPv6의 주요 특징에 대한 두 번째 이야기
07 IPv6 주소는 어떻게 생겼을까요?
08 IPv6와의 어색한 동거
09 라우터에서 IPv6 구성
APPENDIX   부록
01 네트워킹을 하면서 꼭 알아두어야 할 약어
02 시스코 장비의 패스워드 복구 방법
03 라우터 실습
04 서브넷 마스크 해설
05 네트워크의 기초
찾아보기
펼쳐보기
접어보기',
        '2002년 출간 이후 16년 동안 네트워크 분야 베스트셀러 1위를 지키고 있는 『후니의 쉽게 쓴 시스코 네트워킹』의 개정판(4th Edition)은 최신 네트워크 기술과 장비의 변화 내용을 한번에 이해할 수 있도록 확 바뀐 디자인과 일러스트로 한층 더 쉽고 체계적으로 구성하였다.',
        '성안당', '2022-09-15', 40000, 36000, 1, 'https://image.aladin.co.kr/product/23543/72/cover/8931589190_2.jpg', 10),
       ('9791165219246', 'K662837474', '모두의 딥러닝 - 누구나 쉽게 이해하는 딥러닝 [별책(책속의 책/84쪽), 동영상 강의], 개정3판', '목차
첫째 마당 딥러닝 시작을 위한 준비 운동
1장. 해 보자! 딥러닝
1 | 인공지능? 머신 러닝? 딥러닝?
2 | 딥러닝 실행을 위해 필요한 세 가지
3 | 구글 코랩 실행하기
2장. 딥러닝의 핵심 미리 보기
1 | 미지의 일을 예측하는 원리
2 | 딥러닝 코드 실행해 보기
3 | 딥러닝 개괄하기
4 | 이제부터가 진짜 딥러닝?
3장. 딥러닝을 위한 기초 수학
1 | 일차 함수, 기울기와 y 절편
2 | 이차 함수와 최솟값
3 | 미분, 순간 변화율과 기울기
4 | 편미분
5 | 지수와 지수 함수
6 | 시그모이드 함수
7 | 로그와 로그 함수
둘째 마당 예측 모델의 기본 원리
4장. 가장 훌륭한 예측선
1 | 선형 회귀의 정의
2 | 가장 훌륭한 예측선이란?
3 | 최소 제곱법
4 | 파이썬 코딩으로 확인하는 최소 제곱
5 | 평균 제곱 오차
6 | 파이썬 코딩으로 확인하는 평균 제곱 오차
5장. 선형 회귀 모델: 먼저 긋고 수정하기
1 | 경사 하강법의 개요
2 | 파이썬 코딩으로 확인하는 선형 회귀
3 | 다중 선형 회귀의 개요
4 | 파이썬 코딩으로 확인하는 다중 선형 회귀
5 | 텐서플로에서 실행하는 선형 회귀, 다중 선형 회귀 모델
6장. 로지스틱 회귀 모델: 참 거짓 판단하기
1 | 로지스틱 회귀의 정의
2 | 시그모이드 함수
3 | 오차 공식
4 | 로그 함수
5 | 텐서플로에서 실행하는 로지스틱 회귀 모델
셋째 마당 딥러닝의 시작, 신경망
7장. 퍼셉트론과 인공지능의 시작
1 | 인공지능의 시작을 알린 퍼셉트론
2 | 퍼셉트론의 과제
3 | XOR 문제
8장. 다층 퍼셉트론
1 | 다층 퍼셉트론의 등장
2 | 다층 퍼셉트론의 설계
3 | XOR 문제의 해결
4 | 코딩으로 XOR 문제 해결하기
9장. 오차 역전파에서 딥러닝으로
1 | 딥러닝의 태동, 오차 역전파
2 | 활성화 함수와 고급 경사 하강법
3 | 속도와 정확도 문제를 해결하는 고급 경사 하강법
넷째 마당 딥러닝 기본기 다지기
10장. 딥러닝 모델 설계하기
1 | 모델의 정의
2 | 입력층, 은닉층, 출력층
3 | 모델 컴파일
4 | 모델 실행하기
11장. 데이터 다루기
1 | 딥러닝과 데이터
2 | 피마 인디언 데이터 분석하기
3 | 판다스를 활용한 데이터 조사
4 | 중요한 데이터 추출하기
5 | 피마 인디언의 당뇨병 예측 실행
12장. 다중 분류 문제 해결하기
1 | 다중 분류 문제
2 | 상관도 그래프
3 | 원?핫 인코딩
4 | 소프트맥스
5 | 아이리스 품종 예측의 실행
13장. 모델 성능 검증하기
1 | 데이터의 확인과 예측 실행
2 | 과적합 이해하기
3 | 학습셋과 테스트셋
4 | 모델 저장과 재사용
5 | k겹 교차 검증
14장. 모델 성능 향상시키기
1 | 데이터의 확인과 검증셋
2 | 모델 업데이트하기
3 | 그래프로 과적합 확인하기
4 | 학습의 자동 중단
15장. 실제 데이터로 만들어 보는 모델
1 | 데이터 파악하기
2 | 결측치, 카테고리 변수 처리하기
3 | 속성별 관련도 추출하기
4 | 주택 가격 예측 모델
다섯째 마당 딥러닝 활용하기
16장. 이미지 인식의 꽃, 컨볼루션 신경망(CNN)
1 | 이미지를 인식하는 원리
2 | 딥러닝 기본 프레임 만들기
3 | 컨볼루션 신경망(CNN)
4 | 맥스 풀링, 드롭아웃, 플래튼
5 | 컨볼루션 신경망 실행하기
17장. 딥러닝을 이용한 자연어 처리
1 | 텍스트의 토큰화
2 | 단어의 원?핫 인코딩
3 | 단어 임베딩
4 | 텍스트를 읽고 긍정, 부정 예측하기
18장. 시퀀스 배열로 다루는 순환 신경망(RNN)
1 | LSTM을 이용한 로이터 뉴스 카테고리 분류하기
2 | LSTM과 CNN의 조합을 이용한 영화 리뷰 분류하기
3 | 어텐션을 사용한 신경망
19장. 세상에 없는 얼굴 GAN, 오토인코더
1 | 가짜 제조 공장, 생성자
2 | 진위를 가려내는 장치, 판별자
3 | 적대적 신경망 실행하기
4 | 이미지의 특징을 추출하는 오토인코더
20장. 전이 학습을 통해 딥러닝의 성능 극대화하기
1 | 소규모 데이터셋으로 만드는 강력한 학습 모델
2 | 전이 학습으로 모델 성능 극대화하기
21장. 설명 가능한 딥러닝 모델 만들기
1 | 딥러닝의 결과를 설명하는 방법
2 | 설명 가능한 딥러닝의 실행
22장. 캐글로 시작하는 새로운 도전
1 | 캐글 가입 및 대회 선택하기
2 | 데이터 획득하기
3 | 학습하기
4 | 결과 제출하기
5 | 최종 예측 값 제출하기
심화 학습 1. 오차 역전파의 계산법
1 | 출력층의 오차 업데이트
2 | 오차 공식
3 | 체인 룰
4 | 체인 룰 계산하기
5 | 가중치 수정하기
6 | 은닉층의 오차 수정하기
7 | 은닉층의 오차 계산법
8 | 델타식
심화 학습 2. 파이썬 코딩으로 짜 보는 신경망
1 | 환경 변수 설정하기
2 | 파이썬 코드로 실행하는 신경망
부록 A 내 컴퓨터에서 아나콘다로 딥러닝 실행하기
별책 부록
1장. 가장 많이 사용하는 머신 러닝 알고리즘 TOP 10
1 | 세상의 거의 모든 머신 러닝 알고리즘
2 | 실습을 위한 준비 사항
3 | 결정 트리
4 | 랜덤 포레스트
5 | 가우시안 나이브 베이즈
6 | k?최근접 이웃
7 | 에이다 부스트
8 | 이차 판별 분석
9 | 서포트 벡터 머신
10 | 서포트 벡터 머신 ? RBF 커널
11 | 보팅
12 | 배깅
13 | 여러 알고리즘의 성능을 한눈에 비교하기
2장. 데이터 분석을 위한 판다스: 92개의 예제 모음
A | 데이터 만들기
__1. 판다스 라이브러리 불러오기
__2. 데이터 프레임 만들기
__3. 데이터 프레임 출력하기
__4. 데이터의 열 이름을 따로 지정해서 만들기
__5. 인덱스가 두 개인 데이터 프레임 만들기
B | 데이터 정렬하기
__6. 특정 열 값을 기준으로 정렬하기
__7. 열 이름 변경하기
__8. 인덱스 값 초기화하기
__9. 인덱스 순서대로 정렬하기
__10. 특정 열 제거하기
C | 행 추출하기
__11. 맨 위의 행 출력하기
__12. 맨 아래 행 출력하기
__13. 특정 열의 값을 추출하기
__14. 특정 열에 특정 값이 있을 경우 추출하기
__15. 특정 열에 특정 값이 없을 경우 추출하기
__16. 특정 열에 특정 숫자가 있는지 확인하기
__17. 특정 비율로 데이터 샘플링하기
__18. 특정 개수만큼 데이터 샘플링하기
__19. 특정 열에서 큰 순서대로 불러오기
__20. 특정 열에서 작은 순서대로 불러오기
D | 열 추출하기
__21. 인덱스의 범위로 불러오기
__22. 첫 인덱스를 지정해 불러오기
__23. 마지막 인덱스를 지정해 불러오기
__24. 모든 인덱스 불러오기
__25. 특정 열을 지정해 가져오기
__26. 조건을 만족하는 열 가져오기
__27. 특정 문자가 포함되지 않는 열 가져오기
E | 행과 열 추출하기
__28. 특정 행과 열을 지정해 가져오기
__29. 인덱스로 특정 행과 열 가져오기
__30. 특정 열에서 조건을 만족하는 행과 열 가져오기
__31. 인덱스를 이용해 특정 조건을 만족하는 값 불러오기
F | 중복 데이터 다루기
__32. 특정 열에 어떤 값이 몇 개 들어 있는지 알아보기
__33. 데이터 프레임의 행이 몇 개인지 세어 보
__34. 데이터 프레임의 행과 열이 몇 개인지 세어 보기
__35. 특정 열에 유니크한 값이 몇 개인지 세어 보기
__36. 데이터 프레임의 형태 한눈에 보기
__37. 중복된 값 제거하기
G | 데이터 파악하기
__38. 각 열의 합 보기
__39. 각 열의 값이 모두 몇 개인지 보기
__40. 각 열의 중간 값 보기
__41. 특정 열의 평균값 보기
__42. 각 열의 25%, 75%에 해당하는 수 보기
__43. 각 열의 최솟값 보기
__44. 각 열의 최댓값 보기
__45. 각 열의 표준편차 보기
__46. 데이터 프레임 각 값에 일괄 함수 적용하기
H | 결측치 다루기
__47. %00; 값인지 확인하기
__48. %00; 값이 아닌지 확인하기
__49. %00; 값이 있는 행 삭제하기
__50. %00; 값을 특정 값으로 대체하기
__51. %00; 값을 특정 계산 결과로 대체하기
I | 새로운 열 만들기
__52. 조건에 맞는 새 열 만들기
__53. assign( )을 이용해 조건에 맞는 새 열 만들기
__54. 숫자형 데이터를 구간으로 나누기
__55. 기준 값 이하와 이상을 모두 통일시키기
__56. 최댓값 불러오기
__57. 최솟값 불러오기
J | 행과 열 변환하기
__58. 모든 열을 행으로 변환하기
__59. 하나의 열만 행으로 이동시키기
__60. 여러 개의 열을 행으로 이동시키기
__61. 특정 열의 값을 기준으로 새로운 열 만들기
__62. 원래 데이터 형태로 되돌리기
K | 시리즈 데이터 연결하기
__63. 시리즈 데이터 합치기
__64. 데이터를 병합할 때 새로운 인덱스 만들기
__65. 계층적 인덱스를 추가하고 열 이름 지정하기
L | 데이터 프레임 연결하기
__66. 데이터 프레임 합치기
__67. 열의 수가 다른 두 데이터 프레임 합치기
__68. 함께 공유하는 열만 합치기
__69. 열 이름이 서로 다른 데이터 합치기
M | 데이터 병합하기
__70. 왼쪽 열을 축으로 병합하기
__71. 오른쪽 열을 축으로 병합하기
__72. 공통 값만 병합하기
__73. 모든 값을 병합하기
__74. 특정한 열을 비교해서 공통 값이 존재하는 경우만 가져오기
__75. 공통 값이 존재하는 경우 해당 값을 제외하고 병합하기
__76. 공통 값이 있는 것만 병합하기
__77. 모두 병합하기
__78. 어디서 병합되었는지 표시하기
__79. 원하는 병합만 남기기
__80. merge 칼럼 없애기
N | 데이터 가공하기
__81. 행 전체를 한 칸 아래로 이동하기
__82. 행 전체를 한 칸 위로 이동하기
__83. 첫 행부터 누적해서 더하기
__84. 새 행과 이전 행을 비교하면서 최댓값 출력하기
__85. 새 행과 이전 행을 비교하면서 최솟값 출력하기
__86. 첫 행부터 누적해서 곱하기
O | 그룹별로 집계하기
__87. 그룹 지정 및 그룹별 데이터 수 표시
__88. 그룹 지정 후 원하는 칼럼 표시하기
__89. 밀집도 기준으로 순위 부여하기
__90. 최젓값을 기준으로 순위 부여하기
__91. 순위를 비율로 표시하기
__92. 동일 순위에 대한 처리 방법 정하기
펼쳐보기
접어보기',
        '비전공자 출신으로 오랜 기간 딥러닝 연구를 해온 저자는 자신이 겪어온 오류들을 겪지 않고, 가장 빠른 길로 딥러닝을 접할 수 있도록 하는 데 중점을 두고 이 책을 집필했다. 딥러닝 이론뿐만 아니라 실제 응용이 가능한 라이브러리 중심으로 설명한다.',
        '길벗', '2022-03-31', 24000, 21600, 1, 'https://image.aladin.co.kr/product/29169/46/cover/k662837474_1.jpg', 10),
       ('9791169211437', 'K392935094', '만들면서 배우는 생성 AI - 트랜스포머부터 GPT, DALL·E 2, 스테이블 디퓨전, 플라밍고까지', '목차
[PART 1 생성 딥러닝 소개]
CHAPTER 1 생성 모델링
_1.1 생성 모델링이란?
_1.2 첫 번째 생성 모델
_1.3 핵심 확률 이론
_1.4 생성 모델 분류
_1.5 생성 딥러닝 예제 코드
_1.6 요약
CHAPTER 2 딥러닝
_2.1 딥러닝용 데이터
_2.2 심층 신경망
_2.3 다층 퍼셉트론
_2.4 합성곱 신경망
_2.5 요약
[PART 2 6가지 생성 모델링 방식]
CHAPTER 3 변이형 오토인코더
_3.1 소개
_3.2 오토인코더
_3.3 변이형 오토인코더
_3.4 잠재 공간 탐색하기
_3.5 요약
CHAPTER 4 생성적 적대 신경망
_4.1 소개
_4.2 심층 합성곱 GAN(DCGAN)
_4.3 와서스테인 GAN-그레이디언트 페널티(WGAN-GP)
_4.4 조건부 GAN(CGAN)
_4.5 요약
CHAPTER 5 자기회귀 모델
_5.1 소개
_5.2 LSTM 네트워크 소개
_5.3 RNN 확장
_5.4 PixelCNN
_5.5 요약
CHAPTER 6 노멀라이징 플로 모델
_6.1 소개
_6.2 노멀라이징 플로
_6.3 RealNVP
_6.4 다른 노멀라이징 플로 모델
_6.5 요약
CHAPTER 7 에너지 기반 모델
_7.1 소개
_7.2 에너지 기반 모델
_7.3 요약
CHAPTER 8 확산 모델
_8.1 소개
_8.2 잡음 제거 확산 모델
_8.3 요약
[PART 3 생성 모델링의 응용 분야]
CHAPTER 9 트랜스포머
_9.1 소개
_9.2 GPT
_9.3 다른 트랜스포머
_9.4 요약
CHAPTER 10 고급 GAN
_10.1 소개
_10.2 ProGAN
_10.3 StyleGAN
_10.4 StyleGAN2
_10.5 그 외 중요한 GAN
_10.6 요약
CHAPTER 11 음악 생성
_11.1 소개
_11.2 음악 생성을 위한 트랜스포머
_11.3 MuseGAN
_11.4 요약
CHAPTER 12 월드 모델
_12.1 소개
_12.2 강화 학습
_12.3 월드 모델 개요
_12.4 랜덤한 롤아웃 데이터 수집
_12.5 VAE 훈련
_12.6 MDN-RNN 훈련 데이터 수집
_12.7 MDN-RNN 훈련
_12.8 컨트롤러 훈련
_12.9 꿈속에서 훈련하기
_12.10 요약
CHAPTER 13 멀티모달 모델
_13.1 소개
_13.2 DALL?E 2
_13.3 Imagen
_13.4 스테이블 디퓨전
_13.5 플라밍고
_13.6 요약
CHAPTER 14 결론
_14.1 생성 AI의 타임라인
_14.2 생성 AI의 현재 상태
_14.3 생성 AI의 미래
_14.4 마지막 의견
펼쳐보기
접어보기',
        '딥러닝 기초부터 최신 생성 AI 모델까지 설명합니다. 텐서플로와 케라스를 사용해 변이형 오토인코더(VAE), 생성적 적대 신경망(GAN), 트랜스포머, 노멀라이징 플로 모델, 에너지 기반 모델, 잡음 제거 확산 모델 등 인상적인 생성 딥러닝 모델을 만드는 법을 다룬다.',
        '한빛미디어', '2023-09-15', 39000, 35100, 1, 'https://image.aladin.co.kr/product/32427/87/cover/k392935094_1.jpg',
        10),
       ('9788970506173', '8970506179', '인공지능 시대의 컴퓨터 개론 - 개정8판', '목차
CHAPTER 01 디지털 혁명과 4차 산업혁명의 시대
1.1 새로운 기술로 나날이 변화하는 세상
1.2 디지털 혁명과 정보화 사회
1.3 컴퓨터의 개요
1.4 정보기술 산업
1.5 컴퓨터의 활용 분야
1.6 컴퓨터와 사회의 변화
1.7 컴퓨터 환경의 단계적 발전 전망
1.8 IT 융합의 몇 가지 예
1.9 최근에 개발되는 컴퓨터 응용 분야
1.10 4차 산업혁명 시대
실습/알아보기
참고문헌
연습문제
CHAPTER 02 컴퓨터의 발전과 기반 지식
2.1 컴퓨터의 등장
2.2 컴퓨터의 세대별 분류
2.3 컴퓨터의 분류
2.4 수의 표현과 연산
2.5 데이터의 표현
2.6 논리 회로
실습/알아보기
참고문헌
연습문제
CHAPTER 03 컴퓨터 시스템의 구조
3.1 컴퓨터 시스템의 기본 구조
3.2 중앙처리 장치
3.3 명령어
3.4 기억 장치
3.5 속도와 성능
실습/알아보기
참고문헌
연습문제
CHAPTER 04 소프트웨어와 변화하는 사회
4.1 소프트웨어란 무엇인가?
4.2 소프트웨어의 중요성과 역할
4.3 소프트웨어의 다양한 응용
4.4 소프트웨어 교육
4.5 코딩과 코딩 교육
실습/알아보기
참고문헌
연습문제
CHAPTER 05 컴퓨터 운영의 지휘자 운영체제
5.1 운영체제의 개념
5.2 DOS
5.3 Windows 계열
5.4 Windows 8과 Windows 10
5.5 UNIX
5.6 Linux
5.7 Mac OS
5.8 임베디드 OS
5.9 모바일 운영체제
실습/알아보기
참고문헌
연습문제
CHAPTER 06 컴퓨터 통신과 인터넷
6.1 통신의 개요
6.2 네트워크
6.3 통신 하드웨어
6.4 통신 방법
6.5 세대별 이동통신 방법
6.6 인터넷
6.7 인터넷의 활용
6.8 웹 3.0으로의 발전
실습/알아보기
참고문헌
연습문제
CHAPTER 07 최근의 컴퓨터 응용 기술
7.1 유비쿼터스 컴퓨팅
7.2 홈 네트워킹과 스마트홈
7.3 증강현실과 가상현실
7.4 웨어러블 디바이스
7.5 지능형 로봇
7.6 새롭게 열리는 메타버스의 세계
실습/알아보기
참고문헌
연습문제
CHAPTER 08 가까이 다가오는 인공지능
8.1 인공지능 개요
8.2 인공지능의 역사와 분류
8.3 인공지능 시스템
8.4 규칙기반 인공지능
8.5 신경망 개념과 응용
8.6 인공지능 분야의 응용 기술
8.7 인공지능의 수준과 윤리
실습/알아보기
참고문헌
연습문제
CHAPTER 09 멀티미디어의 세계와 전자상거래
9.1 멀티미디어 개요
9.2 멀티미디어의 구성 요소와 특징
9.3 멀티미디어 응용 기반
9.4 멀티미디어 활용
9.5 전자상거래
실습/알아보기
참고문헌
연습문제
CHAPTER 10 떠오르는 4차 산업혁명 기술
10.1 4차 산업혁명 시대의 도래
10.2 4차 산업혁명과 인공지능
10.3 신기술 입출력 장치 - 3D 프린터
10.4 사물인터넷
10.5 빅데이터
10.6 자율주행차와 드론
10.7 기타 핵심 기술들
실습/알아보기
참고문헌
연습문제
CHAPTER 11 IT 융합 기술 응용과 모바일 컴퓨팅
11.1 IT 융합 기술의 개념
11.2 IT 융합 기술의 응용 예
11.3 모바일 컴퓨팅의 개념과 배경
11.4 스마트폰과 태블릿 PC
11.5 최근의 모바일 정보통신 문화
11.6 블록체인
11.7 암호화폐와 NFT
실습/알아보기
참고문헌
연습문제
CHAPTER 12 컴퓨터와 소통하는 프로그래밍 언어
12.1 프로그래밍 언어
12.2 주요 프로그래밍 언어
12.3 제4세대 언어
12.4 객체지향 언어
12.5 UNIX와 Linux 기반 언어들
12.6 웹 기반 언어
12.7 닷넷 기반 언어
실습/알아보기
참고문헌
연습문제
CHAPTER 13 데이터베이스와 컴퓨터 보안
13.1 데이터베이스의 개념
13.2 데이터 모델
13.3 관계형 데이터베이스 시스템
13.4 MySQL 실습
13.5 컴퓨터 보안의 개요
13.6 암호 보안 기술
13.7 컴퓨터 바이러스
13.8 최근의 해킹 동향과 컴퓨터 보안 전략
13.9 정보 보호와 정보 윤리
실습/알아보기
참고문헌
연습문제
펼쳐보기
접어보기',
        '급변하는 최신의 컴퓨터 관련 핵심 기술들을 중심으로 보다 체계적이고 포괄적으로 고찰할 수 있는 새로운 형태의 내용들을 선보이고자 노력하였다. 컴퓨터와 관련된 최신의 지식들을 포괄적으로 이해하는데 도움이 되도록 다양한 주제들을 기술하였다.',
        '생능', '2022-12-27', 28000, 28000, 1, 'https://image.aladin.co.kr/product/30708/79/cover/8970506179_1.jpg', 10),
       ('9791163033165', 'K392835715', 'Do it! BERT와 GPT로 배우는 자연어 처리 - 트랜스포머 핵심 원리와 허깅페이스 패키지 활용법', '목차
1장 처음 만나는 자연어 처리
1-1 딥러닝 기반 자연어 처리 모델
1-2 트랜스퍼 러닝
1-3 학습 파이프라인 소개
1-4 개발 환경 설정
2장 문장을 작은 단위로 쪼개기
2-1 토큰화란?
2-2 바이트 페어 인코딩이란?
2-3 어휘 집합 구축하기
2-4 토큰화하기
3장 숫자 세계로 떠난 자연어
3-1 미리 학습된 언어 모델
3-2 트랜스포머 살펴보기
3-3 셀프 어텐션 동작 원리
3-4 트랜스포머에 적용된 기술들
3-5 BERT와 GPT 비교
3-6 단어/문장을 벡터로 변환하기
4장 문서에 꼬리표 달기
4-1 문서 분류 모델 훑어보기
4-2 문서 분류 모델 학습하기
4-3 학습 마친 모델을 실전 투입하기
5장 문장 쌍 분류하기
5-1 문장 쌍 분류 모델 훑어보기
5-2 문장 쌍 분류 모델 학습하기
5-3 학습 마친 모델을 실전 투입하기
6장 단어에 꼬리표 달기
6-1 개체명 인식 모델 훑어보기
6-2 개체명 인식 모델 학습하기
6-3 학습 마친 모델을 실전 투입하기
7장 질문에 답하기
7-1 질의응답 모델 훑어보기
7-2 질의응답 모델 학습하기
7-3 학습 마친 모델을 실전 투입하기
8장 문장 생성하기
8-1 문장 생성 모델 훑어보기
8-2 문장 생성 모델 파인튜닝하기
8-3 프리트레인 마친 모델로 문장 생성하기
8-4 파인튜닝 마친 모델로 문장 생성하기
찾아보기
펼쳐보기
접어보기',
        '딥러닝 기반 자연어 처리 기술을 체계적이고 쉽게 배울 수 있는 입문서다. 네이버 영화평, 뉴스 댓글, 질의응답 등 한국어 말뭉치로 실습해 국내 자연어 처리 연구가에게 더욱 효과적이며, 트랜스포머의 핵심 원리와 허깅페이스 패키지 활용법 등 최신 자연어 처리 기술의 진수를 담았다.',
        '이지스퍼블리싱', '2021-12-01', 20000, 18000, 1, 'https://image.aladin.co.kr/product/28385/95/cover/k392835715_1.jpg',
        10),
       ('9791165215743', 'K462732121', '컨테이너 인프라 환경 구축을 위한 쿠버네티스/도커 - 컨테이너 인프라 환경을 이해하고 직접 구축해 보자!', '목차
1장 새로운 인프라 환경이 온다
1.1 컨테이너 인프라 환경이란
1.2 컨테이너 인프라 환경을 지원하는 도구
1.3 새로운 인프라 환경의 시작
2장 테스트 환경 구성하기
2.1 테스트 환경을 자동으로 구성하는 도구
2.2 베이그런트로 테스트 환경 구축하기
2.3 터미널 프로그램으로 가상 머신 접속하기
3장 컨테이너를 다루는 표준 아키텍처, 쿠버네티스
3.1 쿠버네티스 이해하기
3.2 쿠버네티스 기본 사용법 배우기
3.3 쿠버네티스 연결을 담당하는 서비스
3.4 알아두면 쓸모 있는 쿠버네티스 오브젝트
4장 쿠버네티스를 이루는 컨테이너 도우미, 도커
4.1 도커를 알아야 하는 이유
4.2 도커로 컨테이너 다루기
4.3 4가지 방법으로 컨테이너 이미지 만들기
4.4 쿠버네티스에서 직접 만든 컨테이너 사용하기
5장 지속적 통합과 배포 자동화, 젠킨스
5.1 컨테이너 인프라 환경에서 CI/CD
5.2 젠킨스 설치를 위한 간편화 도구 살펴보기
5.3 젠킨스 설치 및 설정하기
5.4 젠킨스로 CI/CD 구현하기
5.5 젠킨스 플러그인을 통해 구현되는 GitOps
6장 안정적인 운영을 완성하는 모니터링, 프로메테우스와 그라파나
6.1 컨테이너 인프라 환경 모니터링하기
6.2 프로메테우스로 모니터링 데이터 수집과 통합하기
6.3 PromQL로 메트릭 데이터 추출하기
6.4 그라파나로 모니터링 데이터 시각화하기
6.5 좀 더 견고한 모니터링 환경 만들기
부록 A kubectl을 더 쉽게 사용하기
부록 B 쿠버 대시보드 구성하기
부록 C kubespray로 쿠버네티스 자동 구성하기
부록 D 컨테이너 깊게 들여다보기
펼쳐보기
접어보기',
        '현재 컨테이너 오케스트레이션 분야에서 표준으로 자리 잡고 있는 쿠버네티스를 활용해 시스템을 구축하고 운영하는 방법에 초점을 맞춰 구성했다. 쿠버네티스를 기반으로 시스템을 구축하고 운영하는 데 필요한 기초를 탄탄하게 다질 수 있을 것이다.',
        '길벗', '2021-06-07', 34000, 30600, 1, 'https://image.aladin.co.kr/product/27311/12/cover/k462732121_1.jpg', 10),
       ('9791140700943', 'K212838436', '도커 교과서 - 설치부터 실전 운영 투입까지, 한 권에 담았다!', '목차
1부 도커 컨테이너와 이미지 이해하기
1장 시작하기 전에
1.1 컨테이너가 IT 세상을 점령한 이유
1.2 대상 독자
1.3 실습 환경 구축하기
1.4 바로 활용하기
2장 도커의 기본적인 사용법
2.1 컨테이너로 Hello World 실행하기
2.2 컨테이너란 무엇인가?
2.3 컨테이너를 원격 컴퓨터처럼 사용하기
2.4 컨테이너를 사용해 웹 사이트 호스팅하기
2.5 도커가 컨테이너를 실행하는 원리
2.6 연습 문제: 컨테이너 파일 시스템 다루기
3장 도커 이미지 만들기
3.1 도커 허브에 공유된 이미지 사용하기
3.2 Dockerfile 작성하기
3.3 컨테이너 이미지 빌드하기
3.4 도커 이미지와 이미지 레이어 이해하기
3.5 이미지 레이어 캐시를 이용한 Dockerfile 스크립트 최적화
3.6 연습 문제
4장 애플리케이션 소스 코드에서 도커 이미지까지
4.1 Dockerfile이 있는데 빌드 서버가 필요할까?
4.2 애플리케이션 빌드 실전 예제: 자바 소스 코드
4.3 애플리케이션 빌드 실전 예제: Node.js 소스 코드
4.4 애플리케이션 빌드 실전 예제: Go 소스 코드
4.5 멀티 스테이지 Dockerfile 스크립트 이해하기
4.6 연습 문제
5장 도커 허브 등 레지스트리에 이미지 공유하기
5.1 레지스트리, 리포지터리, 이미지 태그 다루기
5.2 도커 허브에 직접 빌드한 이미지 푸시하기
5.3 나만의 도커 레지스트리 운영하기
5.4 이미지 태그를 효율적으로 사용하기
5.5 공식 이미지에서 골든 이미지로 전환하기
5.6 연습 문제
6장 도커 볼륨을 이용한 퍼시스턴트 스토리지
6.1 컨테이너 속 데이터가 사라지는 이유
6.2 도커 볼륨을 사용하는 컨테이너 실행하기
6.3 파일 시스템 마운트를 사용하는 컨테이너 실행하기
6.4 파일 시스템 마운트의 한계점
6.5 컨테이너의 파일 시스템은 어떻게 만들어지는가?
6.6 연습 문제
2부 컨테이너로 분산 애플리케이션 실행하기
7장 도커 컴포즈로 분산 애플리케이션 실행하기
7.1 도커 컴포즈 파일의 구조
7.2 도커 컴포즈를 사용해 여러 컨테이너로 구성된 애플리케이션 실행하기
7.3 도커 컨테이너 간의 통신
7.4 도커 컴포즈로 애플리케이션 설정값 지정하기
7.5 도커 컴포즈도 만능은 아니다
7.6 연습 문제
8장 헬스 체크와 디펜던시 체크로 애플리케이션의 신뢰성 확보하기
8.1 헬스 체크를 지원하는 도커 이미지 빌드하기
8.2 디펜던시 체크가 적용된 컨테이너 실행하기
8.3 애플리케이션 체크를 위한 커스텀 유틸리티 만들기
8.4 도커 컴포즈에 헬스 체크와 디펜던시 체크 정의하기
8.5 헬스 체크와 디펜던시 체크로 복원력 있는 애플리케이션을 만들 수 있는 이유
8.6 연습 문제
9장 컨테이너 모니터링으로 투명성 있는 애플리케이션 만들기
9.1 컨테이너화된 애플리케이션에서 사용되는 모니터링 기술 스택
9.2 애플리케이션의 측정값 출력하기
9.3 측정값 수집을 맡을 프로메테우스 컨테이너 실행하기
9.4 측정값 시각화를 위한 그라파나 컨테이너 실행하기
9.5 투명성의 수준
9.6 연습 문제
10장 도커 컴포즈를 이용한 여러 환경 구성
10.1 도커 컴포즈로 여러 개의 애플리케이션 배포하기
10.2 도커 컴포즈의 오버라이드 파일
10.3 환경 변수와 비밀값을 이용해 설정 주입하기
10.4 확장 필드로 중복 제거하기
10.5 도커를 이용한 설정 워크플로 이해하기
10.6 연습 문제
11장 도커와 도커 컴포즈를 이용한 애플리케이션 빌드 및 테스트
11.1 도커를 이용한 지속적 통합 절차
11.2 도커를 이용한 빌드 인프라스트럭처 구축하기
11.3 도커 컴포즈를 이용한 빌드 설정
11.4 도커 외의 의존 모듈이 불필요한 CI 작업 만들기
11.5 CI 파이프라인에 관계된 컨테이너
11.6 연습 문제
3부 컨테이너 오케스트레이션을 이용한 스케일링
12장 컨테이너 오케스트레이션: 도커 스웜과 쿠버네티스
12.1 컨테이너 오케스트레이션 도구란?
12.2 도커 스웜으로 클러스터 만들기
12.3 도커 스웜 서비스로 애플리케이션 실행하기
12.4 클러스터 환경에서 네트워크 트래픽 관리하기
12.5 도커 스웜과 쿠버네티스 중 무엇을 사용할까?
12.6 연습 문제
13장 도커 스웜 스택으로 분산 애플리케이션 배포하기
13.1 도커 컴포즈를 사용한 운영 환경
13.2 컨피그 객체를 이용한 설정값 관리
13.3 비밀값을 이용한 대외비 설정 정보 관리하기
13.4 스웜에서 볼륨 사용하기
13.5 클러스터는 스택을 어떻게 관리하는가?
13.6 연습 문제
14장 업그레이드와 롤백을 이용한 업데이트 자동화
14.1 도커를 사용한 애플리케이션 업그레이드 프로세스
14.2 운영 환경을 위한 롤링 업데이트 설정하기
14.3 서비스 롤백 설정하기
14.4 클러스터의 중단 시간
14.5 스웜 클러스터의 고가용성
14.6 연습 문제
15장 보안 원격 접근 및 CI/CD를 위한 도커 설정
15.1 도커 API의 엔드포인트 형태
15.2 보안 원격 접근을 위한 도커 엔진 설정
15.3 도커 컨텍스트를 사용해 원격 엔진에서 작업하기
15.4 지속적 통합 파이프라인에 지속적 배포 추가하기
15.5 도커 리소스의 접근 모델
15.6 연습 문제
16장 어디서든 실행할 수 있는 도커 이미지 만들기: 리눅스, 윈도, 인텔, ARM
16.1 다중 아키텍처 이미지가 중요한 이유
16.2 다중 아키텍처 이미지를 만들기 위한 Dockerfile 스크립트
16.3 다중 아키텍처 이미지를 레지스트리에 푸시하기
16.4 도커 Buildx를 사용해 다중 아키텍처 이미지 빌드하기
16.5 개발 로드맵과 다중 아키텍처 이미지
16.6 연습 문제
4부 운영 환경 투입을 위한 컨테이너 준비하기
17장 도커 이미지 최적화하기: 보안, 용량, 속도
17.1 도커 이미지를 최적화하는 방법
17.2 좋은 기반 이미지를 고르는 법
17.3 이미지 레이어 수와 이미지 크기는 최소한으로
17.4 멀티 스테이지 빌드를 한 단계 업그레이드하기
17.5 최적화가 중요한 이유
17.6 연습 문제
18장 컨테이너의 애플리케이션 설정 관리
18.1 다단 애플리케이션 설정
18.2 환경별 설정 패키징하기
18.3 런타임에서 설정 읽어 들이기
18.4 레거시 애플리케이션에 설정 전략 적용하기
18.5 유연한 설정 모델의 이점
18.6 연습 문제
19장 도커를 이용한 로그 생성 및 관리
19.1 표준 에러 스트림과 표준 출력 스트림
19.2 다른 곳으로 출력된 로그를 stdout 스트림에 전달하기
19.3 컨테이너 로그 수집 및 포워딩하기
19.4 로그 출력 및 로그 컬렉션 관리하기
19.5 컨테이너의 로깅 모델
19.6 연습 문제
20장 리버스 프록시를 이용해 컨테이너H TTP 트래픽 제어하기
20.1 리버스 프록시란?
20.2 리버스 프록시의 라우팅과 SSL 적용하기
20.3 프록시를 이용한 성능 및 신뢰성 개선
20.4 클라우드 네이티브 리버스 프록시
20.5 리버스 프록시를 활용한 패턴의 이해
20.6 연습 문제
21장 메시지 큐를 이용한 비동기 통신
21.1 비동기 메시징이란?
21.2 클라우드 네이티브 메시지 큐 사용하기
21.3 메시지 수신 및 처리
21.4 메시지 핸들러로 기능 추가하기
21.5 비동기 메시징 패턴 이해하기
21.6 연습 문제
22장 끝없는 정진
22.1 도커를 이용한 개념 검증
22.2 소속 조직에서 도커의 유용함을 입증하라
22.3 운영 환경으로 가는 길
22.4 도커 커뮤니티 소개
찾아보기
펼쳐보기
접어보기',
        '도커 기본기는 물론이고 개념 검증 수준의 프로젝트를 컨테이너로 이전하는 것부터 실제 운영 환경을 구축하기 위한 모든 과정을 수행할 수 있다. 도커를 이용해 애플리케이션을 자신감 있게 운영할 수 있는 능력을 갖추는 것이 목표다.',
        '길벗', '2022-08-16', 36000, 32400, 1, 'https://image.aladin.co.kr/product/29918/47/cover/k212838436_1.jpg', 10),
       ('9791163034025', 'K022839205', 'Do it! 지옥에서 온 문서 관리자 깃 & 깃허브 입문 - 전면 개정판', '목차
01 깃 시작하기
__01-1 지옥에서 온 문서 관리자, 깃
__01-2 윈도우에서 깃 설치하기
__01-3 리눅스 명령 연습하기
__01-4 빔 편집기에서 텍스트 문서 만들기
01장에서 꼭 기억해야 할 명령
02 깃으로 버전 관리하기
__02-1 깃 저장소 만들기
__02-2 버전 만들기
__02-3 커밋 내용 확인하기
__02-4 버전 만드는 단계마다 파일 상태 알아보기
__02-5 작업 되돌리기
02장에서 꼭 기억해야 할 명령
03 깃과 브랜치
__03-1 브랜치란
__03-2 브랜치 만들기 및 이동하기
__03-3 브랜치 정보 확인하기
__03-4 브랜치 병합하기
03장에서 꼭 기억해야 할 명령
04 깃허브 시작하기
__04-1 원격 저장소와 깃허브
__04-2 깃허브 가입하기
__04-3 지역 저장소를 원격 저장소에 연결하기
__04-4 지역 저장소와 원격 저장소 동기화하기
__04-5 깃허브에 SSH 원격 접속하기
04장에서 꼭 기억해야 할 명령
05 깃허브로 협업하기
__05-1 서로 다른 컴퓨터에서 원격 저장소 함께 사용하기
__05-2 원격 브랜치 정보 가져오기
__05-3 협업의 기본 알아보기
__05-4 원격 저장소에서 협업하기
05장에서 꼭 기억해야 할 명령
06 깃허브에서 다른 사람과 소통하기
__06-1 깃허브 프로필 관리하기
__06-2 README 파일 작성하면서 마크다운 익히기
__06-3 오픈 소스 프로젝트에 기여하기
07 비주얼 스튜디오 코드로 다루는 깃과 깃허브
__07-1 저장소 만들기
__07-2 버전 만들기
__07-3 깃허브에 연결하기
__07-4 브랜치 관리하기
08 깃허브에 이력서 사이트와 블로그 만들기
__08-1 HTML, CSS 파일로 이력서 사이트 만들기
__08-2 깃허브에 블로그 만들기
NEW 깃허브의 새로운 서비스와 기능
__NEW 1 클라우드에서 개발하기 ─ 코드스페이스와 깃허브 데브
__NEW 2 AI에 기반한 소스 추천 서비스 ─ 코파일럿
찾아보기
펼쳐보기
접어보기', '달라진 내용을 간단히 소개하면 master가 main으로 변경된 것을 시작으로 깃허브의 새로운 서비스와 기능인 코드스페이스, 깃허브 데브 그리고 코파일럿 활용까지 최신성을 더해 알차게 담았다.',
        '이지스퍼블리싱', '2022-10-10', 17000, 15300, 1, 'https://image.aladin.co.kr/product/30224/71/cover/k022839205_1.jpg',
        10),
       ('9788970504957', '8970504958', '딥러닝 EXPRESS', '목차
Chapter 01 인공지능이란?
1. 인공지능의 시대
2. 인공지능의 정의
3. 인공지능의 간단한 역사
4. 규칙 기반 방법 vs 머신러닝 방법
5. 인공지능은 어디에 필요할까?
Lab 머신러닝 체험하기 #1
Lab 머신러닝 체험하기 #2
Lab 티처블 머신 이용하여 머신러닝 체험하기
요약
연습문제
Chapter 02 파이썬과 넘파이 복습
1. 파이썬이란?
2. 파이썬 설치하기
3. 어떤 개발 도구를 사용할 것인가?
4. 파이썬 복습
5. 딥러닝 개발에 사용되는 라이브러리
6. 넘파이
Lab 넘파이로 평균 제곱 오차 계산하기
7. 맵플롯립
Lab 맵플롯립으로 시그모이드 함수를 그려보자
요약
연습문제
Chapter 03 머신러닝의 기초
1. 머신러닝이란?
2. 지도 학습
3. 머신러닝의 과정
4. 붓꽃을 머신러닝으로 분류해보자.
5. 필기체 숫자 이미지를 분류해보자.
6. 머신러닝 알고리즘의 성능평가
7. 머신러닝의 용도
요약
연습문제
Chapter 04 선형 회귀
1. 선형 회귀
2. 선형 회귀에서 손실 함수 최소화 방법
3. 선형 회귀 파이썬 구현 #1
4. 선형 회귀 파이썬 구현 #2
Lab 선형 회귀 실습
5. 과잉 적합 vs 과소 적합
Lab 당뇨병 예제
Mini Project 면적에 따른 집값 예측
요약
연습문제
Chapter 05 퍼셉트론
1. 신경망이란?
2. 퍼셉트론
3. 퍼셉트론 학습 알고리즘
Lab 퍼셉트론 시각화
4. 퍼셉트론의 한계점
Mini Project 퍼셉트론으로 분류
요약
연습문제
Chapter 06 MLP(다층 퍼셉트론)
1. MLP(다층 퍼셉트론)
2. 활성화 함수
Lab 활성화 함수 구현
3. MLP의 순방향 패스
Lab MLP 순방향 패스
4. 손실함수 계산
5. 경사 하강법
Lab 경사 하강법 실습
Lab 2차원 그래디언트 시각화
6. 역전파 학습 알고리즘
7. 역전파 알고리즘을 손으로 계산해보자.
8. 넘파이만을 이용한 MLP 구현
9. 구글의 플레이그라운드를 이용한 실습
요약
연습문제
Chapter 07 MLP와 케라스 라이브러리
1. 미니 배치
Lab 미니 배치 실습 #1
2. 행렬로 미니 배치 구현하기
3. 학습률
Lab 학습률과 배치크기 실습
4. 케라스(Keras) 시작하기
5. 케라스를 사용하는 3가지 방법
6. 케라스를 이용한 MNIST 숫자 인식
7. 케라스의 입력 데이터
8. 케라스의 클래스들
9. 하이퍼 매개변수
요약
연습문제
Chapter 08 심층 신경망
1. 심층 신경망
2. 그래디언트 소실 문제
Lab 활성화 함수 실험
3. 손실 함수 선택 문제
Lab 교차 엔트로피의 계산
4. 케라스에서의 손실 함수
5. 가중치 초기화 문제
Lab 가중치 초기화 실험
6. 범주형 데이터 처리
7. 데이터 정규화
8. 과잉 적합과 과소 적합
9. 과잉 적합 방지 전략
Lab 배치 크기, 학습률, 규제항
10. 앙상블
11. 예제: MNIST 필기체 숫자 인식
12. 예제: 패션 아이템 분류
13. 예제: 타이타닉 생존자 예측하기
요약
연습문제
Chapter 09 컨벌루션 신경망
1. 컨벌루션 신경망 소개
2. 컨볼루션 연산
3. 풀링(서브 샘플링)
4. 컨벌루션 신경망을 해석해보자.
5. 케라스로 컨벌루션 신경망 구현하기
6. 예제: MNIST 필기체 숫자 인식
요약
연습문제
Chapter 10 영상 인식
1. 영상 인식이란?
Lab 영상인식 신경망 체험하기
2. 전통적인 영상 인식
3. 심층 신경망을 이용한 영상 인식
4. 예제: CIFAR-10 영상 분류하기
5. 데이터 증대
6. 예제: 강아지와 고양이 구별하기
7. 가중치 저장과 전이 학습
요약
연습문제
Chapter 11 순환 신경망
1. 순환 신경망이란?
2. 순환 데이터의 이해
3. RNN의 구조
4. RNN의 순방향 패스
5. 순환 신경망의 학습
6. 예제: 사인파 예측 프로그램
7. LSTM 신경망
8. 예제: Keras를 이용한 주가 예측
요약
연습문제
Chapter 12 자연어 처리
1. 자연어 처리란?
2. 텍스트 전처리
3. 단어의 표현
4. 케라스에서의 자연어 처리
5. 예제: 스팸 메일 분류하기
6. 예제: 다음 단어 예측하기
7. 예제: 영화 리뷰 감성 판별하기
요약
연습문제
Chapter 13 강화 학습
1. 강화 학습이란?
2. 강화 학습 프레임워크
3. OpenAI
4. 전통 Q-학습
5. 예제: 얼음 호수 게임에서 Q-학습의 구현
6. Deep Q-학습
7. 예제: 얼음 호수 게임에서 심층 Q-학습의 구현
요약
연습문제
Chapter 14 생성 모델
1. 생성 모델이란?
2. 케라스의 함수형 API
3. 기본형 오토인코더
4. 노이즈 제거 오토인코더
5. GAN이란?
6. 예제: GAN으로 숫자 이미지 생성
요약
연습문제
펼쳐보기
접어보기',
        '적절한 그림을 가능한 많이 사용하여, 보다 친숙하고, 지루하지 않으며 독자들이 이해하기 쉽게 구성하였다. 구글이 제공하는 텐서플로우 플레이그라운드 웹사이트를 이용하여 각종 개념에 대한 실습을 코딩없이 가능하도록 하였다.',
        '생능', '2021-07-16', 28000, 28000, 1, 'https://image.aladin.co.kr/product/27562/91/cover/8970504958_1.jpg', 10),
       ('9791165218188', 'K012836887', '다시 고등 수학 - 수포자 탈출을 위한 기초 수학', '목차
1장 기하학
1.1 명제와 증명
1.2 도형의 성질
2장 대수학
2.1 이차방정식
2.2 복소수
2.3 고차방정식
3장 해석기하학
3.1 도형의 방정식
3.2 부등식의 영역
4장 정수론과 수열
4.1 소수의 성질
4.2 수열
4.3 수학적 귀납법
5장 해석학
5.1 이차함수
5.2 삼각함수
5.3 지수함수
5.4 로그함수
5.5 미적분 개론
6장 확률과 통계
6.1 경우의 수
6.2 확률
6.3 데이터 분석
7장 대학 수학으로 가는 길
7.1 벡터
7.2 행렬
7.3 복소평면
펼쳐보기
접어보기', '인공지능, 데이터 분석, 경제학, 게임 등 이미 수학은 우리 생활과 밀접하게 연관되어 있다. 고등학교 이후로 잊어버린 수학 지식을 효율적으로 복습할 수 있도록 꼭 필요한 개념들만 골라 담았다.',
        '길벗', '2022-01-20', 22000, 19800, 1, 'https://image.aladin.co.kr/product/28758/43/cover/k012836887_1.jpg', 10),
       ('9791156645252', 'K572738386', '파이썬 자료구조와 알고리즘 for Beginner', '목차
Chapter 01 자료구조와 알고리즘 소개
00. 생활 속 자료구조와 알고리즘
01. 자료구조의 개념과 종류
02. 알고리즘
03. 파이썬 소개와 설치
연습문제
Chapter 02 파이썬 기초 문법과 데이터 형식
00. 파이썬 이름 이야기
01. 파이썬의 기초 문법
02. 파이썬의 데이터형
연습문제
응용예제 01 자동 로또 번호 생성기
응용예제 02 가장 많이 나온 글자 세기
Chapter 03 선형 리스트
00. 생활 속 자료구조와 알고리즘
01. 선형 리스트의 기본
02. 선형 리스트의 간단 구현
03. 선형 리스트의 일반 구현
04. 선형 리스트의 응용
연습문제
응용예제 01 카톡 친구 자동 삽입하기
응용예제 02 2차원 배열 활용하기
Chapter 04 단순 연결 리스트
00. 생활 속 자료구조와 알고리즘
01. 단순 연결 리스트의 기본
02. 단순 연결 리스트의 간단 구현
03. 단순 연결 리스트의 일반 구현
04. 단순 연결 리스트의 응용
연습문제
응용예제 01 사용자가 입력한 정보 관리하기
응용예제 02 로또 추첨하기
Chapter 05 원형 연결 리스트
00. 생활 속 자료구조와 알고리즘
01. 원형 연결 리스트의 기본
02. 원형 연결 리스트의 간단 구현
03. 원형 연결 리스트의 일반 구현
04. 원형 연결 리스트의 응용
연습문제
응용예제 01 현재 위치부터 가까운 편의점 관리하기
응용예제 02 이중 연결 리스트 구현하기
Chapter 06 스택
00. 생활 속 자료구조와 알고리즘
01. 스택의 기본
02. 스택의 간단 구현
03. 스택의 일반 구현
04. 스택의 응용
연습문제
응용예제 01 헨젤과 그레텔의 집으로 돌아가기
응용예제 02 파일 내용을 완전히 거꾸로 출력하기
Chapter 07 큐
00. 생활 속 자료구조와 알고리즘
01. 큐의 기본
02. 큐의 간단 구현
03. 큐의 일반 구현
04. 큐의 응용
연습문제
응용예제 01 유명 맛집의 대기줄 구현하기
응용예제 02 콜센터의 응답 대기 시간 계산하기
Chapter 08 이진 트리
00. 생활 속 자료구조와 알고리즘
01. 이진 트리의 기본
02. 이진 트리의 간단 구현
03. 이진 탐색 트리의 일반 구현
04. 이진 탐색 트리의 응용
연습문제
응용예제 01 편의점에서 판매된 물건 목록 출력하기
응용예제 02 폴더 및 하위 폴더에 중복된 파일 이름 찾기
Chapter 09 그래프
00. 생활 속 자료구조와 알고리즘
01. 그래프의 기본
02. 그래프의 구현
03. 그래프의 응용
연습문제
응용예제 01 허니버터칩이 가장 많이 남은 편의점 찾기
응용예제 02 가장 효율적인 해저 케이블망 구성하기
Chapter 10 재귀 호출
00. 생활 속 자료구조와 알고리즘
01. 재귀 호출의 기본
02. 재귀 호출 작동 방식의 이해
03. 재귀 호출의 연습
04. 재귀 호출의 응용
연습문제
응용예제 01 진수 변환하기
응용예제 02 시에르핀스키 삼각형 그리기
Chapter 11 정렬 기본
00. 생활 속 자료구조와 알고리즘
01. 정렬의 기본
02. 기본 정렬 알고리즘의 원리와 구현
03. 기본 정렬 알고리즘의 응용
연습문제
응용예제 01 성적별로 조 편성하기
응용예제 02 2차원 배열의 중앙값 찾기
Chapter 12 정렬 고급
00. 생활 속 자료구조와 알고리즘
01. 고급 정렬 알고리즘의 원리와 구현
02. 고급 정렬 알고리즘의 응용
연습문제
응용예제 01 선택 정렬과 퀵 정렬의 성능 비교하기
응용예제 02 이미 정렬된 줄에 끼어들기
Chapter 13 검색
00. 생활 속 자료구조와 알고리즘
01. 검색의 기본
02. 순차 검색과 이진 검색 알고리즘의 원리와 구현
03. 이진 검색 알고리즘의 응용
연습문제
응용예제 01 편의점에서 판매된 물건 목록과 개수 세기
응용예제 02 순차 검색과 이진 검색의 성능 비교하기
Chapter 14 동적 계획법
00. 생활 속 자료구조와 알고리즘
01. 동적 계획법의 등장 배경
02. 동적 계획법의 이해와 구현
03. 동적 계획법의 응용
연습문제
응용예제 01 황금 미로에서 길 표시하기
응용예제 02 피보나치 수열
찾아보기
펼쳐보기
접어보기', 'IT Cookbook 한빛 교재 시리즈. 기본 자료구조와 알고리즘을 쉽게 풀어낸 입문서다. 기본 → 간단 구현 → 일반 구현 → 응용 순으로 체계적으로 학습할 수 있다.', '한빛아카데미(교재)',
        '2021-01-23', 27000, 27000, 1, 'https://image.aladin.co.kr/product/26245/24/cover/k572738386_1.jpg', 10);

-- author
INSERT INTO authors (`author_name`, `author_type`) VALUE
    ('박상길', 'AUTHOR'),
    ('정진호', 'PAINTER'),
    ('이남희', 'AUTHOR'),
    ('김덕진', 'AUTHOR'),
    ('강민철', 'AUTHOR'),
    ('프롬프트 크리에이터', 'AUTHOR'),
    ('루 샤오펑', 'AUTHOR'),
    ('김진호', 'TRANSLATOR'),
    ('서지영', 'AUTHOR'),
    ('설근민', 'AUTHOR'),
    ('엘튼 스톤맨', 'AUTHOR'),
    ('심효섭', 'TRANSLATOR'),
    ('최원영', 'AUTHOR'),
    ('주홍철', 'AUTHOR'),
    ('알렉스 쉬', 'AUTHOR'),
    ('이병준', 'TRANSLATOR'),
    ('천인국', 'AUTHOR'),
    ('공용해', 'AUTHOR'),
    ('하상호', 'AUTHOR'),
    ('구덕회', 'AUTHOR'),
    ('사이토 고키', 'AUTHOR'),
    ('개앞맵시', 'TRANSLATOR'),
    ('마크 시먼', 'AUTHOR'),
    ('김현규', 'TRANSLATOR'),
    ('반병현', 'AUTHOR'),
    ('시난 오즈데미르', 'AUTHOR'),
    ('신병훈', 'TRANSLATOR'),
    ('롤랜드 백하우스', 'AUTHOR'),
    ('김준원', 'TRANSLATOR'),
    ('윤교준', 'TRANSLATOR'),
    ('박해선', 'AUTHOR'),
    ('이수진', 'AUTHOR'),
    ('에단 부에노 데 메스키타', 'AUTHOR'),
    ('앤서니 파울러', 'AUTHOR'),
    ('임형준', 'TRANSLATOR'),
    ('우재남', 'AUTHOR'),
    ('벤 아우파스', 'AUTHOR'),
    ('이병욱', 'TRANSLATOR'),
    ('아오키 에이타', 'AUTHOR'),
    ('서수환', 'TRANSLATOR'),
    ('송석리', 'AUTHOR'),
    ('황수빈', 'AUTHOR'),
    ('이정윤', 'AUTHOR'),
    ('정유진', 'AUTHOR'),
    ('스티브 클라브닉', 'AUTHOR'),
    ('캐럴 니컬스', 'AUTHOR'),
    ('권지용', 'TRANSLATOR'),
    ('알렉스 쉬, 산 람', 'AUTHOR'),
    ('이병준', 'TRANSLATOR'),
    ('미치오 카쿠', 'AUTHOR'),
    ('박병철', 'TRANSLATOR'),
    ('김경동', 'AUTHOR'),
    ('고죠 마사유키', 'AUTHOR'),
    ('정현', 'TRANSLATOR'),
    ('박경록', 'AUTHOR'),
    ('마이크 코헨', 'AUTHOR'),
    ('장정호', 'TRANSLATOR'),
    ('오렐리앙 제롱', 'AUTHOR'),
    ('리카이푸', 'AUTHOR'),
    ('천치우판', 'AUTHOR'),
    ('이현', 'TRANSLATOR'),
    ('고현민', 'AUTHOR'),
    ('길버트 스트랭', 'AUTHOR'),
    ('부산대학교 산업수학센터', 'TRANSLATOR'),
    ('최영규', 'AUTHOR'),
    ('정인근', 'AUTHOR'),
    ('마테우스 파쿠레', 'AUTHOR'),
    ('신진수', 'TRANSLATOR'),
    ('가짜연구소 인과추론팀', 'TRANSLATOR'),
    ('박지용', 'SUPERVISION'),
    ('알리 아미니안', 'AUTHOR'),
    ('알렉스 쉬', 'AUTHOR'),
    ('최종일', 'TRANSLATOR'),
    ('권경열', 'AUTHOR'),
    ('찰스 펫졸드', 'AUTHOR'),
    ('김현규', 'TRANSLATOR'),
    ('박상현', 'AUTHOR'),
    ('권원일', 'AUTHOR'),
    ('김선준', 'AUTHOR'),
    ('정기영', 'AUTHOR'),
    ('시바타 보요', 'AUTHOR'),
    ('강민', 'TRANSLATOR'),
    ('Abraham Silberschatz', 'AUTHOR'),
    ('Peter Baer Galvin', 'AUTHOR'),
    ('Greg Gagne', 'AUTHOR'),
    ('박민규', 'TRANSLATOR'),
    ('최지호', 'AUTHOR'),
    ('김희성', 'AUTHOR'),
    ('제레미 쿠비카', 'AUTHOR'),
    ('오현석', 'TRANSLATOR'),
    ('로버트 C. 마틴', 'AUTHOR'),
    ('이해영', 'TRANSLATOR'),
    ('박재호', 'TRANSLATOR'),
    ('김준성', 'AUTHOR'),
    ('브라이스 유', 'AUTHOR'),
    ('안상준', 'AUTHOR'),
    ('브라이언 W. 커니핸', 'AUTHOR'),
    ('하성창', 'TRANSLATOR'),
    ('김영우', 'AUTHOR'),
    ('백은빈', 'AUTHOR'),
    ('이성욱', 'AUTHOR'),
    ('권철민', 'AUTHOR'),
    ('조성호', 'AUTHOR'),
    ('이용태', 'AUTHOR'),
    ('한국정보통신기술협회', 'AUTHOR'),
    ('이현열', 'AUTHOR'),
    ('최범균', 'AUTHOR'),
    ('다니엘 드레셔', 'AUTHOR'),
    ('이병욱', 'TRANSLATOR'),
    ('김철수', 'AUTHOR'),
    ('Behrouz A. Forouzan', 'AUTHOR'),
    ('이재광', 'TRANSLATOR'),
    ('김중규', 'TRANSLATOR'),
    ('이경현', 'TRANSLATOR'),
    ('홍충선', 'TRANSLATOR'),
    ('오일석', 'AUTHOR'),
    ('조성준', 'AUTHOR'),
    ('조재희', 'AUTHOR'),
    ('김성범', 'AUTHOR'),
    ('이성임', 'AUTHOR'),
    ('조성배', 'AUTHOR'),
    ('이영훈', 'AUTHOR'),
    ('그웬 샤피라', 'AUTHOR'),
    ('토드 팔리노', 'AUTHOR'),
    ('라지니 시바람', 'AUTHOR'),
    ('크리트 페티', 'AUTHOR'),
    ('이동진', 'TRANSLATOR'),
    ('헤더림(임혜린)', 'AUTHOR'),
    ('백승호', 'AUTHOR'),
    ('다니엘 첸', 'AUTHOR'),
    ('시진', 'TRANSLATOR'),
    ('Robert W. Sebesta', 'AUTHOR'),
    ('하상호', 'TRANSLATOR'),
    ('유원희', 'TRANSLATOR'),
    ('김혜진', 'AUTHOR'),
    ('왕진영', 'AUTHOR'),
    ('DMeloper', 'AUTHOR'),
    ('나동빈', 'AUTHOR'),
    ('임석구', 'AUTHOR'),
    ('홍경호', 'AUTHOR'),
    ('존 맥코믹', 'AUTHOR'),
    ('민병교', 'TRANSLATOR'),
    ('김창준', 'AUTHOR'),
    ('김연희', 'AUTHOR'),
    ('마티 케이건', 'AUTHOR'),
    ('황진수', 'TRANSLATOR'),
    ('노버트 위너', 'AUTHOR'),
    ('김재영', 'TRANSLATOR'),
    ('이규남', 'AUTHOR'),
    ('조우진', 'AUTHOR'),
    ('김동민', 'AUTHOR'),
    ('김치수', 'AUTHOR'),
    ('이지영', 'AUTHOR'),
    ('진강훈', 'AUTHOR'),
    ('조태호', 'AUTHOR'),
    ('데이비드 포스터', 'AUTHOR'),
    ('박해선', 'TRANSLATOR'),
    ('김대수', 'AUTHOR'),
    ('이기창', 'AUTHOR'),
    ('조훈', 'AUTHOR'),
    ('심근우', 'AUTHOR'),
    ('문성주', 'AUTHOR'),
    ('고경희', 'AUTHOR'),
    ('이고잉', 'AUTHOR'),
    ('나가노 히로유키', 'AUTHOR'),
    ('서재원', 'TRANSLATOR');

-- book author 도서 50번까지
INSERT INTO book_author(author_id, book_id)
VALUES (1, 1),
       (2, 1),
       (3, 2),
       (4, 3),
       (5, 4),
       (6, 5),
       (5, 6),
       (7, 7),
       (8, 7),
       (9, 8),
       (10, 9),
       (11, 10),
       (12, 10),
       (13, 10),
       (13, 11),
       (14, 12),
       (15, 13),
       (16, 13),
       (17, 14),
       (18, 14),
       (19, 14),
       (20, 15),
       (21, 16),
       (22, 16),
       (23, 17),
       (24, 17),
       (25, 18),
       (26, 19),
       (27, 19),
       (28, 20),
       (29, 20),
       (30, 20),
       (31, 21),
       (32, 22),
       (33, 23),
       (34, 23),
       (35, 23),
       (31, 24),
       (36, 25),
       (37, 26),
       (38, 26),
       (39, 27),
       (40, 27),
       (86, 28),
       (54, 28),
       (41, 29),
       (42, 29),
       (43, 29),
       (44, 29),
       (45, 30),
       (46, 30),
       (47, 30),
       (15, 31),
       (48, 31),
       (16, 31),
       (49, 32),
       (50, 32),
       (156, 33),
       (51, 33),
       (52, 34),
       (53, 34),
       (54, 35),
       (55, 36),
       (56, 36),
       (57, 37),
       (31, 37),
       (58, 38),
       (59, 38),
       (60, 38),
       (61, 39),
       (62, 40),
       (63, 40),
       (17, 41),
       (64, 41),
       (65, 42),
       (66, 43),
       (67, 43),
       (68, 43),
       (69, 43),
       (70, 44),
       (15, 44),
       (72, 44),
       (73, 45),
       (74, 46),
       (24, 46),
       (75, 47),
       (76, 48),
       (77, 48),
       (78, 48),
       (79, 49),
       (80, 49),
       (81, 50),
       (82, 50),
       (83, 50),
       (84, 50);

-- Root Category --
INSERT INTO categories (category_name, category_depth, parent_category_id)
VALUES ('국내도서', 1, NULL);

-- Depth_2 --
INSERT INTO categories (category_name, category_depth, parent_category_id)
VALUES ('과학', 2, 1),
       ('컴퓨터/모바일', 2, 1),
       ('경제경영', 2, 1),
       ('대학교재/전문서적', 2, 1);

-- Depth_3 --
INSERT INTO categories (category_name, category_depth, parent_category_id)
VALUES ('프로그래밍 개발/방법론', 3, 3),
       ('인공지능', 3, 3),
       ('컴퓨터 공학', 3, 3),
       ('프로그래밍 언어', 3, 3),
       ('기초과학/교양과학', 3, 2),
       ('기업 경영', 3, 4),
       ('OS/Networking', 3, 3),
       ('공학계열', 3, 5),
       ('트렌드/미래전망', 3, 4),
       ('활용능력', 3, 3);

-- Depth_4 --
INSERT INTO categories (category_name, category_depth, parent_category_id)
VALUES ('소프트웨어 공학', 4, 8),
       ('경영전략/혁신', 4, 11),
       ('네트워크/데이터 통신', 4, 8),
       ('컴퓨터공학/전산학 개론', 4, 8),
       ('네트워크 구축', 4, 12),
       ('프로그래밍 기초/개발 방법론', 4, 6),
       ('컴퓨터공학', 4, 13),
       ('데이터베이스 개론', 4, 8),
       ('자료구조/알고리즘', 4, 8),
       ('데이터베이스 프로그래밍', 4, 6),
       ('게임 프로그래밍', 4, 6),
       ('컴퓨터공학/전산학 개론', 4, 8),
       ('전산수학(SPSS/MATLAB)', 4, 8),
       ('인공지능/빅데이터', 4, 14),
       ('프로그래밍 언어 기타', 4, 9),
       ('파이썬', 4, 9),
       ('신규 자격증/자격증 기타', 4, 15),
       ('네트워크/데이터 통신', 4, 6),
       ('웹 서비스/웹 프로그래밍', 4, 6),
       ('PHP', 4, 9),
       ('모바일/무선/임베디드 프로그래밍', 4, 6);

-- Depth_5 --
INSERT INTO categories (category_name, category_depth, parent_category_id)
VALUES ('데이터베이스 개론', 5, 22),
       ('MySQL', 5, 25),
       ('운영체제/소프트웨어 공학', 5, 22),
       ('SQL', 5, 25),
       ('데이터베이스 구축', 5, 25);

-- book category
INSERT INTO book_category(book_id, category_id)
VALUES (1, 10),
       (2, 16),
       (3, 17),
       (4, 33),
       (5, 7),
       (6, 33),
       (7, 27),
       (8, 7),
       (9, 7),
       (10, 20),
       (11, 27),
       (12, 21),
       (13, 27),
       (14, 23),
       (15, 16),
       (16, 23),
       (17, 16),
       (18, 27),
       (19, 24),
       (20, 24),
       (21, 7),
       (22, 16),
       (23, 24),
       (24, 23),
       (25, 25),
       (26, 7),
       (27, 26),
       (28, 24),
       (29, 23),
       (30, 21),
       (31, 27),
       (32, 10),
       (33, 7),
       (34, 10),
       (35, 24),
       (36, 27),
       (37, 28),
       (38, 29),
       (39, 30),
       (40, 19),
       (41, 24),
       (42, 37),
       (43, 31),
       (44, 7),
       (45, 7),
       (46, 19),
       (47, 24),
       (48, 32),
       (49, 24),
       (50, 16);

-- file
-- 10번까지 책 진짜 이미지
INSERT INTO files(file_id, file_name, file_url, file_type)
VALUES (1, "Book1DetailImage", "https://shopping-phinf.pstatic.net/main_3918857/39188570637.20230920072131.jpg",
        "BOOK"),
       (2, "Book2DetailImage", "https://shopping-phinf.pstatic.net/main_4649334/46493341619.20240321071030.jpg",
        "BOOK"),
       (3, "Book3DetailImage", "https://shopping-phinf.pstatic.net/main_4320558/43205584618.20231013091513.jpg",
        "BOOK"),
       (4, "Book4DetailImage", "https://shopping-phinf.pstatic.net/main_4686813/46868132618.20240406070953.jpg",
        "BOOK"),
       (5, "Book5DetailImage", "https://shopping-phinf.pstatic.net/main_4519669/45196695631.20240113070853.jpg",
        "BOOK"),
       (6, "Book6DetailImage", "https://shopping-phinf.pstatic.net/main_3382462/33824626625.20230627104236.jpg",
        "BOOK"),
       (7, "Book7DetailImage", "https://shopping-phinf.pstatic.net/main_4619779/46197794618.20240306092054.jpg",
        "BOOK"),
       (8, "Book8DetailImage", "https://shopping-phinf.pstatic.net/main_4598028/45980281640.20240224093654.jpg",
        "BOOK"),
       (9, "Book9DetailImage", "https://shopping-phinf.pstatic.net/main_4375787/43757872621.20231102092116.jpg",
        "BOOK"),
       (10, "Book10DetailImage", "https://shopping-phinf.pstatic.net/main_4223724/42237244619.20230927071451.jpg",
        "BOOK");

-- 11 ~ 100번까지 책 더미 이미지

INSERT INTO files(file_id,file_name, file_url,file_type) values
(11,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(12,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(13,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(14,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(15,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(16,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(17,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(18,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(19,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(20,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(21,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(22,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(23,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(24,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(25,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(26,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(27,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(28,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(29,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(30,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(31,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(32,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(33,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(34,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(35,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(36,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(37,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(38,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(39,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(40,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(41,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(42,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(43,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(44,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(45,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(46,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(47,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(48,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(49,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(50,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(51,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(52,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(53,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(54,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(55,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(56,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(57,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(58,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(59,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(60,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(61,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(62,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(63,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(64,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(65,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(66,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(67,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(68,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(69,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(70,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(71,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(72,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(73,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(74,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(75,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(76,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(77,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(78,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(79,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(80,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(81,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(82,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(83,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(84,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(85,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(86,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(87,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(88,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(89,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(90,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(91,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(92,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(93,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(94,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(95,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(96,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(97,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(98,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(99,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK"),
(100,"defaultImage", "https://kr1-api-object-storage.nhncloudservice.com/v1/AUTH_fcb81f74e379456b8ca0e091d351a7af/store99/detail/default.png" ,"BOOK");


-- book image

INSERT INTO book_images (file_id, book_id, book_image_type) values
(1,1, "DETAIL"),
(2,2, "DETAIL"),
(3,3, "DETAIL"),
(4,4, "DETAIL"),
(5,5, "DETAIL"),
(6,6, "DETAIL"),
(7,7, "DETAIL"),
(8,8, "DETAIL"),
(9,9, "DETAIL"),
(10,10,"DETAIL"),
(11,11,"DETAIL"),
(12,12,"DETAIL"),
(13,13,"DETAIL"),
(14,14,"DETAIL"),
(15,15,"DETAIL"),
(16,16,"DETAIL"),
(17,17,"DETAIL"),
(18,18,"DETAIL"),
(19,19,"DETAIL"),
(20,20,"DETAIL"),
(21,21,"DETAIL"),
(22,22,"DETAIL"),
(23,23,"DETAIL"),
(24,24,"DETAIL"),
(25,25,"DETAIL"),
(26,26,"DETAIL"),
(27,27,"DETAIL"),
(28,28,"DETAIL"),
(29,29,"DETAIL"),
(30,30,"DETAIL"),
(31,31,"DETAIL"),
(32,32,"DETAIL"),
(33,33,"DETAIL"),
(34,34,"DETAIL"),
(35,35,"DETAIL"),
(36,36,"DETAIL"),
(37,37,"DETAIL"),
(38,38,"DETAIL"),
(39,39,"DETAIL"),
(40,40,"DETAIL"),
(41,41,"DETAIL"),
(42,42,"DETAIL"),
(43,43,"DETAIL"),
(44,44,"DETAIL"),
(45,45,"DETAIL"),
(46,46,"DETAIL"),
(47,47,"DETAIL"),
(48,48,"DETAIL"),
(49,49,"DETAIL"),
(50,50,"DETAIL"),
(51,51, "DETAIL"),
(52,52, "DETAIL"),
(53,53, "DETAIL"),
(54,54, "DETAIL"),
(55,55, "DETAIL"),
(56,56, "DETAIL"),
(57,57, "DETAIL"),
(58,58, "DETAIL"),
(59,59, "DETAIL"),
(60,60,"DETAIL"),
(61,61,"DETAIL"),
(62,62,"DETAIL"),
(63,63,"DETAIL"),
(64,64,"DETAIL"),
(65,65,"DETAIL"),
(66,66,"DETAIL"),
(67,67,"DETAIL"),
(68,68,"DETAIL"),
(69,69,"DETAIL"),
(70,70,"DETAIL"),
(71,71,"DETAIL"),
(72,72,"DETAIL"),
(73,73,"DETAIL"),
(74,74,"DETAIL"),
(75,75,"DETAIL"),
(76,76,"DETAIL"),
(77,77,"DETAIL"),
(78,78,"DETAIL"),
(79,79,"DETAIL"),
(80,80,"DETAIL"),
(81,81,"DETAIL"),
(82,82,"DETAIL"),
(83,83,"DETAIL"),
(84,84,"DETAIL"),
(85,85,"DETAIL"),
(86,86,"DETAIL"),
(87,87,"DETAIL"),
(88,88,"DETAIL"),
(89,89,"DETAIL"),
(90,90,"DETAIL"),
(91,91,"DETAIL"),
(92,92,"DETAIL"),
(93,93,"DETAIL"),
(94,94,"DETAIL"),
(95,95,"DETAIL"),
(96,96,"DETAIL"),
(97,97,"DETAIL"),
(98,98,"DETAIL"),
(99,99,"DETAIL"),
(100,100,"DETAIL");


-- tag
INSERT INTO tags (tag_name)
VALUES ('#분철'),
       ('#업무능력향상'),
       ('#컴공'),
       ('#개발자'),
       ('#코딩'),
       ('#자바'),
       ('#파이썬'),
       ('#성장하는개발자'),
       ('#AI'),
       ('#ChatGPT'),
       ('#개발자자기계발');

-- book tag
INSERT INTO book_tag (book_id, tag_id)
VALUES (1, 1),
       (1, 9),
       (1, 10),
       (2, 1),
       (2, 3),
       (2, 8),
       (3, 1),
       (3, 9),
       (3, 2),
       (4, 1),
       (4, 3),
       (4, 4),
       (5, 1),
       (5, 10),
       (6, 1),
       (6, 3),
       (6, 4),
       (7, 1),
       (7, 3),
       (7, 8),
       (8, 1),
       (8, 9),
       (8, 7),
       (9, 1),
       (9, 10),
       (9, 11),
       (10, 1),
       (10, 3),
       (10, 8),
       (11, 1),
       (11, 2),
       (12, 1),
       (12, 3),
       (12, 5),
       (12, 6),
       (13, 1),
       (13, 4),
       (14, 1),
       (14, 6),
       (15, 1);



insert into orders
(order_id,order_type,order_transit_at,order_receiver_name,order_receiver_number,
 order_address,order_address_detail,order_address_code,order_total_cost,consumer_id)
    values
    (1,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",10000,1),
    (2,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",11000,1),
    (3,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",12000,1),
    (4,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",13000,1),
    (5,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",14000,1),
    (6,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",15000,1),
    (7,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",16000,1),
    (8,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",17000,1),
    (9,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",18000,1),
    (10,"USER", CURRENT_TIMESTAMP, "tester","01012345678","there", "here", "12345",19000,1);

insert into order_book (order_book_id,order_book_price,order_book_quantity,book_id,order_id)
values
    (1,"10000","1",1,7),
    (2,"11000","1",1,7),
    (3,"12000","1",11,7),
    (4,"13000","1",21,7),
    (5,"14000","1",31,7),
    (6,"15000","1",11,7),
    (7,"16000","1",1,7),
    (8,"17000","1",31,7),
    (9,"18000","1",31,7),
    (10,"19000","1",31,7);

